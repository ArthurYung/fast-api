{"version":3,"sources":["page/api/Menu.tsx","container/history.ts","utils/date.ts","components/ResultCard.tsx","components/HistoryView.tsx","page/api/App.tsx"],"names":["withRouter","history","menuList","className","List","map","i","name","id","ListItem","key","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","push","connect","state","historyData","dateFormat","date","format","Boolean","flags","yyyy","Date","getFullYear","toString","mm","getMonth","slice","dd","getDate","HH","getHours","MM","getMinutes","SS","getSeconds","replace","match","MyCard","info","useState","visible","setVisible","anchorEl","setAnchorEl","showMenu","resultClassName","status","activeClassName","timerChildList","handleClose","deepChild","child","root","forEach","useTime","children","length","setTimeout","Grow","in","Card","CardHeader","avatar","Avatar","action","event","currentTarget","title","subheader","CardContent","childInfo","Divider","keepMounted","open","onClose","PaperProps","style","width","MenuItem","timerInfo","ResultCard","MenuList","interpreter","getApiMenuList","Test","routes","route"],"mappings":"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","file":"static/js/6.a117e033.chunk.js","sourcesContent":["import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TripOrigin from \"@material-ui/icons/TripOrigin\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n\ninterface ApiMenuInfo {\n  name: string;\n  id: number;\n}\ninterface MenuProps extends RouteComponentProps {\n  menuList: ApiMenuInfo[];\n}\n\nconst Menu: React.FC<MenuProps> = ({ history, menuList }: MenuProps) => (\n  <div className={\"api-menu\"}>\n    <List>\n      {menuList.map(({ name, id }: ApiMenuInfo, i) => (\n        <ListItem key={i} className={\"api-menu-item\"}>\n          <TripOrigin />\n          <ListItemText primary={name} />\n          <ListItemSecondaryAction>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"action\"\n              onClick={() => history.push(`/api/${id}`)}\n            >\n              <PlayArrow />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </List>\n  </div>\n);\n\nexport default withRouter(Menu);\n","import { connect } from \"react-redux\";\nexport default connect((state: any) => ({ historyData: state.history }));\n","export function dateFormat(date?: Date | number, format?: string): string {\n  let token = /d{1,4}|m{1,4}|yy(?:yy)?|H{1,2}|M{1,2}|S{1,2}/g;\n  if (Boolean(date)) {\n    date = date instanceof Date ? date : new Date(date as number);\n    let flags: { [x: string]: string } = {\n      yyyy: date.getFullYear().toString(),\n      mm: (\"0\" + (date.getMonth() + 1)).slice(-2),\n      dd: (\"0\" + date.getDate()).slice(-2),\n      HH: (\"0\" + date.getHours()).slice(-2),\n      MM: (\"0\" + date.getMinutes()).slice(-2),\n      SS: (\"0\" + date.getSeconds()).slice(-2)\n    };\n    if (!format) {\n      // 默认显示格式\n      format = \"yyyy-mm-dd HH:MM:SS\";\n    }\n    format = format.replace(token, function(match: string) {\n      if (match in flags) {\n        return flags[match];\n      }\n      return \"\";\n    });\n    return format;\n  }\n  return \"\";\n}\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Grow from \"@material-ui/core/Grow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport { TimerDataInfo } from \"@/actions/history\";\nimport { dateFormat } from \"@/utils/date\";\ninterface ChildTimerInfo {\n  name: string;\n  useTime: number;\n}\n\nconst MyCard: React.FC<{ info: TimerDataInfo }> = ({ info }) => {\n  const [visible, setVisible] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const showMenu = Boolean(anchorEl);\n  const resultClassName = info.status === 2 ? \"result-error\" : \"result-success\";\n  const activeClassName =\n    info.status === 2 ? \"result-active-error\" : \"result-active-success\";\n\n  const timerChildList: ChildTimerInfo[] = [];\n\n  function deepChild(child: TimerDataInfo[], root: string = \"\") {\n    child.forEach((info: TimerDataInfo) => {\n      timerChildList.push({\n        name: root + info.name,\n        useTime: info.useTime\n      });\n      if (info.children.length) {\n        deepChild(info.children, info.name);\n      }\n    });\n  }\n\n  function openSettingMenu(event: React.MouseEvent<HTMLElement>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  deepChild(info.children);\n\n  setTimeout(() => {\n    setVisible(true);\n  }, 50);\n\n  return (\n    <aside className=\"result-card\">\n      <Grow in={visible}>\n        <Card>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"recipe\" className={resultClassName}>\n                {info.status === 1 ? <Check /> : <Clear />}\n              </Avatar>\n            }\n            action={\n              <IconButton aria-label=\"settings\" onClick={openSettingMenu}>\n                <MoreVertIcon />\n              </IconButton>\n            }\n            title={info.name}\n            subheader={dateFormat(info.date, \"mm-dd HH:MM:SS\")}\n            className=\"result-card-header\"\n          />\n          <CardContent>\n            {timerChildList.map((childInfo: ChildTimerInfo, i: number) => (\n              <div className=\"result-card-item\" key={i}>\n                <span className=\"card-item-root\">{childInfo.name}</span>\n                <span className=\"card-item-time\">{childInfo.useTime}ms</span>\n              </div>\n            ))}\n          </CardContent>\n          <Divider />\n          <CardContent>\n            <div className={activeClassName}>use time: {info.useTime}ms</div>\n          </CardContent>\n        </Card>\n      </Grow>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={showMenu}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            width: 120\n          }\n        }}\n      >\n        <MenuItem onClick={handleClose}>delete</MenuItem>\n        <MenuItem onClick={handleClose}>save</MenuItem>\n      </Menu>\n    </aside>\n  );\n};\n\nexport default MyCard;\n","import React from \"react\";\nimport connect from \"../container/history\";\nimport { TimerDataInfo } from \"../actions/history\";\nimport ResultCard from \"./ResultCard\";\nconst HistoryView: React.FC<{ historyData: TimerDataInfo[] }> = ({\n  historyData\n}) => {\n  return (\n    <aside className=\"history-box\">\n      {historyData.map((timerInfo: TimerDataInfo) => (\n        <ResultCard key={timerInfo.id} info={timerInfo} />\n      ))}\n    </aside>\n  );\n};\n\nexport default connect(HistoryView);\n","import React from \"react\";\nimport { RouteWithSubRoutes } from \"@/router/index\";\nimport { RouterMap } from \"@/router/types\";\nimport Menu from \"./Menu\";\nimport interpreter from \"@/utils/baseStatement\";\nimport HistoryView from \"@/components/HistoryView\";\nconst MenuList = interpreter.getApiMenuList();\n\nconst Test = ({ routes }: { routes: RouterMap[] }) => {\n  return (\n    <div className={\"api-box\"}>\n      <Menu menuList={MenuList} />\n      <div className={\"api-view\"}>\n        <div className={\"api-context\"}>\n          {routes.map((route: RouterMap, i: number) => (\n            <RouteWithSubRoutes key={i} {...route} />\n          ))}\n        </div>\n        <HistoryView />\n      </div>\n    </div>\n  );\n};\nexport default Test;\n"],"sourceRoot":""}