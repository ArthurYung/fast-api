{"version":3,"sources":["container/apiMain.ts","components/LoopCount.tsx","assets/css/api.module.scss","page/api/View.tsx"],"names":["connect","state","progress","currCode","dispatch","updateProgress","UpdateProgress","updateHistoryList","info","updateHistoryResultData","LoopCount","value","change","Fragment","variant","gutterBottom","aria-label","name","className","onChange","e","color","module","exports","common","match","history","useState","setValue","id","params","apiInfo","apiInterpreter","getApiInfo","BaseCodeHtml","Prism","highlight","baseCode","languages","javascript","apiStyle","main","button","onClick","push","pathname","setTimeout","timerData","fn","Number","times","subTitle","root","label","expression","dangerouslySetInnerHTML","__html"],"mappings":"iHAAA,4BAGeA,gBACb,SAACC,GACC,MAAO,CAAEC,SAAUD,EAAMC,SAAUC,SAAUF,EAAME,WAErD,SAACC,GAAD,MAAoB,CAClBC,eADkB,SACHJ,GACbG,EAASE,YAAeL,KAE1BM,kBAJkB,SAIAC,GAChBJ,EAASK,YAAwBD,S,iCCZvC,+CAwCeE,IA9B6B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACpD,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAYC,QAAQ,YAAYC,cAAY,GAA5C,mBAGA,kBAAC,IAAD,CACEC,aAAW,SACXC,KAAK,UACLC,UAAW,QACXP,MAAOA,EACPQ,SAAU,SAACC,EAAQT,GAAT,OAA2BC,EAAOD,KAE5C,kBAAC,IAAD,CAAOA,MAAM,QAAQU,MAAM,YAC3B,0BAAMH,UAAW,cAAjB,aACA,kBAAC,IAAD,CAAOP,MAAM,QAAQU,MAAM,YAC3B,0BAAMH,UAAW,cAAjB,aACA,kBAAC,IAAD,CAAOP,MAAM,SAASU,MAAM,YAC5B,0BAAMH,UAAW,cAAjB,cACA,kBAAC,IAAD,CAAOP,MAAM,SAASU,MAAM,YAC5B,0BAAMH,UAAW,cAAjB,cACA,kBAAC,IAAD,CAAOP,MAAM,UAAUU,MAAM,YAC7B,0BAAMH,UAAW,cAAjB,YACA,kBAAC,IAAD,CAAOP,MAAM,WAAWU,MAAM,YAC9B,0BAAMH,UAAW,cAAjB,iB,oBCjCRI,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,SAAW,sBAAsB,MAAQ,qB,gMC6GlGC,sBArFmB,SAAC,GAM5B,IALLC,EAKI,EALJA,MACAvB,EAII,EAJJA,SACAG,EAGI,EAHJA,eACAE,EAEI,EAFJA,kBACAmB,EACI,EADJA,QACI,EACsBC,mBAAS,SAD/B,mBACGhB,EADH,KACUiB,EADV,KAEIC,EAAOJ,EAAMK,OAAbD,GACFE,EAAuBC,IAAeC,WAAWJ,GACjDK,EAAuBC,IAAMC,UACjCL,EAAQM,SACRF,IAAMG,UAAUC,WAChB,cAwBF,OACE,yBAAKrB,UAAW,mBACd,6BAASA,UAAWsB,IAASC,MAC3B,iCACE,kBAAC,IAAD,CAAY3B,QAAQ,KAAKC,cAAY,GAArC,WACOgB,EAAQd,OAEf,kBAAC,IAAD,CACEH,QAAQ,YACRO,MAAM,UACNH,UAAWsB,IAASE,OACpBC,QAlBa,WACrBjB,EAAQkB,KAAK,CACXC,SAAU,kBACV5C,MAAO8B,MAWH,YAOE,kBAAC,IAAD,OAEF,kBAAC,IAAD,CACEjB,QAAQ,YACRO,MAAM,UACNH,UAAWsB,IAASE,OACpBC,QArCgB,WACpBzC,IACJG,GAAe,GACfyC,WAAW,WACT,IAAMC,EAA2BhB,EAAQiB,GAAGC,OAAOtC,IACnDJ,EAAkBwC,GAClB1C,GAAe,IACd,QA0BG,WAOE,kBAAC,IAAD,QAGJ,6BAASa,UAAWsB,IAASU,OAC3B,kBAAC,IAAD,CAAWvC,MAAOA,EAAOC,OAhDZ,SAACD,GACpBiB,EAASjB,OAiDL,6BAASO,UAAWsB,IAASW,UAC3B,kBAAC,IAAD,CAAYrC,QAAQ,YAAYC,cAAY,GACzCgB,EAAQqB,KAAR,+BAC2BrB,EAAQqB,MAChC,mBAEN,kBAAC,IAAD,CAAMC,MAAOtB,EAAQuB,cAEvB,iCACE,yBACEpC,UAAU,qCACVqC,wBAAyB,CAAEC,OAAQtB","file":"static/js/11.ed72bd4e.chunk.js","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { UpdateProgress } from \"../actions/home\";\r\nimport { updateHistoryResultData, TimerDataInfo } from \"../actions/history\";\r\nexport default connect(\r\n  (state: any) => {\r\n    return { progress: state.progress, currCode: state.currCode };\r\n  },\r\n  (dispatch: any) => ({\r\n    updateProgress(state: boolean) {\r\n      dispatch(UpdateProgress(state));\r\n    },\r\n    updateHistoryList(info: TimerDataInfo) {\r\n      dispatch(updateHistoryResultData(info));\r\n    }\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\ninterface LoopCountProps {\r\n  value: string;\r\n  change: (value: string) => void;\r\n}\r\n\r\nconst LoopCount: React.FC<LoopCountProps> = ({ value, change }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Loop Count($n):\r\n      </Typography>\r\n      <RadioGroup\r\n        aria-label=\"gender\"\r\n        name=\"gender1\"\r\n        className={\"radio\"}\r\n        value={value}\r\n        onChange={(e: any, value: string) => change(value)}\r\n      >\r\n        <Radio value=\"10000\" color=\"primary\" />\r\n        <span className={\"radioLabel\"}>10&thous.</span>\r\n        <Radio value=\"50000\" color=\"primary\" />\r\n        <span className={\"radioLabel\"}>50&thous.</span>\r\n        <Radio value=\"100000\" color=\"primary\" />\r\n        <span className={\"radioLabel\"}>100&thous.</span>\r\n        <Radio value=\"500000\" color=\"primary\" />\r\n        <span className={\"radioLabel\"}>500&thous.</span>\r\n        <Radio value=\"1000000\" color=\"primary\" />\r\n        <span className={\"radioLabel\"}>1&milli.</span>\r\n        <Radio value=\"10000000\" color=\"primary\" />\r\n        <span className={\"radioLabel\"}>10&milli.</span>\r\n      </RadioGroup>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoopCount;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"api_main__e3S5o\",\"button\":\"api_button__1Kkiy\",\"subTitle\":\"api_subTitle__33X9j\",\"times\":\"api_times__1Lkyo\"};","import React, { useState } from \"react\";\r\n// eslint-disable-next-line\r\nimport { match } from \"react-router-dom\";\r\nimport { ApiParams } from \"@/router/types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport apiStyle from \"@/assets/css/api.module.scss\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport apiInterpreter from \"@/utils/baseStatement\";\r\nimport Prism from \"prismjs\";\r\nimport Code from \"@material-ui/icons/Code\";\r\nimport Replay from \"@material-ui/icons/Replay\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { BaseApiInfo } from \"@/utils/types\";\r\nimport { TimerDataInfo } from \"@/actions/history\";\r\nimport common from \"@/container/apiMain\";\r\nimport LoopCount from \"@/components/LoopCount\";\r\n\r\ninterface viewProps {\r\n  match: match<ApiParams>;\r\n  progress: boolean;\r\n  updateProgress: (status: boolean) => void;\r\n  updateHistoryList: (info: TimerDataInfo) => void;\r\n  history: any;\r\n}\r\n\r\nconst View: React.FC<viewProps> = ({\r\n  match,\r\n  progress,\r\n  updateProgress,\r\n  updateHistoryList,\r\n  history\r\n}) => {\r\n  const [value, setValue] = useState(\"50000\");\r\n  const { id } = match.params;\r\n  const apiInfo: BaseApiInfo = apiInterpreter.getApiInfo(id);\r\n  const BaseCodeHtml: string = Prism.highlight(\r\n    apiInfo.baseCode,\r\n    Prism.languages.javascript,\r\n    \"javascript\"\r\n  );\r\n\r\n  const handleChange = (value: string) => {\r\n    setValue(value);\r\n  };\r\n\r\n  const runCurrentApiTest = () => {\r\n    if (progress) return;\r\n    updateProgress(true);\r\n    setTimeout(() => {\r\n      const timerData: TimerDataInfo = apiInfo.fn(Number(value));\r\n      updateHistoryList(timerData);\r\n      updateProgress(false);\r\n    }, 200);\r\n  };\r\n\r\n  const runEditApiTest = () => {\r\n    history.push({\r\n      pathname: \"/custom/?type=2\",\r\n      state: apiInfo\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={\"api-content-box\"}>\r\n      <article className={apiStyle.main}>\r\n        <section>\r\n          <Typography variant=\"h3\" gutterBottom>\r\n            {`#${apiInfo.name}`}\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"inherit\"\r\n            className={apiStyle.button}\r\n            onClick={runEditApiTest}\r\n          >\r\n            Free Code\r\n            <Code />\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={apiStyle.button}\r\n            onClick={runCurrentApiTest}\r\n          >\r\n            Run Test\r\n            <Replay />\r\n          </Button>\r\n        </section>\r\n        <section className={apiStyle.times}>\r\n          <LoopCount value={value} change={handleChange} />\r\n        </section>\r\n        <section className={apiStyle.subTitle}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            {apiInfo.root\r\n              ? `This api is send for ${apiInfo.root}`\r\n              : \"Is base runtime\"}\r\n          </Typography>\r\n          <Chip label={apiInfo.expression} />\r\n        </section>\r\n        <section>\r\n          <pre\r\n            className=\"language-javascript pre-javascript\"\r\n            dangerouslySetInnerHTML={{ __html: BaseCodeHtml }}\r\n          />\r\n        </section>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default common(View);\r\n"],"sourceRoot":""}