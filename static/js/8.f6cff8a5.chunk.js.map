{"version":3,"sources":["assets/css/api.module.scss","page/api/View.tsx","container/apiMain.ts"],"names":["module","exports","common","match","progress","updateProgress","updateHistoryList","history","useState","value","setValue","id","params","apiInfo","apiInterpreter","getApiInfo","BaseCodeHtml","Prism","highlight","baseCode","languages","javascript","className","apiStyle","main","variant","gutterBottom","name","color","button","onClick","push","pathname","state","setTimeout","timerData","fn","Number","times","aria-label","radio","onChange","e","target","radioLabel","subTitle","root","label","expression","dangerouslySetInnerHTML","__html","connect","dispatch","UpdateProgress","info","updateHistoryResultData"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,SAAW,sBAAsB,MAAQ,mBAAmB,WAAa,wBAAwB,MAAQ,qB,wMC8HlKC,sBArGmB,SAAC,GAM5B,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,QACI,EACsBC,mBAAS,SAD/B,mBACGC,EADH,KACUC,EADV,KAEIC,EAAOR,EAAMS,OAAbD,GACFE,EAAuBC,IAAeC,WAAWJ,GACjDK,EAAuBC,IAAMC,UACjCL,EAAQM,SACRF,IAAMG,UAAUC,WAChB,cAoBF,OACE,yBAAKC,UAAW,mBACd,6BAASA,UAAWC,IAASC,MAC3B,iCACE,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,WACOb,EAAQc,OAEf,kBAAC,IAAD,CACEF,QAAQ,YACRG,MAAM,UACNN,UAAWC,IAASM,OACpBC,QAjBa,WACrBvB,EAAQwB,KAAK,CACXC,SAAU,kBACVC,MAAOpB,MAUH,YAOE,kBAAC,IAAD,OAEF,kBAAC,IAAD,CACEY,QAAQ,YACRG,MAAM,UACNN,UAAWC,IAASM,OACpBC,QAnCgB,WACpB1B,IACJC,GAAe,GACf6B,WAAW,WACT,IAAMC,EAA2BtB,EAAQuB,GAAGC,OAAO5B,IACnDH,EAAkB6B,GAClB9B,GAAe,IACd,QAwBG,WAOE,kBAAC,IAAD,QAGJ,6BAASiB,UAAWC,IAASe,OAC3B,kBAAC,IAAD,CAAYb,QAAQ,YAAYC,cAAY,GAA5C,eAGA,kBAAC,IAAD,CACEa,aAAW,SACXZ,KAAK,UACLL,UAAWC,IAASiB,MACpB/B,MAAOA,EACPgC,SArDV,SAAsBC,GACpBhC,EAASgC,EAAEC,OAAOlC,SAsDV,kBAAC,IAAD,CAAOA,MAAM,QAAQmB,MAAM,YAC3B,0BAAMN,UAAWC,IAASqB,YAA1B,SACA,kBAAC,IAAD,CAAOnC,MAAM,SAASmB,MAAM,YAC5B,0BAAMN,UAAWC,IAASqB,YAA1B,UACA,kBAAC,IAAD,CAAOnC,MAAM,SAASmB,MAAM,YAC5B,0BAAMN,UAAWC,IAASqB,YAA1B,UACA,kBAAC,IAAD,CAAOnC,MAAM,UAAUmB,MAAM,YAC7B,0BAAMN,UAAWC,IAASqB,YAA1B,WACA,kBAAC,IAAD,CAAOnC,MAAM,WAAWmB,MAAM,YAC9B,0BAAMN,UAAWC,IAASqB,YAA1B,cAGJ,6BAAStB,UAAWC,IAASsB,UAC3B,kBAAC,IAAD,CAAYpB,QAAQ,YAAYC,cAAY,GACzCb,EAAQiC,KAAR,+BAC2BjC,EAAQiC,MAChC,mBAEN,kBAAC,IAAD,CAAMC,MAAOlC,EAAQmC,cAEvB,iCACE,yBACE1B,UAAU,qCACV2B,wBAAyB,CAAEC,OAAQlC,W,gCCvH/C,4BAGemC,gBACb,SAAClB,GAAD,MAAiB,CAAE7B,SAAU6B,EAAM7B,WACnC,SAACgD,GAAD,MAAoB,CAClB/C,eADkB,SACH4B,GACbmB,EAASC,YAAepB,KAE1B3B,kBAJkB,SAIAgD,GAChBF,EAASG,YAAwBD","file":"static/js/8.f6cff8a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"api_main__3zSMq\",\"button\":\"api_button__3gjqR\",\"subTitle\":\"api_subTitle__27EYY\",\"radio\":\"api_radio__2HqWc\",\"radioLabel\":\"api_radioLabel__21flh\",\"times\":\"api_times__2pGh6\"};","import React, { useState } from \"react\";\n// eslint-disable-next-line\nimport { match } from \"react-router-dom\";\nimport { ApiParams } from \"@/router/types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport apiStyle from \"@/assets/css/api.module.scss\";\nimport Button from \"@material-ui/core/Button\";\nimport apiInterpreter from \"@/utils/baseStatement\";\nimport Prism from \"prismjs\";\nimport Code from \"@material-ui/icons/Code\";\nimport Replay from \"@material-ui/icons/Replay\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { BaseApiInfo } from \"@/utils/types\";\nimport { TimerDataInfo } from \"@/actions/history\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport common from \"@/container/apiMain\";\n\ninterface viewProps {\n  match: match<ApiParams>;\n  progress: boolean;\n  updateProgress: (status: boolean) => void;\n  updateHistoryList: (info: TimerDataInfo) => void;\n  history: any;\n}\n\nconst View: React.FC<viewProps> = ({\n  match,\n  progress,\n  updateProgress,\n  updateHistoryList,\n  history,\n}) => {\n  const [value, setValue] = useState(\"50000\");\n  const { id } = match.params;\n  const apiInfo: BaseApiInfo = apiInterpreter.getApiInfo(id);\n  const BaseCodeHtml: string = Prism.highlight(\n    apiInfo.baseCode,\n    Prism.languages.javascript,\n    \"javascript\"\n  );\n  function handleChange(e: any) {\n    setValue(e.target.value);\n  }\n  const runCurrentApiTest = () => {\n    if (progress) return;\n    updateProgress(true);\n    setTimeout(() => {\n      const timerData: TimerDataInfo = apiInfo.fn(Number(value));\n      updateHistoryList(timerData);\n      updateProgress(false);\n    }, 200);\n  };\n  const runEditApiTest = () => {\n    history.push({\n      pathname: \"/custom/?type=2\",\n      state: apiInfo,\n    });\n  };\n  return (\n    <div className={\"api-content-box\"}>\n      <article className={apiStyle.main}>\n        <section>\n          <Typography variant=\"h3\" gutterBottom>\n            {`#${apiInfo.name}`}\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"inherit\"\n            className={apiStyle.button}\n            onClick={runEditApiTest}\n          >\n            Free Code\n            <Code />\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={apiStyle.button}\n            onClick={runCurrentApiTest}\n          >\n            Run Test\n            <Replay />\n          </Button>\n        </section>\n        <section className={apiStyle.times}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Loop Count:\n          </Typography>\n          <RadioGroup\n            aria-label=\"gender\"\n            name=\"gender1\"\n            className={apiStyle.radio}\n            value={value}\n            onChange={handleChange}\n          >\n            <Radio value=\"50000\" color=\"primary\" />\n            <span className={apiStyle.radioLabel}>50000</span>\n            <Radio value=\"100000\" color=\"primary\" />\n            <span className={apiStyle.radioLabel}>100000</span>\n            <Radio value=\"500000\" color=\"primary\" />\n            <span className={apiStyle.radioLabel}>500000</span>\n            <Radio value=\"1000000\" color=\"primary\" />\n            <span className={apiStyle.radioLabel}>1000000</span>\n            <Radio value=\"10000000\" color=\"primary\" />\n            <span className={apiStyle.radioLabel}>10000000</span>\n          </RadioGroup>\n        </section>\n        <section className={apiStyle.subTitle}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            {apiInfo.root\n              ? `This api is send for ${apiInfo.root}`\n              : \"Is base runtime\"}\n          </Typography>\n          <Chip label={apiInfo.expression} />\n        </section>\n        <section>\n          <pre\n            className=\"language-javascript pre-javascript\"\n            dangerouslySetInnerHTML={{ __html: BaseCodeHtml }}\n          />\n        </section>\n      </article>\n    </div>\n  );\n};\n\nexport default common(View);\n","import { connect } from \"react-redux\";\nimport { UpdateProgress } from \"../actions/home\";\nimport { updateHistoryResultData, TimerDataInfo } from \"../actions/history\";\nexport default connect(\n  (state: any) => ({ progress: state.progress }),\n  (dispatch: any) => ({\n    updateProgress(state: boolean) {\n      dispatch(UpdateProgress(state));\n    },\n    updateHistoryList(info: TimerDataInfo) {\n      dispatch(updateHistoryResultData(info));\n    }\n  })\n);\n"],"sourceRoot":""}