{"version":3,"sources":["components/Message.tsx","utils/codeInfoCache.ts","container/history.ts","utils/date.ts","components/ResultCard.tsx","components/CollectorList.tsx","components/HistoryView.tsx","components/Editor.tsx","utils/transformCommon.ts","utils/codeTransform.ts","utils/codeTimer.ts","container/code.ts","page/code/Content.tsx","page/code/App.tsx"],"names":["SnackBarIcon","type","Message","message","visible","closed","anchorOrigin","vertical","horizontal","autoHideDuration","open","onClose","event","reason","className","aria-describedby","id","CodeInfoCache","setCodeInfoCache","baseInfo","nameMap","getCodeInfoCache","getCodeInfoName","key","codeInfo","getNameMapCache","connect","state","historyData","history","dispatch","deleteTimer","timerInfo","deleteHistoryTimerData","setCurrCodeInfo","setCurrentCodeInfo","dateFormat","date","format","Boolean","flags","yyyy","Date","getFullYear","toString","mm","getMonth","slice","dd","getDate","HH","getHours","MM","getMinutes","SS","getSeconds","replace","match","MyCard","info","collectTimer","useState","setVisible","anchorEl","setAnchorEl","showMenu","resultClassName","status","handleClose","Grow","in","Card","CardHeader","avatar","Avatar","aria-label","action","IconButton","onClick","currentTarget","title","name","subheader","CardContent","children","map","childInfo","i","async","time","Divider","useTime","error","Menu","keepMounted","PaperProps","style","width","MenuItem","setTimeout","CollectorList","replayCollect","deleteCollect","collectorList","setCollectorList","handleGetList","a","getAllData","data","likedList","filter","item","liked","unLikedList","concat","collector","putData","useEffect","List","ListItem","FormControlLabel","control","Checkbox","icon","checkedIcon","checked","value","label","handleLiked","ListItemText","primary","secondary","edge","handleDelete","withRouter","drawer","setDrawer","messageInfo","setMessageInfo","showMessage","uid","indexOf","interpreter","getDatabaseInfo","databaseItem","addData","then","catch","err","String","deleteData","Fab","variant","ResultCard","Drawer","anchor","push","pathname","search","now","Editor","props","editorId","Doc","showHintTimeout","textarea","document","getElementById","this","codemirror","fromTextArea","lineNumbers","styleActiveLine","matchBrackets","mode","indentWithTabs","lineWrapping","theme","getDoc","_bindEditorEvent","_initEditorValue","setValue","on","editor","change","origin","clearTimeout","text","noHintString","includes","trim","checkChange","execCommand","getValue","code","border","React","Component","startTime","query","t","tid","gid","endTime","createNewStatement","start","end","body","BlockStatement","_gid","_parseToAst","funcNameMap","ast","parse","sourceType","traverse","Function","path","node","get","length","isEmptyFunction","scope","generateUidIdentifier","generateUid","parentNode","parentPath","left","property","callee","findFunctionName","scopeInfo","startStatement","endStatement","newStatementBody","replaceWith","replaceFunction","enter","isProgram","rootScopeInfo","unshiftContainer","pushContainer","shiftProgramBody","skip","getTransformCode","currentTimerId","watcherCallback","_code","result","transformFromAstSync","stampTimerPool","watchTimerEnd","_tid","_uid","window","performance","getData","codeTimerData","child","addTime","addAsyncTime","createCodeTimerData","Object","keys","forEach","progress","currCode","updateProgress","UpdateProgress","updateHistoryTimer","updateHistoryResultData","changeHistoryTimer","initCodeRefValue","getChildrenData","syncChild","asyncChild","codeRef","toES5","msgType","msgVisible","baseCode","createRef","nextProps","current","resetCode","userCode","getEditorValue","transformData","e","fun","callback","codeTimer","TimerDataWatcher","bind","console","log","initTimerData","timerData","changeInfo","setState","Button","color","runCurrentApiTest","marginTop","Typography","gutterBottom","ref","closeMessage","Code","Content","HistoryView"],"mappings":"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","file":"static/js/10.33ea8917.chunk.js","sourcesContent":["import React, { SyntheticEvent } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport Error from \"@material-ui/icons/Error\";\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\nimport Info from \"@material-ui/icons/Info\";\n\ninterface MessageProps {\n  visible: boolean;\n  message: string;\n  type?: string;\n  closed: () => void;\n}\n\nconst SnackBarIcon: React.FC<{ type: string }> = ({ type }) => {\n  if (type === \"success\") {\n    return <CheckCircle />;\n  }\n  if (type === \"warn\") {\n    return <Warning />;\n  }\n  if (type === \"error\") {\n    return <Error />;\n  }\n  return <Info />;\n};\n\nconst Message: React.FC<MessageProps> = ({\n  message,\n  visible,\n  closed,\n  type = \"info\",\n}) => {\n  const handleClose = (event: SyntheticEvent | MouseEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    closed();\n  };\n  return (\n    <span>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        autoHideDuration={3000}\n        open={visible}\n        onClose={handleClose}\n        className={\"message-box-\" + type}\n      >\n        <SnackbarContent\n          className=\"message-content\"\n          aria-describedby=\"client-snackbar\"\n          message={\n            <span id=\"client-snackbar\" className=\"message-content-txt\">\n              <SnackBarIcon type={type} />\n              {message}\n            </span>\n          }\n        />\n      </Snackbar>\n    </span>\n  );\n};\n\nexport default Message;\n","import { DatabaseCodeInfo } from \"./types\";\ntype CatchItem = {\n  baseInfo: DatabaseCodeInfo;\n  nameMap: NameMapCache;\n};\ntype NameMapCache = { [x: string]: string };\nconst CodeInfoCache: { [x: string]: CatchItem } = {};\n\nfunction setCodeInfoCache(baseInfo: DatabaseCodeInfo, nameMap: NameMapCache) {\n  CodeInfoCache[baseInfo.id] = { baseInfo: baseInfo, nameMap };\n}\nfunction delCodeInfoCache(id: string) {\n  delete CodeInfoCache[id];\n}\n\nfunction getCodeInfoCache(id: string) {\n  return CodeInfoCache[id].baseInfo;\n}\n\nfunction getNameMapCache(id: string) {\n  return CodeInfoCache[id].nameMap;\n}\n\nfunction getCodeInfoName(id: string, key: string) {\n  const codeInfo = getNameMapCache(id);\n  if (codeInfo) {\n    return codeInfo[key] || key;\n  }\n  return key;\n}\n\nexport {\n  setCodeInfoCache,\n  delCodeInfoCache,\n  getCodeInfoCache,\n  getCodeInfoName\n};\n","import { connect } from \"react-redux\";\nimport {\n  deleteHistoryTimerData,\n  TimerDataInfo,\n  setCurrentCodeInfo\n} from \"@/actions/history\";\nimport { DatabaseCodeInfo } from \"@/utils/types\";\n\nexport default connect(\n  (state: any) => {\n    return { historyData: state.history };\n  },\n  (dispatch: any) => ({\n    deleteTimer(timerInfo: TimerDataInfo) {\n      dispatch(deleteHistoryTimerData(timerInfo));\n    },\n    setCurrCodeInfo(codeInfo: DatabaseCodeInfo) {\n      dispatch(setCurrentCodeInfo(codeInfo));\n    }\n  })\n);\n","export function dateFormat(date?: Date | number, format?: string): string {\n  let token = /d{1,4}|m{1,4}|yy(?:yy)?|H{1,2}|M{1,2}|S{1,2}/g;\n  if (Boolean(date)) {\n    date = date instanceof Date ? date : new Date(date as number);\n    let flags: { [x: string]: string } = {\n      yyyy: date.getFullYear().toString(),\n      mm: (\"0\" + (date.getMonth() + 1)).slice(-2),\n      dd: (\"0\" + date.getDate()).slice(-2),\n      HH: (\"0\" + date.getHours()).slice(-2),\n      MM: (\"0\" + date.getMinutes()).slice(-2),\n      SS: (\"0\" + date.getSeconds()).slice(-2)\n    };\n    if (!format) {\n      // 默认显示格式\n      format = \"yyyy-mm-dd HH:MM:SS\";\n    }\n    format = format.replace(token, function(match: string) {\n      if (match in flags) {\n        return flags[match];\n      }\n      return \"\";\n    });\n    return format;\n  }\n  return \"\";\n}\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Grow from \"@material-ui/core/Grow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport { TimerDataInfo, TimerChild } from \"@/actions/history\";\nimport { dateFormat } from \"@/utils/date\";\n\ninterface FcProps {\n  info: TimerDataInfo;\n  collectTimer: (info: TimerDataInfo) => void;\n  deleteTimer: (timerInfo: TimerDataInfo) => void;\n}\n\nconst MyCard: React.FC<FcProps> = ({ info, deleteTimer, collectTimer }) => {\n  const [visible, setVisible] = useState<number>(1);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const showMenu = Boolean(anchorEl);\n  const resultClassName = info.status === 2 ? \"result-error\" : \"result-success\";\n\n  function openSettingMenu(event: React.MouseEvent<HTMLElement>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function deleteCurrInfo() {\n    setVisible(0);\n    handleClose();\n    setTimeout(() => deleteTimer(info), 300);\n  }\n\n  function saveCurrentInfo() {\n    handleClose();\n    collectTimer(info);\n  }\n\n  return (\n    <aside className=\"result-card\">\n      <Grow in={Boolean(visible)}>\n        <Card>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"recipe\" className={resultClassName}>\n                {info.status === 1 ? <Check /> : <Clear />}\n              </Avatar>\n            }\n            action={\n              <IconButton aria-label=\"settings\" onClick={openSettingMenu}>\n                <MoreVertIcon />\n              </IconButton>\n            }\n            title={info.name}\n            subheader={dateFormat(info.date, \"mm-dd HH:MM:SS\")}\n            className=\"result-card-header\"\n          />\n          <CardContent>\n            {info.children.map((childInfo: TimerChild, i: number) => (\n              <div className=\"result-card-item\" key={i}>\n                <span\n                  className={\n                    childInfo.async ? \"card-item-root async\" : \"card-item-root\"\n                  }\n                >\n                  {childInfo.name}\n                </span>\n                <span className=\"card-item-time\">{childInfo.time}ms</span>\n              </div>\n            ))}\n          </CardContent>\n          <Divider />\n          <CardContent>\n            {info.status === 1 ? (\n              <div className=\"result-active-success\">use: {info.useTime}ms</div>\n            ) : (\n              <div className=\"result-active-error\">{info.error}</div>\n            )}\n          </CardContent>\n        </Card>\n      </Grow>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={showMenu}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            width: 120\n          }\n        }}\n      >\n        <MenuItem onClick={saveCurrentInfo}>Collect</MenuItem>\n        <MenuItem onClick={deleteCurrInfo}>Delete</MenuItem>\n      </Menu>\n    </aside>\n  );\n};\n\nexport default MyCard;\n","import React, { useEffect, useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { DatabaseItem } from \"@/utils/types\";\nimport { getAllData, putData } from \"@/utils/indexDB\";\nimport { dateFormat } from \"@/utils/date\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport PlayCircleFilled from \"@material-ui/icons/PlayCircleFilled\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport Star from \"@material-ui/icons/Star\";\ninterface CollectorProps {\n  replayCollect: (item: DatabaseItem) => void;\n  deleteCollect: (item: DatabaseItem) => Promise<1 | 0>;\n}\n\nconst CollectorList: React.FC<CollectorProps> = ({\n  replayCollect,\n  deleteCollect\n}) => {\n  const [collectorList, setCollectorList] = useState<DatabaseItem[]>([]);\n  useEffect(() => {\n    handleGetList();\n  }, []);\n  async function handleGetList() {\n    const { data } = await getAllData();\n    if (data) {\n      const likedList = data.filter((item: DatabaseItem) => {\n        return item.liked;\n      });\n      const unLikedList = data.filter((item: DatabaseItem) => {\n        return !item.liked;\n      });\n      setCollectorList(likedList.concat(unLikedList));\n    }\n  }\n  async function handleDelete(info: DatabaseItem) {\n    const result = await deleteCollect(info);\n    if (result !== 1) return;\n    handleGetList();\n  }\n  async function handleLiked(collector: DatabaseItem) {\n    collector.liked = !collector.liked;\n    await putData(collector);\n    await handleGetList();\n  }\n  return (\n    <aside className=\"collector-box\">\n      <List>\n        {collectorList.map((collector: DatabaseItem) => (\n          <ListItem key={collector.id}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  icon={<StarBorder />}\n                  checkedIcon={<Star />}\n                  checked={collector.liked}\n                  value=\"checkedH\"\n                />\n              }\n              label=\"\"\n              onClick={() => handleLiked(collector)}\n            />\n            <ListItemText\n              primary={collector.timerInfo.name}\n              secondary={dateFormat(collector.timerInfo.date)}\n            />\n            <IconButton\n              edge=\"end\"\n              aria-label=\"play\"\n              onClick={() => replayCollect(collector)}\n            >\n              <PlayCircleFilled />\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"delete\"\n              onClick={() => handleDelete(collector)}\n            >\n              <Delete />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n    </aside>\n  );\n};\n\nexport default CollectorList;\n","import React, { Fragment, useState } from \"react\";\nimport connect from \"../container/history\";\nimport { TimerDataInfo } from \"../actions/history\";\nimport { DatabaseItem, DatabaseCodeInfo } from \"@/utils/types\";\nimport ResultCard from \"./ResultCard\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport CollectorList from \"./CollectorList\";\nimport Message from \"./Message\";\nimport interpreter from \"@/utils/baseStatement\";\nimport { addData, deleteData } from \"@/utils/indexDB\";\nimport { getCodeInfoCache } from \"@/utils/codeInfoCache\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\ninterface FcProps extends RouteComponentProps {\n  historyData: TimerDataInfo[];\n  deleteTimer: (timerInfo: TimerDataInfo) => void;\n  setCurrCodeInfo: (codeInfo: DatabaseCodeInfo) => void;\n}\n\ninterface MessageInfo {\n  type: string;\n  message: string;\n  visible: boolean;\n}\n\nconst HistoryView: React.FC<FcProps> = ({\n  historyData,\n  deleteTimer,\n  history,\n  setCurrCodeInfo\n}) => {\n  const [drawer, setDrawer] = useState<boolean>(false);\n  const [messageInfo, setMessageInfo] = useState<MessageInfo>({\n    type: \"success\",\n    visible: false,\n    message: \"\"\n  });\n  function handleCloseDrawer() {\n    setDrawer(false);\n  }\n  function handleOpenDrawer() {\n    setDrawer(true);\n  }\n  function showMessage({ type, message }: { type: string; message: string }) {\n    setMessageInfo({\n      type,\n      message,\n      visible: true\n    });\n  }\n  function closeMessage() {\n    setMessageInfo({\n      ...messageInfo,\n      visible: false\n    });\n  }\n  function collectTimer(info: TimerDataInfo) {\n    const codeInfo =\n      info.uid.indexOf(\"code\") > -1\n        ? getCodeInfoCache(info.uid)\n        : interpreter.getDatabaseInfo(info.uid);\n    const databaseItem = {\n      timerInfo: info,\n      codeInfo: codeInfo,\n      type: codeInfo.type,\n      liked: false\n    };\n    addData(databaseItem)\n      .then(() => {\n        showMessage({\n          type: \"success\",\n          message: \"Saved timer record\"\n        });\n      })\n      .catch((err: any) => {\n        showMessage({\n          type: \"warn\",\n          message: String(err)\n        });\n      });\n  }\n\n  function replayCollect(item: DatabaseItem) {\n    if (item.type === 1) {\n      history.push({\n        pathname: \"/custom\",\n        search: \"?type=1\" + Date.now()\n      });\n    } else if (item.type === 2) {\n      history.push({\n        pathname: \"/custom\",\n        search: \"?type=2\" + Date.now()\n      });\n      setCurrCodeInfo(item.codeInfo);\n    } else if (item.type === 3) {\n      history.push({\n        pathname: \"/code\"\n      });\n    }\n    setCurrCodeInfo(item.codeInfo);\n    setDrawer(false);\n  }\n\n  async function deleteCollect(item: DatabaseItem) {\n    if (!item.id) return 0;\n    const { error } = await deleteData(item.id);\n    if (error) {\n      showMessage({\n        type: \"error\",\n        message: (error as ErrorEvent).message\n      });\n      return 0;\n    }\n    return 1;\n  }\n\n  return (\n    <Fragment>\n      <aside className=\"history-box\">\n        <div className=\"collector-button\">\n          <Fab variant=\"extended\" aria-label=\"open\" onClick={handleOpenDrawer}>\n            <KeyboardArrowLeft />\n            Open Collector\n          </Fab>\n        </div>\n        {historyData.map((timerInfo: TimerDataInfo) => (\n          <ResultCard\n            key={timerInfo.id}\n            info={timerInfo}\n            deleteTimer={deleteTimer}\n            collectTimer={collectTimer}\n          />\n        ))}\n      </aside>\n      <Drawer anchor=\"right\" open={drawer} onClose={handleCloseDrawer}>\n        <CollectorList\n          replayCollect={replayCollect}\n          deleteCollect={deleteCollect}\n        />\n      </Drawer>\n      <Message\n        visible={messageInfo.visible}\n        type={messageInfo.type}\n        closed={closeMessage}\n        message={messageInfo.message}\n      />\n    </Fragment>\n  );\n};\n\nexport default connect(withRouter(HistoryView));\n","import React from \"react\";\nimport codemirror from \"codemirror\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/dracula.css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"codemirror/addon/hint/show-hint.js\";\nimport \"codemirror/addon/edit/matchbrackets\";\nimport \"codemirror/addon/hint/javascript-hint\";\nimport \"codemirror/addon/selection/active-line.js\";\n\nexport default class Editor extends React.Component<{ value?: string }> {\n  editorId: string;\n  Editor: codemirror.EditorFromTextArea | null;\n  Doc: codemirror.Doc | null;\n  showHintTimeout: any;\n  constructor(props: { value?: string }) {\n    super(props);\n    this.editorId = Date.now() + \"\";\n    this.Editor = null;\n    this.Doc = null;\n  }\n  componentDidMount() {\n    const textarea = document.getElementById(this.editorId);\n    this.Editor = codemirror.fromTextArea(textarea as HTMLTextAreaElement, {\n      lineNumbers: true,\n      styleActiveLine: true,\n      matchBrackets: true,\n      mode: \"text/javascript\",\n      indentWithTabs: true,\n      lineWrapping: true,\n      theme: \"dracula\"\n    });\n    this.Doc = this.Editor.getDoc();\n    this._bindEditorEvent();\n    this._initEditorValue();\n  }\n  private _initEditorValue() {\n    if (this.props.value) {\n      (this.Doc as codemirror.Doc).setValue(this.props.value);\n    }\n  }\n  private _bindEditorEvent() {\n    (this.Editor as codemirror.EditorFromTextArea).on(\n      \"change\",\n      (editor: CodeMirror.Editor, change) => {\n        //获取用户当前的编辑器中的编写的代码\n        if (change.origin === \"+input\") {\n          clearTimeout(this.showHintTimeout);\n          const [text] = change.text;\n\n          if (!checkChange(text)) {\n            return;\n          }\n          this.showHintTimeout = setTimeout(function() {\n            editor.execCommand(\"autocomplete\");\n          }, 300);\n        }\n      }\n    );\n  }\n  public getEditorValue(): string {\n    if (!this.Doc) return \"\";\n    return this.Doc.getValue();\n  }\n  public resetCode(code: string) {\n    if (this.Doc) {\n      this.Doc.setValue(code);\n    }\n  }\n  render() {\n    return (\n      <div className=\"editor-content\">\n        <textarea id={this.editorId} name=\"code\" style={{ border: \"none\" }} />\n      </div>\n    );\n  }\n}\n\nconst noHintString = [\"\", \"=\", \";\", \",\", \")\", \"}\", \"]\"];\n\nfunction checkChange(text: string | undefined) {\n  if (!text) return false;\n  if (noHintString.includes(text.trim())) return false;\n  return true;\n}\n","import { NodePath } from \"@babel/traverse\";\nimport * as t from \"@babel/types\";\n\ninterface QueryInfo {\n  gid: string;\n  tid: string;\n  uid: t.Identifier;\n}\n\ninterface TransformInfo<T> extends QueryInfo {\n  path: NodePath<T>;\n}\n\nfunction isEmptyFunction(path: NodePath<t.Function>): boolean {\n  const node: any = path.get(\"body\").node;\n  if (node.body) {\n    return !node.body.length;\n  }\n  return false;\n}\n\nfunction findFunctionName(path: any): string {\n  const parentNode = path.parentPath.node;\n  let functionName = \"\";\n\n  if (parentNode.type === \"AssignmentExpression\") {\n    functionName = parentNode.left.property.name;\n  } else if (parentNode.type === \"VariableDeclarator\") {\n    functionName = parentNode.id.name;\n  } else if (parentNode.type === \"CallExpression\") {\n    functionName = parentNode.callee.name + \"<CallBack>\";\n  } else {\n    functionName = path.node.id ? path.node.id.name : \"anonymous\";\n  }\n\n  return functionName;\n}\n\nconst startTime = (query: QueryInfo) => {\n  var result = t.variableDeclaration(\"var\", [\n    t.variableDeclarator(\n      query.uid,\n      t.callExpression(t.identifier(\"__start\"), [\n        t.stringLiteral(query.tid),\n        t.stringLiteral(query.gid),\n      ])\n    ),\n  ]);\n  return result;\n};\n\nconst endTime = (query: QueryInfo) => {\n  var result = t.expressionStatement(\n    t.callExpression(t.identifier(\"__end\"), [\n      t.stringLiteral(query.tid),\n      t.stringLiteral(query.gid),\n      query.uid,\n    ])\n  );\n\n  return result;\n};\n\nconst createNewStatement = (\n  start: t.Statement,\n  end: t.Statement,\n  body: t.Statement[] = []\n) => {\n  const BlockStatement = t.blockStatement([\n    start,\n    t.tryStatement(t.blockStatement(body), null, t.blockStatement([end])),\n  ]);\n  return BlockStatement;\n};\n\nfunction replaceFunction({ gid, tid, uid, path }: TransformInfo<t.Function>) {\n  const startStatement = startTime({ gid, tid, uid });\n  const endStatement = endTime({ gid, tid, uid });\n  const newStatementBody = createNewStatement(\n    startStatement,\n    endStatement,\n    (path.node.body as any).body\n  );\n  path.get(\"body\").replaceWith(newStatementBody);\n}\n\nfunction shiftProgramBody({ gid, tid, uid, path }: TransformInfo<t.Program>) {\n  const startStatement = startTime({ gid, tid, uid });\n  const endStatement = endTime({ gid, tid, uid });\n  (path as any).unshiftContainer(\"body\", startStatement);\n  (path as any).pushContainer(\"body\", endStatement);\n}\n\nexport { isEmptyFunction, findFunctionName, replaceFunction, shiftProgramBody };\n","import { transformFromAstSync } from \"@babel/core\";\nimport { parse } from \"@babel/parser\";\nimport traverse, { NodePath } from \"@babel/traverse\";\nimport { TransformInfo } from \"./types\";\nimport * as t from \"@babel/types\";\nimport {\n  isEmptyFunction,\n  findFunctionName,\n  replaceFunction,\n  shiftProgramBody\n} from \"./transformCommon\";\n\ninterface ScopeInfo<T> {\n  gid: string;\n  tid: string;\n  uid: t.Identifier;\n  path: NodePath<T>;\n}\n\ntype FuncNameMap = { [x: string]: string };\n\nlet _gid = 0;\n\nfunction getGid() {\n  return \"code\" + ++_gid;\n}\n\nfunction _parseToAst(\n  code: string\n): { id: string; ast: t.File; funcNameMap: FuncNameMap } {\n  const gid = getGid();\n  const funcNameMap: FuncNameMap = {};\n\n  const ast = parse(code, { sourceType: \"module\" });\n  traverse(ast, {\n    Function(path) {\n      if (isEmptyFunction(path)) return;\n      const uid = path.scope.generateUidIdentifier(\"_uid\");\n      const tid = path.scope.generateUid(\"_tid\");\n      const name = findFunctionName(path);\n      const scopeInfo: ScopeInfo<t.Function> = { gid, uid, tid, path };\n\n      funcNameMap[tid] = name;\n\n      replaceFunction(scopeInfo);\n    }\n  });\n\n  traverse(ast, {\n    enter(path) {\n      if (path.isProgram()) {\n        const uid = path.scope.generateUidIdentifier(\"_uid\");\n        const rootScopeInfo: ScopeInfo<t.Program> = {\n          gid,\n          uid,\n          tid: gid,\n          path\n        };\n        funcNameMap[gid] = \"root\";\n        shiftProgramBody(rootScopeInfo);\n        path.skip();\n      }\n    }\n  });\n  return {\n    id: gid,\n    ast,\n    funcNameMap\n  };\n}\n\nfunction getTransformCode(_code: string): TransformInfo {\n  const { ast, id, funcNameMap } = _parseToAst(_code);\n  const result = transformFromAstSync(ast);\n  if (result) {\n    return { id, code: result.code, nameMap: funcNameMap };\n  }\n  return { id, code: \"\", nameMap: funcNameMap };\n}\n\nexport default getTransformCode;\n","import { ProcessTimerInfo, CodeTimerData } from \"./types\";\n\nlet currentTimerId: string;\nlet stampTimerPool: { [x: string]: ProcessTimerInfo } = {};\nlet watchTimerEnd: boolean = false;\nlet watcherCallback: (x: CodeTimerData) => void; // 监听收集数据后异步函数的回调函数\n\nlet uid = 0;\n\nfunction getUid() {\n  return ++uid + \"\";\n}\n\nfunction beginTimer(_gid: string, callback: (x: CodeTimerData) => void) {\n  currentTimerId = _gid;\n\n  stampTimerPool = {};\n\n  watchTimerEnd = false;\n\n  watcherCallback = callback;\n}\n\nfunction start(_tid: string, _gid: string): string {\n  if (currentTimerId !== _gid) return \"-1\";\n\n  const _uid = getUid();\n\n  const now = window.performance.now();\n\n  stampTimerPool[_uid] = {\n    _tid: _tid,\n    _gid: _gid,\n    start: now,\n    end: 0,\n    async: watchTimerEnd\n  };\n\n  return _uid;\n}\n\nfunction end(_tid: string, _gid: string, _uid: string) {\n  if (currentTimerId !== _gid) return;\n\n  const now = window.performance.now();\n\n  stampTimerPool[_uid].end = now;\n\n  watchTimerEnd && watcherCallback(getData());\n}\n\nfunction getData(): CodeTimerData {\n  watchTimerEnd = true; // 监听收集数据后异步函数的回调\n\n  const codeTimerData: any = createCodeTimerData(currentTimerId);\n  \n  Object.keys(stampTimerPool).forEach((_uid: string) => {\n    const { end, start, _tid, async } = stampTimerPool[_uid];\n\n    if (end >= start) {\n      const time = end - start;\n\n      async\n        ? codeTimerData.addAsyncTime(time, _tid)\n        : codeTimerData.addTime(time, _tid);\n    }\n  });\n\n  return codeTimerData.getData();\n}\n\nfunction createCodeTimerData(_gid: string) {\n  const codeTimerData: CodeTimerData = {\n    id: _gid,\n    time: 0,\n    child: {},\n    async: {}\n  };\n\n  function addTime(time: number, _tid: string) {\n    if (_tid === _gid) {\n      codeTimerData.time = time;\n    } else {\n      codeTimerData.child[_tid] = time;\n    }\n  }\n\n  function addAsyncTime(time: number, _tid: string) {\n    if (_tid === _gid) {\n      codeTimerData.time = time;\n    } else {\n      codeTimerData.async[_tid] = time;\n    }\n  }\n\n  function getData() {\n    return codeTimerData;\n  }\n\n  return {\n    addTime,\n    addAsyncTime,\n    getData\n  };\n}\n\nexport { beginTimer, start, end, getData };\n","import { connect } from \"react-redux\";\nimport { UpdateProgress } from \"../actions/home\";\nimport {\n  updateHistoryResultData,\n  changeHistoryTimer,\n  TimerDataInfo,\n  ChangeTimerInfo\n} from \"../actions/history\";\nexport default connect(\n  (state: any) => ({ progress: state.progress, currCode: state.currCode }),\n  (dispatch: any) => ({\n    updateProgress(state: boolean) {\n      dispatch(UpdateProgress(state));\n    },\n    updateHistoryTimer(info: TimerDataInfo) {\n      dispatch(updateHistoryResultData(info));\n    },\n    changeHistoryTimer(info: ChangeTimerInfo) {\n      dispatch(changeHistoryTimer(info));\n    }\n  })\n);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Replay from \"@material-ui/icons/Replay\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Editor from \"@/components/Editor\";\nimport { TransformInfo, CodeTimerData, DatabaseCodeInfo } from \"@/utils/types\";\nimport { TimerDataInfo, ChangeTimerInfo, TimerChild } from \"@/actions/history\";\nimport getTransformCode from \"@/utils/codeTransform\";\nimport * as codeTimer from \"@/utils/codeTimer\";\nimport { setCodeInfoCache, getCodeInfoName } from \"@/utils/codeInfoCache\";\nimport Message from \"@/components/Message\";\nimport connect from \"@/container/code\";\n\nconst initCodeRefValue = `\nlet i = 0;\nfunction jacs() {\n  i++\n}\nconst testFun = (d) => {\n  return d + 1\n}\n\nconst j = function(){}\n\n`;\n\ntype StringObject = { [x: string]: number };\n\nfunction getChildrenData(\n  id: string,\n  child: StringObject,\n  async: StringObject\n): TimerChild[] {\n  const syncChild: TimerChild[] = Object.keys(child).map((key: string) => ({\n    name: getCodeInfoName(id, key),\n    time: child[key],\n    async: false,\n  }));\n\n  const asyncChild: TimerChild[] = Object.keys(async).map((key: string) => ({\n    name: getCodeInfoName(id, key),\n    time: async[key],\n    async: true,\n  }));\n\n  return syncChild.concat(asyncChild);\n}\n\ninterface CodeTestProps {\n  progress: boolean;\n  updateProgress: (x: boolean) => void;\n  updateHistoryTimer: (x: TimerDataInfo) => void;\n  changeHistoryTimer: (x: ChangeTimerInfo) => void;\n  currCode: DatabaseCodeInfo;\n}\n\nclass CodeTest extends React.Component<CodeTestProps> {\n  codeRef: any;\n  state: {\n    toES5: boolean;\n    initCodeRefValue: string;\n    msgType: string;\n    message: string;\n    msgVisible: boolean;\n  };\n\n  constructor(props: CodeTestProps) {\n    super(props);\n    this.state = {\n      toES5: false,\n      msgType: \"info\",\n      message: \"\",\n      msgVisible: false,\n      initCodeRefValue:\n        props.currCode && props.currCode.type === 3\n          ? props.currCode.baseCode\n          : initCodeRefValue,\n    };\n    this.codeRef = React.createRef();\n  }\n  shouldComponentUpdate(nextProps: CodeTestProps) {\n    if (nextProps.currCode === this.props.currCode) return true;\n    if (nextProps.currCode) {\n      this.codeRef.current.resetCode(nextProps.currCode.baseCode as string);\n    }\n    return true;\n  }\n\n  runCurrentApiTest() {\n    if (this.props.progress) return;\n    this.props.updateProgress(true);\n    const userCode = this.codeRef.current.getEditorValue();\n\n    try {\n      var transformData = getTransformCode(userCode);\n    } catch (e) {\n      this.showMessage({ type: \"error\", message: e.message });\n      this.props.updateProgress(false);\n      return;\n    }\n\n    setTimeout(() => {\n      if (transformData.code) {\n        let error = null;\n        try {\n          // eslint-disable-next-line\n          const fun = new Function(\"__start\", \"__end\", transformData.code);\n          codeTimer.beginTimer(\n            transformData.id,\n            this.TimerDataWatcher.bind(this)\n          );\n\n          fun(codeTimer.start, codeTimer.end);\n        } catch (e) {\n          console.log(\"error\");\n          error = e.message;\n        }\n\n        const result = codeTimer.getData();\n        if (error) {\n          result.error = error;\n        }\n        this.setCodeInfoCache(transformData, userCode);\n        this.initTimerData(result);\n        this.props.updateProgress(false);\n      }\n    }, 300);\n  }\n  initTimerData(data: CodeTimerData) {\n    const timerData: TimerDataInfo = {\n      id: data.id,\n      uid: data.id,\n      name: \"Code Test\",\n      status: data.error ? 2 : 1,\n      error: data.error,\n      startTime: 0,\n      endTime: 0,\n      children: [],\n      useTime: data.time,\n      date: Date.now(),\n    };\n    timerData.children = getChildrenData(data.id, data.child, data.async);\n    this.props.updateHistoryTimer(timerData);\n  }\n  TimerDataWatcher(data: CodeTimerData) {\n    const changeInfo = {\n      id: data.id,\n      children: getChildrenData(data.id, data.child, data.async),\n    };\n    this.props.changeHistoryTimer(changeInfo);\n  }\n  setCodeInfoCache(info: TransformInfo, userCode: string) {\n    const codeInfo = {\n      id: info.id,\n      baseCode: userCode,\n      type: 3,\n      name: \"Code Test\",\n    };\n    setCodeInfoCache(codeInfo, info.nameMap);\n  }\n  showMessage({ type, message }: { type: string; message: string }) {\n    this.setState({\n      msgType: type,\n      message,\n      msgVisible: true,\n    });\n  }\n  closeMessage() {\n    this.setState({\n      msgVisible: false,\n    });\n  }\n  render() {\n    return (\n      <article className=\"code-main\">\n        <section>\n          <div className=\"component-title\">Test Cases</div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.runCurrentApiTest()}\n          >\n            Run Test\n            <Replay />\n          </Button>\n        </section>\n        <section style={{ marginTop: \"40px\" }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Coding Your Test Cases\n          </Typography>\n          <div className=\"code-editor-box\">\n            <Editor ref={this.codeRef} value={this.state.initCodeRefValue} />\n          </div>\n        </section>\n        <Message\n          visible={this.state.msgVisible}\n          type={this.state.msgType}\n          closed={() => this.closeMessage()}\n          message={this.state.message}\n        />\n      </article>\n    );\n  }\n}\n\nexport default connect(CodeTest);\n","import React from \"react\";\nimport HistoryView from \"@/components/HistoryView\";\nimport Content from \"./Content\";\n\nconst Code: React.FC = () => {\n  return (\n    <div className=\"code-box\">\n      <Content />\n      <HistoryView />\n    </div>\n  );\n};\n\nexport default Code;\n"],"sourceRoot":""}