{"version":3,"sources":["utils/loopCode.ts","utils/timer.ts","utils/baseStatement.ts","router/index.tsx","actions/home.ts","actions/history.ts","components/Header.tsx","components/Footer.tsx","components/Progress.tsx","container/progress.ts","reducer/index.ts","reducer/baseApi.ts","reducer/progress.ts","reducer/history.ts","store.ts","App.tsx","serviceWorker.ts","index.tsx","template/api.tsx"],"names":["BaseCodeMap","__for","code","__for_less","__while","__while_less","__forEach","init","__map","_uid","tempTimerTree","__initTimerInfo","currId","date","Date","now","name","root","startTime","endTime","useTime","status","parentId","children","id","__getHandleTimerData","getTimerInfo","_id","timerInfo","map","__id","beginTimer","n","r","p","window","performance","runError","endTimer","push","BASE_EXPRESSION_MATCH","interpreter","_api","_apiMap","this","expression","key","_getId","baseCode","initCode","loop","fn","apiList","forEach","templateList","__root__","baseTemplateList","Object","keys","pushBaseApiInfo","apiInfo","_initBaseApiInfo","expressionData","match","_beforeCode","_loopName","_defineRoot","_isUsedApi","_apiParams","runtimeStatement","runtimeCode","join","loopInfo","loopCodeMap","replace","runtimeFn","bodyCode","funStr","Function","num","__createFunction","routes","path","component","lazy","RouteWithSubRoutes","route","exact","render","props","RouterView","fallback","i","PROGRESS_STATUS","UpdateProgress","type","payload","HISTORY_RESULT","updateHistoryResultData","timerData","NavBox","text","sub","to","color","ButtonBase","className","HEADER_PROPS_MAP","0","1","2","3","Header","pathname","location","navType","test","navProps","React","Component","withRouter","connect","state","progress","combineReducers","baseApi","action","concat","history","store","createStore","reducer","App","Footer","Boolean","hostname","apiInterpreter","for","for_less","while","while_less","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e87bbd7d.chunk.js","sourcesContent":["const __for = {\n  code: `for (let i = 0; i < $n; i++) {\n    <body>\n  }`\n};\nconst __for_less = {\n  code: `for (let i = $n - 1; i >= 0; i--) {\n    <body>\n  }`\n};\nconst __while = {\n  code: `let i = 0; \n  while(i < $n) {\n    i++; \n    <body>\n  }`\n};\nconst __while_less = {\n  code: `let i = $n;\n  while(i--){\n    <body>\n  }`\n};\nconst __forEach = {\n  init: `let $Array = new Array($n);`,\n  code: `$Array.forEach((_,$i) => {\n    <body>\n  })`\n};\nconst __map = {\n  init: `let $Array = new Array($n);`,\n  code: `$Array.map((_,$i) => {\n    <body>\n  })`\n};\n\ninterface baseCode {\n  init?: string;\n  code: string;\n}\nconst BaseCodeMap: { [x: string]: baseCode } = {\n  __for,\n  __for_less,\n  __while,\n  __while_less,\n  __forEach,\n  __map\n};\n\nexport default BaseCodeMap;\n","import { TimerInfo } from \"./types\";\n\nlet _uid: number = 0;\nlet tempTimerTree: { [x: number]: TimerInfo } = {};\n\nfunction createUid(): number {\n  _uid++;\n  return _uid;\n}\n\nfunction __initTimerInfo(): TimerInfo {\n  const currId = createUid();\n  const date = Date.now();\n  tempTimerTree[currId] = {\n    name: \"\",\n    root: true,\n    startTime: 0,\n    endTime: 0,\n    useTime: 0,\n    status: 0,\n    date,\n    parentId: null,\n    children: [],\n    id: currId,\n  };\n\n  return tempTimerTree[currId];\n}\n\nfunction __getHandleTimerData(id: number): TimerInfo<any> {\n  const getTimerInfo = (_id: number): TimerInfo<any> => {\n    const timerInfo: TimerInfo<any> = { ...tempTimerTree[_id] };\n    const { startTime, endTime, children } = timerInfo;\n\n    timerInfo.useTime = endTime - startTime;\n\n    timerInfo.children = children.map((__id: number) => getTimerInfo(__id));\n\n    delete tempTimerTree[id];\n    return timerInfo;\n  };\n\n  return getTimerInfo(id);\n}\n\ninterface beginTimerProps {\n  n: string;\n  r: boolean;\n  p?: number;\n}\n\nfunction beginTimer({ n, r, p }: beginTimerProps): number {\n  const timerInfo = __initTimerInfo();\n\n  timerInfo.name = n;\n  timerInfo.root = r;\n  timerInfo.startTime = window.performance.now();\n  timerInfo.parentId = p || null;\n\n  return timerInfo.id;\n}\n\nfunction runError(id: number) {\n  if (tempTimerTree[id]) {\n    tempTimerTree[id].status = 2;\n  }\n}\n\nfunction endTimer(id: number): void | TimerInfo<any> {\n  const timerInfo: TimerInfo = tempTimerTree[id];\n\n  timerInfo.endTime = window.performance.now();\n\n  if (timerInfo.status === 0) {\n    timerInfo.status = 1;\n  }\n\n  if (timerInfo.parentId) {\n    tempTimerTree[timerInfo.parentId].children.push(id);\n  }\n\n  if (timerInfo.root) {\n    return __getHandleTimerData(id);\n  }\n}\n\nexport { beginTimer, endTimer, runError };\n","import loopCodeMap from \"./loopCode\";\nimport { BaseApiInfo } from \"./types\";\nimport { beginTimer, endTimer, runError } from \"./timer\";\n\nconst BASE_EXPRESSION_MATCH: RegExp = /^((.+?)\\|)?(<(.+?)>)?(@(.+?):)?(api)?(\\((.+?)\\))?/;\n\nfunction __createFunction(\n  initCode: string,\n  bodyCode: string,\n  name: string\n): Function {\n  const funStr = `\n    ${initCode || \"\"}\n    let _timeId = _newTime({n: $name, r: true})\n    try {\n      ${bodyCode || \"\"}\n    } catch(e){\n      _runError(_timeId)\n    } finally {\n      let _result = _endTime(_timeId)\n      return _result\n    }\n  `;\n  // eslint-disable-next-line\n  const fn = new Function(\n    \"$n\",\n    \"$name\",\n    \"_newTime\",\n    \"_endTime\",\n    \"_runError\",\n    funStr\n  );\n\n  return function(num: number) {\n    return fn(num, name + \"(\" + num + \")\", beginTimer, endTimer, runError);\n  };\n}\n\ninterface apiTemplateList {\n  __root__?: string;\n  [x: string]: string | undefined;\n}\n\nclass Interpreter {\n  public _api: BaseApiInfo[];\n  public _id: number;\n  public _apiMap: { [x: number]: BaseApiInfo };\n\n  constructor() {\n    this._api = [];\n    this._id = 1;\n    this._apiMap = {};\n  }\n\n  private _getId() {\n    this._id++;\n    return this._id;\n  }\n\n  private _initBaseApiInfo(\n    expression: string,\n    key: string,\n    root?: string\n  ): BaseApiInfo {\n    const uid = this._getId();\n    return {\n      root,\n      id: uid,\n      key,\n      name: \"\",\n      baseCode: \"\",\n      initCode: \"\",\n      loop: true,\n      expression,\n      fn: () => {},\n    };\n  }\n\n  public init(apiList: apiTemplateList[]) {\n    apiList.forEach((templateList: apiTemplateList) => {\n      const { __root__, ...baseTemplateList } = templateList;\n\n      Object.keys(baseTemplateList).forEach((key: string) => {\n        this.pushBaseApiInfo(baseTemplateList[key], key, __root__);\n      });\n    });\n  }\n\n  public pushBaseApiInfo(\n    expression: string | undefined,\n    key: string,\n    __root__?: string\n  ) {\n    if (!expression) return;\n    const apiInfo = this._initBaseApiInfo(expression, key, __root__);\n    const expressionData = expression.match(BASE_EXPRESSION_MATCH) || [];\n\n    const _beforeCode = expressionData[2];\n    const _loopName = expressionData[4];\n    const _defineRoot = expressionData[6] || __root__;\n    const _isUsedApi = expressionData[7] && key;\n    const _apiParams = expressionData[9];\n\n    let runtimeStatement = [];\n    let runtimeCode = \"\";\n    let initCode = \"\";\n    let baseCode = \"\";\n\n    if (_defineRoot) {\n      runtimeStatement.push(_defineRoot);\n    }\n    if (_isUsedApi) {\n      runtimeStatement.push(_isUsedApi);\n    }\n\n    runtimeCode = runtimeStatement.join(\".\");\n\n    if (_apiParams) {\n      runtimeCode += `(${_apiParams})`;\n    }\n\n    if (_beforeCode) {\n      initCode = _beforeCode;\n    }\n\n    if (_loopName) {\n      const loopInfo = loopCodeMap[\"__\" + _loopName];\n      baseCode = loopInfo.code.replace(/<body>/, runtimeCode);\n      initCode = (loopInfo.init || \"\") + initCode;\n    } else {\n      baseCode = runtimeCode;\n    }\n\n    const name =\n      (_defineRoot === \"window\" ? _isUsedApi : runtimeStatement.join(\".\")) ||\n      key;\n\n    const runtimeFn = __createFunction(initCode, baseCode, name);\n\n    apiInfo.initCode = initCode;\n    apiInfo.baseCode = baseCode;\n    apiInfo.root = _defineRoot;\n    apiInfo.name = name;\n    apiInfo.fn = runtimeFn;\n\n    this._api.push(apiInfo);\n    this._apiMap[apiInfo.id] = apiInfo;\n  }\n\n  public getApiMenuList(): { name: string; id: number }[] {\n    return this._api.map((apiInfo: BaseApiInfo) => {\n      return {\n        name: apiInfo.name,\n        id: apiInfo.id,\n      };\n    });\n  }\n\n  public getApiInfo(id: number): BaseApiInfo {\n    return this._apiMap[id];\n  }\n}\n\nconst interpreter = new Interpreter();\n\nexport default interpreter;\n","import React, { Suspense, lazy } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { RouterMap } from \"./types\";\n\nconst routes: RouterMap[] = [\n  {\n    path: \"/\",\n    component: lazy(() => import(\"../page/home/App\"))\n  },\n  {\n    path: \"/api\",\n    component: lazy(() => import(\"../page/api/App\")),\n    routes: [\n      {\n        path: \"/api/:id\",\n        component: lazy(() => import(\"../page/api/View\"))\n      }\n    ]\n  }\n];\n\nfunction RouteWithSubRoutes(route: RouterMap) {\n  return (\n    <Route\n      exact={route.path === \"/\"}\n      path={route.path}\n      render={(props: any) => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\nconst RouterView: React.FC = () => (\n  <Suspense fallback={<div>loading...</div>}>\n    {routes.map((route, i) => {\n      return <RouteWithSubRoutes key={i} {...route} />;\n    })}\n  </Suspense>\n);\n\nexport { RouterView, RouteWithSubRoutes };\n","export const ADD_TODO = \"ADD_TODO\";\nexport type ADD_TODO = typeof ADD_TODO;\n\nexport const PROGRESS_STATUS = \"PROGRESS_STATUS\";\nexport type PROGRESS_STATUS = typeof PROGRESS_STATUS;\n\nexport interface UpdateProgress {\n  type: PROGRESS_STATUS;\n  payload: boolean;\n}\n\nexport function UpdateProgress(status: boolean): UpdateProgress {\n  return {\n    type: PROGRESS_STATUS,\n    payload: status\n  };\n}\n","export const HISTORY_RESULT = \"HISTORY_RESULT\";\nexport type HISTORY_RESULT = typeof HISTORY_RESULT;\n\nexport interface TimerDataInfo {\n  id: number;\n  name: string;\n  root: boolean;\n  startTime: number;\n  endTime: number;\n  parentId: number | null;\n  status: number; // 0 - info, 1: success, 2: error\n  children: TimerDataInfo[];\n  useTime: number;\n  date: number;\n}\n\nexport interface HistoryActionType {\n  type: HISTORY_RESULT;\n  payload: TimerDataInfo;\n}\n\nexport function updateHistoryResultData(\n  timerData: TimerDataInfo\n): HistoryActionType {\n  return {\n    type: HISTORY_RESULT,\n    payload: timerData,\n  };\n}\n","import React from \"react\";\n// eslint-disable-next-line\nimport { Link, withRouter, RouteComponentProps } from \"react-router-dom\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\ninterface NavBoxProps {\n  text: string;\n  sub?: string;\n  to: string;\n  color: string;\n}\n\n// Render a NavBox Dom\nconst NavBox: React.FC<NavBoxProps> = ({\n  text,\n  sub = \"Click Me\",\n  to,\n  color\n}) => (\n  <Link to={to}>\n    <ButtonBase className={\"nav-button\"}>\n      <div className={\"nav-box \" + color}>\n        <div className=\"nav-box-content\">\n          <h3 className=\"nav-box-text\">{text}</h3>\n          <div className=\"nav-box-subText\">{sub}</div>\n        </div>\n      </div>\n    </ButtonBase>\n  </Link>\n);\n\n/**\n *  Render different Nav according to current pathname\n */\n\nconst HEADER_PROPS_MAP: { [type: number]: NavBoxProps } = {\n  0: {\n    text: \"FAST API\",\n    to: \"/api\",\n    color: \"black\"\n  },\n  1: {\n    text: \"ES API\",\n    to: \"/log\",\n    color: \"green\"\n  },\n  2: {\n    text: \"EDIT API\",\n    to: \"/\",\n    color: \"blue\"\n  },\n  3: {\n    text: \"CODE TEST\",\n    to: \"/\",\n    color: \"red\"\n  }\n};\n\nclass Header extends React.Component<RouteComponentProps> {\n  render() {\n    const pathname: string = this.props.location.pathname;\n    let navType: number = 0;\n    if (pathname === \"/\") {\n      navType = 0;\n    }\n    if (/^\\/api(\\/?)/.test(pathname)) {\n      navType = 1;\n    }\n    if (/^\\/log(\\/?)/.test(pathname)) {\n      navType = 3;\n    }\n    const navProps: NavBoxProps =\n      HEADER_PROPS_MAP[navType] || HEADER_PROPS_MAP[0];\n    return (\n      <header className=\"layout-header\">\n        <nav className=\"layout-header-nav\">\n          <NavBox {...navProps} />\n        </nav>\n      </header>\n    );\n  }\n}\nexport default withRouter(Header);\n","import React from \"react\";\nexport default (): React.ReactElement => <footer>if footer</footer>;\n","import React from \"react\";\nimport connect from \"@/container/progress\";\n\nconst Progress: React.FC<{ progress: boolean }> = props => {\n  return (\n    <article className=\"app-progress\">\n      {props.progress && <div className=\"app-progress-bar\" />}\n    </article>\n  );\n};\n\nexport default connect(Progress);\n","import { connect } from \"react-redux\";\n\nexport default connect((state: any) => ({ progress: state.progress }));\n","import { combineReducers } from \"redux\";\nimport baseApi from \"./baseApi\";\nimport progress from \"./progress\";\nimport history from \"./history\";\nexport default combineReducers({ baseApi, progress, history });\n","import { ADD_TODO } from \"@/actions/home\";\n\ninterface testAction {\n  type: ADD_TODO;\n  text: string;\n}\nexport default function baseApi(state: string[] = [], action: testAction) {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return state.concat([action.text]);\n    default:\n      return state;\n  }\n}\n","import { PROGRESS_STATUS, UpdateProgress } from \"../actions/home\";\n\nexport default function progress(\n  state: boolean = false,\n  action: UpdateProgress\n) {\n  switch (action.type) {\n    case PROGRESS_STATUS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n  HistoryActionType,\n  HISTORY_RESULT,\n  TimerDataInfo\n} from \"../actions/history\";\n\nexport default function progress(\n  state: TimerDataInfo[] = [],\n  action: HistoryActionType\n) {\n  switch (action.type) {\n    case HISTORY_RESULT:\n      return [action.payload].concat(state);\n    default:\n      return state;\n  }\n}\n","import reducer from \"./reducer\";\nimport { createStore } from \"redux\";\nconst store = createStore(reducer);\nexport default store;\n","import React from \"react\";\nimport { RouterView } from \"./router\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Progress from \"./components/Progress\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className={\"app\"}>\n          <HashRouter>\n            <Progress />\n            <Header />\n            <main className={\"layout-main\"}>\n              <RouterView />\n            </main>\n            <Footer />\n          </HashRouter>\n        </div>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./assets/css/index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport apiInterpreter from \"./utils/baseStatement\";\nimport { Loops } from \"./template/api\";\n\napiInterpreter.init([Loops]);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n","const Loops = {\n  for: \"<for>\",\n  for_less: \"<for_less>\",\n  while: \"<while>\",\n  while_less: \"<while_less>\",\n  forEach: \"<forEach>\",\n  map: \"<map>\",\n  test: \"<for>@s.push:(i)\",\n};\n\nexport { Loops };\n"],"sourceRoot":""}