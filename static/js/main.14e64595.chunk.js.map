{"version":3,"sources":["actions/history.ts","utils/loopCode.ts","utils/baseTimer.ts","utils/mock.ts","utils/baseStatement.ts","utils/common.ts","utils/indexDB.ts","actions/home.ts","router/index.tsx","components/Header.tsx","components/Footer.tsx","components/Progress.tsx","container/progress.ts","reducer/index.ts","reducer/currCode.ts","reducer/baseApi.ts","reducer/progress.ts","reducer/history.ts","store.ts","App.tsx","serviceWorker.ts","template/api.tsx","index.tsx"],"names":["HISTORY_RESULT","DELETE_TIMER","CHANGE_TIMER","CURRENT_CODE","updateHistoryResultData","timerData","type","payload","deleteHistoryTimerData","changeHistoryTimer","setCurrentCodeInfo","codeInfo","BaseCodeMap","__for","code","__for_less","__while","__while_less","__forEach","init","__map","__reduce","_uid","tempTimer","__initApiInfo","uid","currId","date","Date","now","name","startTime","endTime","useTime","status","id","__parseTimerInfo","info","children","beginTimer","timerInfo","window","performance","runError","message","error","endTimer","mock","Mock","mockObj","obj","mockData","Object","keys","forEach","key","arr","$n","Array","numArr","array","i","push","mockArr","objArr","BASE_EXPRESSION_MATCH","__createFunction","initCode","bodyCode","num","fn","funStr","replace","Function","e","interpreter","_api","_id","_apiMap","_customApiMap","this","expression","root","_getId","baseCode","loop","apiList","templateList","__root__","baseTemplateList","apiInfo","getBaseApiInfo","pushBaseApiInfo","_createBaseApiInfo","expressionData","match","_beforeCode","_loopName","_defineRoot","_isUsedApi","_apiParams","runtimeStatement","runtimeCode","join","loopInfo","loopCodeMap","runtimeFn","map","log","ColorMap","success","not","color","console","currentDB","StoreName","keyPath","DBName","connectStatus","awaitRequestQueue","returnReject","Promise","reject","_execRequestQueue","_pushRequestQueue","initDB","connect","indexedDB","open","onsuccess","result","onerror","onupgradeneeded","objectStoreNames","contains","createObjectStore","autoIncrement","_getTransactionStore","transaction","objectStore","addData","databaseItem","resolve","awaitFn","request","add","data","target","putData","put","deleteData","delete","getAllData","getAll","PROGRESS_STATUS","UpdateProgress","routes","path","component","lazy","RouteWithSubRoutes","route","exact","render","props","RouterView","fallback","NavBox","text","sub","to","ButtonBase","className","HEADER_PROPS_MAP","0","1","2","3","Header","pathname","location","navType","test","navProps","React","Component","withRouter","onClick","state","progress","combineReducers","currCode","action","assign","baseApi","concat","history","splice","index","indexOf","baseState","find","dataInfo","newDataInfo","store","createStore","reducer","App","Footer","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","apiInterpreter","for","for_less","while","while_less","reduce","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"2GAEA,gQAAO,IAAMA,EAAiB,iBAEjBC,EAAe,eAIfC,EAAe,eAEfC,EAAe,eAiDrB,SAASC,EACdC,GAEA,MAAO,CACLC,KAAMN,EACNO,QAASF,GAIN,SAASG,EACdH,GAEA,MAAO,CACLC,KAAML,EACNM,QAASF,GAWN,SAASI,EACdJ,GAEA,MAAO,CACLC,KAAMJ,EACNK,QAASF,GAIN,SAASK,EACdC,GAEA,MAAO,CACLL,KAAMH,EACNI,QAASI,K,0DCtCEC,EAVgC,CAC7CC,MAnDY,CACZC,KAAK,+CAmDLC,WA/CiB,CACjBD,KAAK,oDA+CLE,QA3Cc,CACdF,KAAK,sDA2CLG,aArCmB,CACnBH,KAAK,yCAqCLI,UAhCgB,CAChBC,KAAK,gCAELL,KAAK,4CA8BLM,MA1BY,CACZD,KAAK,gCAELL,KAAK,wCAwBLO,SAnBe,CACfF,KAAK,mCAELL,KAAK,qD,oOCnCP,IAAIQ,EAAe,EACfC,EAA4C,GA+BhD,SAASC,EAAcC,GACrB,IAAMC,IAdGJ,EAAO,GAeVK,EAAOC,KAAKC,MAYlB,OAXAN,EAAUG,GAAU,CAClBI,KAAM,GACNC,UAAW,EACXC,QAAS,EACTC,QAAS,EACTC,OAAQ,EACRP,OACAQ,GAAIT,EACJD,OAGKF,EAAUG,GAMnB,SAASU,EAAiBC,GACxB,O,qVAAO,CAAP,GACKA,EADL,CAEEC,SAAU,KAOd,SAASC,EAAWT,EAAcL,GApChCF,EAAY,GAuCZ,IAAMiB,EAAYhB,EAAcC,GAKhC,OAHAe,EAAUV,KAAOA,EACjBU,EAAUT,UAAYU,OAAOC,YAAYb,MAElCW,EAAUL,GAMnB,SAASQ,EAASR,EAAYS,GACxBrB,EAAUY,KACZZ,EAAUY,GAAID,OAAS,EACvBX,EAAUY,GAAIU,MAAQD,GAO1B,SAASE,EAASX,GAChB,IAAMK,EAA2BjB,EAAUY,GAS3C,OAPAK,EAAUR,QAAUS,OAAOC,YAAYb,MACvCW,EAAUP,QAAUO,EAAUR,QAAUQ,EAAUT,UAEzB,IAArBS,EAAUN,SACZM,EAAUN,OAAS,GAGdE,EAAiBI,G,qBCxF1B,SAASO,EAAKzC,GACZ,OAAO0C,IAAKD,KAAKzC,GAcnB,SAAS2C,EAAQC,GACf,IAAMC,EAAgB,GACtBC,OAAOC,KAAKH,GAAKI,QAAQ,SAACC,GACxB,OAAQL,EAAIK,IACV,IAAK,SACHJ,EAASI,GAAOP,IAAKD,KAAK,CAAE,cAAe,QAC3C,MACF,IAAK,SACHI,EAASI,GAAOP,IAAKD,KAAK,CAAE,mBAAoB,KAChD,MACF,IAAK,UACHI,EAASI,GAAOP,IAAKD,KAAK,CAAE,eAAe,IAC3C,MACF,IAAK,WACHI,EAASI,GAAO,aAChB,MACF,IAAK,OACHJ,EAASI,GAAOP,IAAKD,KAAK,UAC1B,MACF,IAAK,OACHI,EAASI,GAAOP,IAAKD,KAAK,SAK9B,OAAOI,IAYI,OACbK,IAjEF,SAAaC,GACX,OAAO,IAAIC,MAAMD,IAiEjBE,OA9DF,SAAgBF,GAEd,IADA,IAAMG,EAAkB,GACfC,EAAI,EAAGA,EAAIJ,EAAII,IACtBD,EAAME,KAAKD,GAEb,OAAOD,GA0DPG,QAnDF,SAAiBN,EAAYnD,GAE3B,IADA,IAAMsD,EAAe,GACZC,EAAI,EAAGA,EAAIJ,EAAII,IACtBD,EAAME,KAAKf,EAAKzC,KAiDlB0D,OAZF,SAAgBP,EAAYP,GAE1B,IADA,IAAMU,EAAQ,GACLC,EAAI,EAAGA,EAAIJ,EAAII,IACtBD,EAAME,KAAKb,EAAQC,IAErB,OAAOU,GAQPb,QClEIkB,EAAgC,wDAEtC,SAASC,EACPC,EACAC,EACAtC,EACAL,GAEA,OAAO,SAAS4C,GACd,IAiBIC,EAjBEC,EAAM,6BAERJ,EAAWA,EAASK,QAAQ,eAAgB,OAAS,GAF7C,mIASRJ,GAAY,GATJ,mJAkBZ,IAEEE,EAAK,IAAIG,SACP,KACA,QACA,QACA,WACA,WACA,YACA,OACAF,GAEF,MAAOG,GACP,MAAO,CAAE7B,MAAO6B,EAAE9B,SAGpB,OAAO0B,EACLD,EACArB,EACAlB,EAAO,IAAMuC,EAAM,IACnB9B,EACAO,EACAH,EACAlB,I,IAsKAkD,EAAc,I,WAvJlB,aAAe,yBAJRC,UAIO,OAHPC,SAGO,OAFPC,aAEO,OADPC,mBACO,EACZC,KAAKJ,KAAO,GACZI,KAAKH,IAAM,EACXG,KAAKF,QAAU,GACfE,KAAKD,cAAgB,G,qDAIrB,QAASC,KAAKH,IAAM,K,yCAIpBI,EACA1B,EACA2B,GAGA,MAAO,CACLA,OACA/C,GAHU6C,KAAKG,SAIf5B,MACAzB,KAAM,GACNsD,SAAU,GACVjB,SAAU,GACVkB,MAAM,EACNJ,aACA3E,KAAM,EACNgE,GAAI,gB,2BAIIgB,GAA6B,IAAD,OACtCA,EAAQhC,QAAQ,SAACiC,GAAmC,IAC1CC,EAAkCD,EAAlCC,SAAaC,EAD4B,YACPF,EADO,cAGjDnC,OAAOC,KAAKoC,GAAkBnC,QAAQ,SAACC,GACrC,IAAMmC,EAAU,EAAKC,eACnBF,EAAiBlC,GACjBA,EACAiC,GAEF,EAAKI,gBAAgBF,S,sCAIXA,GACTA,IACLV,KAAKJ,KAAKd,KAAK4B,GACfV,KAAKF,QAAQY,EAAQvD,IAAMuD,K,qCAG3BT,EACA1B,EACAiC,GAEA,GAAKP,EAAL,CACA,IAAMS,EAAUV,KAAKa,mBAAmBZ,EAAY1B,EAAKiC,GACnDM,EAAiBb,EAAWc,MAAM9B,IAA0B,GAE5D+B,EAAcF,EAAe,GAC7BG,EAAYH,EAAe,GAC3BI,EAAcJ,EAAe,IAAMN,EACnCW,EAAaL,EAAe,IAAMvC,EAClC6C,EAAaN,EAAe,GAE9BO,EAAmB,GACnBC,EAAc,GACdnC,EAAW,GACXiB,EAAW,GAmBf,GAjBIc,GACFG,EAAiBvC,KAAKoC,GAEpBC,GACFE,EAAiBvC,KAAKqC,GAGxBG,EAAcD,EAAiBE,KAAK,KAEhCH,IACFE,GAAW,WAAQF,EAAR,MAGTJ,IACF7B,EAAW6B,GAGTC,EAAW,CACb,IAAMO,EAAWC,EAAY,KAAOR,GAChCO,IACFpB,EAAWoB,EAAS1F,KAAK0D,QAAQ,SAAU8B,GAC3CnC,GAAYqC,EAASrF,MAAQ,IAAMgD,QAGrCiB,EAAWkB,EAGb,IAAMxE,EAAO0D,EACI,WAAbA,EACEjC,EACA,CAACiC,EAAUjC,GAAKgD,KAAK,KACvBhD,EAEEmD,EAAYxC,EAAiBC,EAAUiB,EAAUtD,EAAM4D,EAAQvD,IAOrE,OALAuD,EAAQvB,SAAWA,EACnBuB,EAAQN,SAAWA,EACnBM,EAAQR,KAAOgB,EACfR,EAAQ5D,KAAOA,EACf4D,EAAQpB,GAAKoC,EACNhB,K,uCAIP,OAAOV,KAAKJ,KAAK+B,IAAI,SAACjB,GACpB,MAAO,CACL5D,KAAM4D,EAAQ5D,KACdK,GAAIuD,EAAQvD,Q,iCAKAA,GAChB,OAAO6C,KAAKF,QAAQ3C,K,sCAGCA,GACrB,IAAMuD,EAAUV,KAAKF,QAAQ3C,IAAO6C,KAAKD,cAAc5C,GACvBuD,EAAxBpB,GACR,OAHmD,YAEnBoB,EAFmB,U,wCAM5BrD,GACvB,IAAMF,EAAKE,EAAKF,GAChB6C,KAAKD,cAAc5C,GAAME,I,uCAIzB+C,GAEc,IADdjB,EACa,uDADM,GAEbrC,EAAO,SACP4D,EAAUV,KAAKa,mBAAmB,GAAI/D,GAK5C,OAJA4D,EAAQvB,SAAWA,EACnBuB,EAAQN,SAAWA,EACnBM,EAAQpF,KAAO,EACfoF,EAAQpB,GAAKJ,EAAiBC,EAAUiB,EAAUtD,EAAM4D,EAAQvD,IACzDuD,M,MAMIf,O,gCC/NR,IAAMiC,EAAM,SAAShE,GAAkD,IAAjCtC,EAAgC,uDAAjB,UACpDuG,EAAoC,CACxCC,QAAS,QACTjE,MAAO,MACPR,KAAM,OACN0E,IAAK,QAEDC,EAAQH,EAASvG,IAAS,OAChC2G,QAAQL,IAAR,aAAkBhE,GAAlB,iBAAuCoE,KCRzC,gKAGA,IAIIE,EAJEC,EAAY,UACZC,EAAU,KACVC,EAAS,iBACXC,EAAwB,EAExBC,EAAgC,GAE9BC,EAAe,kBACnBC,QAAQC,OAAO,CACb7E,MAAO,8CAQX,SAAS8E,IACPJ,EAAkBjE,QAAQ,SAAAgB,GACxBA,MAEFiD,EAAoB,GAGtB,SAASK,EAAkBtD,GACzBiD,EAAkBzD,KAAKQ,GAGzB,SAASuD,IACP,IAAuB,IAAnBP,EAAJ,CACA,IAAMQ,EAAUrF,OAAOsF,UAAUC,KAAKX,GACtCS,EAAQG,UAAY,WAClBrB,EAAI,oBAAsBS,GAC1BC,EAAgB,EAChBJ,EAAYlC,KAAKkD,OACjBP,KAEFG,EAAQK,QAAU,WAChBb,GAAiB,EACjBV,EAAI,gBAAiB,UAEvBkB,EAAQM,gBAAkB,WACxBd,EAAgB,GAChBJ,EAAYlC,KAAKkD,QAEFG,iBAAiBC,SAASnB,KACvCD,EAAUqB,kBAAkBpB,EAAW,CACrCqB,eAAe,EACfpB,QAASA,IAEXR,EAAI,kCAAoCO,IAE1CQ,MAIJ,SAASc,IACP,OAAQvB,EACLwB,YAAY,CAACvB,GAAY,aACzBwB,YAAYxB,GAGjB,SAASyB,EAAQC,GAEf,OADAjC,EAAI,UAAW,SACQ,IAAnBU,EACKE,IAEF,IAAIC,QAAQ,SAACqB,EAASpB,GAC3B,IAAMqB,EAAU,WACd,IACMC,EADcP,IACQQ,IAAIJ,GAChCG,EAAQf,UAAY,SAASvD,GAC3BoE,EAAQ,CAAEI,KAAOxE,EAAEyE,OAAsBjB,UAE3Cc,EAAQb,QAAU,SAASzD,GACzBgD,EAAO,CAAE7E,MAAO6B,MAGE,IAAlB4C,EACFM,EAAkBmB,GAElBA,MAKN,SAASK,EAAQP,GAEf,OADAjC,EAAI,UAAW,SACQ,IAAnBU,EACKE,IAEF,IAAIC,QAAQ,SAACqB,EAASpB,GAC3B,IAAMqB,EAAU,WACd,IACMC,EADcP,IACQY,IAAIR,GAChCG,EAAQf,UAAY,SAASvD,GAC3BoE,EAAQ,CAAEI,KAAOxE,EAAEyE,OAAsBjB,UAE3Cc,EAAQb,QAAU,SAASzD,GACzBgD,EAAO,CAAE7E,MAAO6B,MAGE,IAAlB4C,EACFM,EAAkBmB,GAElBA,MAKN,SAASO,EAAWnH,GAElB,OADAyE,EAAI,aAAc,SACK,IAAnBU,EACKE,IAEF,IAAIC,QAAQ,SAACqB,EAASpB,GAC3B,IAAMqB,EAAU,WACd,IACMC,EADcP,IACQc,OAAOpH,GACnC6G,EAAQf,UAAY,SAASvD,GAC3BoE,EAAQ,CAAEI,KAAOxE,EAAEyE,OAAsBjB,UAE3Cc,EAAQb,QAAU,SAASzD,GACzBgD,EAAO,CAAE7E,MAAO6B,MAGE,IAAlB4C,EACFM,EAAkBmB,GAElBA,MA6BN,SAASS,IAEP,OADA5C,EAAI,UAAW,SACQ,IAAnBU,EACKE,IAEF,IAAIC,QAAQ,SAACqB,EAASpB,GAC3B,IAAMqB,EAAU,WACd,IACMC,EADcP,IACQgB,SAC5BT,EAAQf,UAAY,SAASvD,GAC3BoE,EAAQ,CAAEI,KAAOxE,EAAEyE,OAAsBjB,UAE3Cc,EAAQb,QAAU,SAASzD,GACzBgD,EAAO,CAAE7E,MAAO6B,MAGE,IAAlB4C,EACFM,EAAkBmB,GAElBA,MArKDtG,OAAOsF,YACVT,GAAiB,EACjBV,EAAI,2CAA4C,S,gCCjBlD,gEAAO,IAGM8C,EAAkB,kBAQxB,SAASC,EAAezH,GAC7B,MAAO,CACL5B,KAAMoJ,EACNnJ,QAAS2B,K,gCCdb,4FAIM0H,EAAsB,CAC1B,CACEC,KAAM,IACNC,UAAWC,eAAK,kBAAM,iCAExB,CACEF,KAAM,OACNC,UAAWC,eAAK,kBAAM,6DACtBH,OAAQ,CACN,CACEC,KAAM,WACNC,UAAWC,eAAK,kBAAM,gEAI5B,CACEF,KAAM,UACNC,UAAWC,eAAK,kBAAM,2EAExB,CACEF,KAAM,QACNC,UAAWC,eAAK,kBAAM,sEAI1B,SAASC,EAAmBC,GAC1B,OACE,kBAAC,IAAD,CACEC,MAAsB,MAAfD,EAAMJ,KACbA,KAAMI,EAAMJ,KACZM,OAAQ,SAACC,GAAD,OAEN,kBAACH,EAAMH,UAAP,iBAAqBM,EAArB,CAA4BR,OAAQK,EAAML,aAMlD,IAAMS,EAAuB,kBAC3B,kBAAC,WAAD,CAAUC,SAAU,4CACjBV,EAAOjD,IAAI,SAACsD,EAAOpG,GAClB,OAAO,kBAACmG,EAAD,eAAoBzG,IAAKM,GAAOoG,S,4MCjCvCM,EAAgC,SAAC,GAAD,IACpCC,EADoC,EACpCA,KADoC,IAEpCC,WAFoC,MAE9B,WAF8B,EAGpCC,EAHoC,EAGpCA,GACA1D,EAJoC,EAIpCA,MAJoC,OAMpC,kBAAC,IAAD,CAAM0D,GAAIA,GACR,kBAACC,EAAA,EAAD,CAAYC,UAAW,cACrB,yBAAKA,UAAW,WAAa5D,GAC3B,yBAAK4D,UAAU,mBACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,yBAAKI,UAAU,mBAAmBH,QAWtCI,EAAoD,CACxDC,EAAG,CACDN,KAAM,WACNE,GAAI,OACJ1D,MAAO,SAET+D,EAAG,CACDP,KAAM,eACNE,GAAI,UACJ1D,MAAO,QAETgE,EAAG,CACDR,KAAM,mBACNE,GAAI,QACJ1D,MAAO,SAETiE,EAAG,CACDT,KAAM,YACNE,GAAI,OACJ1D,MAAO,WAILkE,E,iLAEF,IAAMC,EAAmBnG,KAAKoF,MAAMgB,SAASD,SACzCE,EAAkB,EACL,MAAbF,IACFE,EAAU,GAER,cAAcC,KAAKH,KACrBE,EAAU,GAER,iBAAiBC,KAAKH,KACxBE,EAAU,GAER,eAAeC,KAAKH,KACtBE,EAAU,GAEZ,IAAME,EACJV,EAAiBQ,IAAYR,EAAiB,GAChD,OACE,4BAAQD,UAAU,iBAChB,yBAAKA,UAAU,qBACb,kBAAC,EAAWW,S,GArBDC,IAAMC,WA2BZC,cAAWR,GClFX,aAIb,OACE,4BAAQN,UAAU,cAChB,kBAACD,EAAA,EAAD,CAAYC,UAAW,aAAce,QALzC,WACElJ,OAAOuF,KAAK,4CAKR,yBAAK4C,UAAW,WACd,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,mBAAf,uD,QCAG9C,ECTAA,YAAQ,SAAC8D,GAAD,MAAiB,CAAEC,SAAUD,EAAMC,WDS3C/D,CARmC,SAAAsC,GAChD,OACE,6BAASQ,UAAU,gBAChBR,EAAMyB,UAAY,yBAAKjB,UAAU,wB,4CEDzBkB,kBAAgB,CAAEC,SCFlB,WAGZ,IAFDH,EAEA,uDAFiC,KACjCI,EACA,uCACA,OAAQA,EAAO1L,MACb,KAAKH,IACH,OAAOiD,OAAO6I,OAAO,GAAID,EAAOzL,SAClC,QACE,OAAOqL,IDN8BM,QEC5B,WAA4D,IAA3CN,EAA0C,uDAAxB,GAAII,EAAoB,uCACxE,OAAQA,EAAO1L,MACb,IAAK,WACH,OAAOsL,EAAMO,OAAO,CAACH,EAAOxB,OAC9B,QACE,OAAOoB,IFNuCC,SGHrC,WAGZ,IAFDD,EAEA,wDADAI,EACA,uCACA,OAAQA,EAAO1L,MACb,KAAKoJ,IACH,OAAOsC,EAAOzL,QAChB,QACE,OAAOqL,IHLiDQ,QII/C,WAGZ,IAFDR,EAEA,uDAFyB,GACzBI,EACA,uCACA,OAAQA,EAAO1L,MACb,KAAKN,IACH,MAAO,CAACgM,EAAOzL,SAAS4L,OAAOP,GAAOS,OAAO,EAAG,IAClD,KAAKpM,IACH,IAAMqM,EAAQV,EAAMW,QAAQP,EAAOzL,SAC/BiM,EAAS,YAAOZ,GAMpB,OAJIU,GAAS,GACXE,EAAUH,OAAOC,EAAO,GAGnBE,EAET,KAAKtM,IACH,IAAIuM,GAAQ,EAOZ,GANAb,EAAMtI,QAAQ,SAACoJ,EAAUJ,GACnBI,EAASvK,KAAO6J,EAAOzL,QAAQ4B,KACjCsK,EAAOH,KAIPG,EAAO,EAAG,OAAOb,EAErB,IAAMe,EAAcvJ,OAAO6I,OAAO,GAAIL,EAAMa,GAAOT,EAAOzL,SAG1D,OADAqL,EAAMS,OAAOI,EAAM,EAAGE,GACf,YAAIf,GAEb,QACE,OAAOA,MCvCEgB,EADDC,YAAYC,GCOLC,E,iLAEjB,OACE,kBAAC,IAAD,CAAUH,MAAOA,GACf,yBAAKhC,UAAW,OACd,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,0BAAMA,UAAW,eACf,kBAAC,IAAD,OAEF,kBAACoC,EAAD,a,GAXqBxB,IAAMC,W,sBCGjCwB,EAAcC,QACW,cAA7BzK,OAAO2I,SAAS+B,UAEe,UAA7B1K,OAAO2I,SAAS+B,UAEhB1K,OAAO2I,SAAS+B,SAASpH,MACvB,2DA8CN,SAASqH,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjC,QACf2B,UAAUC,cAAcQ,YAI1B/G,QAAQL,IACN,iHAKE0G,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlB1G,QAAQL,IAAI,sCAGR0G,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,UAO5BQ,MAAM,SAAAtL,GACLoE,QAAQpE,MAAM,4CAA6CA,KCxGjE,I,QCWAuL,IAAejN,KAAK,CDXN,CACZkN,IAAK,QACLC,SAAU,aACVC,MAAO,UACPC,WAAY,eACZlL,QAAS,YACTqD,IAAK,QACL8H,OAAQ,WACRnD,KAAM,6CCIRzD,cAEA6G,IAASvE,OAAO,kBAAC,EAAD,MAASwE,SAASC,eAAe,SFa1C,SAAkBtB,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIsB,IACnBC,YACDrM,OAAO2I,SAAS2D,MAEJC,SAAWvM,OAAO2I,SAAS4D,OAIvC,OAGFvM,OAAOwM,iBAAiB,OAAQ,WAC9B,IAAM5B,EAAK,UAAMyB,YAAN,sBAEP7B,IAgEV,SAAiCI,EAAeC,GAE9C4B,MAAM7B,GACHK,KAAK,SAAAyB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASjN,QACO,MAAfkN,IAA8D,IAAvCA,EAAY7C,QAAQ,cAG5CgB,UAAUC,cAAc+B,MAAM7B,KAAK,SAAAC,GACjCA,EAAa6B,aAAa9B,KAAK,WAC7BjL,OAAO2I,SAASqE,aAKpBrC,EAAgBC,EAAOC,KAG1Ba,MAAM,WACLlH,QAAQL,IACN,mEArFA8I,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,KAAK,WACjCzG,QAAQL,IACN,gHAMJwG,EAAgBC,EAAOC,ME1C/BE,K","file":"static/js/main.14e64595.chunk.js","sourcesContent":["import { DatabaseCodeInfo } from \"@/utils/types\";\n\nexport const HISTORY_RESULT = \"HISTORY_RESULT\";\nexport type HISTORY_RESULT = typeof HISTORY_RESULT;\nexport const DELETE_TIMER = \"DELETE_TIMER\";\nexport type DELETE_TIMER = typeof DELETE_TIMER;\nexport const PUSH_TIMER = \"PUSH_TIMER\";\nexport type PUSH_TIMER = typeof PUSH_TIMER;\nexport const CHANGE_TIMER = \"CHANGE_TIMER\";\nexport type CHANGE_TIMER = typeof CHANGE_TIMER;\nexport const CURRENT_CODE = \"CURRENT_CODE\";\nexport type CURRENT_CODE = typeof CURRENT_CODE;\n\nexport interface TimerChild {\n  name: string;\n  time: number;\n  async: boolean;\n}\n\nexport interface TimerDataInfo {\n  saved?: boolean;\n  uid: string;\n  id: string;\n  name: string;\n  startTime: number;\n  endTime: number;\n  status: number; // 0 - info, 1: success, 2: error\n  children: TimerChild[];\n  useTime: number;\n  date: number;\n  error?: string;\n}\n\nexport interface ChangeTimerInfo {\n  saved?: boolean;\n  id: string;\n  name?: string;\n  root?: boolean;\n  parentId?: string | null;\n  status?: number; // 0 - info, 1: success, 2: error\n  children?: TimerChild[];\n  date?: number;\n  error?: string;\n}\nexport interface HistoryActionType {\n  type: HISTORY_RESULT | DELETE_TIMER | PUSH_TIMER;\n  payload: TimerDataInfo;\n}\n\nexport interface ChangeHistoryActionType {\n  type: CHANGE_TIMER;\n  payload: ChangeTimerInfo;\n}\n\nexport interface SetCurrInfoActionType {\n  type: CURRENT_CODE;\n  payload: DatabaseCodeInfo;\n}\n\nexport function updateHistoryResultData(\n  timerData: TimerDataInfo\n): HistoryActionType {\n  return {\n    type: HISTORY_RESULT,\n    payload: timerData\n  };\n}\n\nexport function deleteHistoryTimerData(\n  timerData: TimerDataInfo\n): HistoryActionType {\n  return {\n    type: DELETE_TIMER,\n    payload: timerData\n  };\n}\n\nexport function pushHistoryTimer(timerData: TimerDataInfo): HistoryActionType {\n  return {\n    type: PUSH_TIMER,\n    payload: timerData\n  };\n}\n\nexport function changeHistoryTimer(\n  timerData: ChangeTimerInfo\n): ChangeHistoryActionType {\n  return {\n    type: CHANGE_TIMER,\n    payload: timerData\n  };\n}\n\nexport function setCurrentCodeInfo(\n  codeInfo: DatabaseCodeInfo\n): SetCurrInfoActionType {\n  return {\n    type: CURRENT_CODE,\n    payload: codeInfo\n  };\n}\n","const __for = {\n  code: `for (let i = 0; i < $n; i++) {\n  <body>\n}`,\n};\nconst __for_less = {\n  code: `for (let i = $n - 1; i >= 0; i--) {\n  <body>\n}`,\n};\nconst __while = {\n  code: `let i = 0; \nwhile(i < $n) {\n  i++; \n  <body>\n}`,\n};\nconst __while_less = {\n  code: `let i = $n;\nwhile(i--){\n  <body>\n}`,\n};\nconst __forEach = {\n  init: `let $Array = $mock.arr($n);\n`,\n  code: `$Array.forEach((_,$i) => {\n  <body>\n})`,\n};\nconst __map = {\n  init: `let $Array = $mock.arr($n);\n`,\n  code: `$Array.map((_,$i) => {\n  <body>\n})`,\n};\n\nconst __reduce = {\n  init: `let $Array = $mock.numArr($n);\n`,\n  code: `$Array.reduce(($pre, $cur) => {\n  <body>\n}, 0)`,\n};\n\ninterface baseCode {\n  init?: string;\n  code: string;\n}\nconst BaseCodeMap: { [x: string]: baseCode } = {\n  __for,\n  __for_less,\n  __while,\n  __while_less,\n  __forEach,\n  __map,\n  __reduce,\n};\n\nexport default BaseCodeMap;\n","import { TimerInfo } from \"./types\";\n\n/**\n * api测试打点简单，只需要插入一次打点，不需要介入ast遍历\n */\n\nlet _uid: number = 0;\nlet tempTimer: { [x: string]: defineApiInfo } = {};\n\ninterface defineApiInfo {\n  id: string;\n  startTime: number;\n  endTime: number;\n  useTime: number;\n  name: string;\n  date: number;\n  status: number;\n  uid: string;\n  error?: string;\n}\n\n/**\n * 创建一个唯一id\n */\nfunction createUid(): string {\n  return ++_uid + \"\";\n}\n\n/**\n * 清除之前工作树\n */\nfunction clearEmptyTimer() {\n  tempTimer = {};\n}\n\n/**\n * 初始化一个Timer Object\n */\nfunction __initApiInfo(uid: string): defineApiInfo {\n  const currId = createUid();\n  const date = Date.now();\n  tempTimer[currId] = {\n    name: \"\",\n    startTime: 0,\n    endTime: 0,\n    useTime: 0,\n    status: 0,\n    date,\n    id: currId,\n    uid\n  };\n\n  return tempTimer[currId];\n}\n\n/**\n * 补充timerInfo结构以便使用\n */\nfunction __parseTimerInfo(info: defineApiInfo): TimerInfo {\n  return {\n    ...info,\n    children: []\n  };\n}\n\n/**\n * 开始计时\n */\nfunction beginTimer(name: string, uid: string): string {\n  clearEmptyTimer();\n\n  const timerInfo = __initApiInfo(uid);\n\n  timerInfo.name = name;\n  timerInfo.startTime = window.performance.now();\n\n  return timerInfo.id;\n}\n\n/**\n * 错误情况\n */\nfunction runError(id: string, message: string) {\n  if (tempTimer[id]) {\n    tempTimer[id].status = 2;\n    tempTimer[id].error = message;\n  }\n}\n\n/**\n * 结束计时\n */\nfunction endTimer(id: string): TimerInfo {\n  const timerInfo: defineApiInfo = tempTimer[id];\n\n  timerInfo.endTime = window.performance.now();\n  timerInfo.useTime = timerInfo.endTime - timerInfo.startTime;\n\n  if (timerInfo.status === 0) {\n    timerInfo.status = 1;\n  }\n\n  return __parseTimerInfo(timerInfo);\n}\n\nexport { beginTimer, endTimer, runError };\n","import Mock from \"mockjs\";\n\nfunction arr($n: number): any[] {\n  return new Array($n);\n}\n\nfunction numArr($n: number): number[] {\n  const array: number[] = [];\n  for (let i = 0; i < $n; i++) {\n    array.push(i);\n  }\n  return array;\n}\n\nfunction mock(type: string) {\n  return Mock.mock(type);\n}\n\nfunction mockArr($n: number, type: string) {\n  const array: any[] = [];\n  for (let i = 0; i < $n; i++) {\n    array.push(mock(type));\n  }\n}\n\ntype MockObjType = {\n  [x: string]: \"string\" | \"number\" | \"boolean\" | \"function\" | \"name\" | \"time\";\n};\n\nfunction mockObj(obj: MockObjType) {\n  const mockData: any = {};\n  Object.keys(obj).forEach((key: string) => {\n    switch (obj[key]) {\n      case \"string\":\n        mockData[key] = Mock.mock({ \"string|1-10\": \"abc\" });\n        break;\n      case \"number\":\n        mockData[key] = Mock.mock({ \"number|10-100000\": 10 });\n        break;\n      case \"boolean\":\n        mockData[key] = Mock.mock({ \"boolean|1-2\": true });\n        break;\n      case \"function\":\n        mockData[key] = () => {};\n        break;\n      case \"name\":\n        mockData[key] = Mock.mock(\"@cname\");\n        break;\n      case \"time\":\n        mockData[key] = Mock.mock(\"@time\");\n      // eslint-disable-next-line\n      default:\n        break;\n    }\n    return mockData;\n  });\n}\n\nfunction objArr($n: number, obj: MockObjType) {\n  const array = [];\n  for (let i = 0; i < $n; i++) {\n    array.push(mockObj(obj));\n  }\n  return array;\n}\n\nexport default {\n  arr,\n  numArr,\n  mockArr,\n  objArr,\n  mock\n};\n","import loopCodeMap from \"./loopCode\";\nimport { BaseApiInfo, DatabaseCodeInfo } from \"./types\";\nimport { beginTimer, endTimer, runError } from \"./baseTimer\";\nimport Mock from \"./mock\";\n\nconst BASE_EXPRESSION_MATCH: RegExp = /^((.+?)\\|)?(<(.+?)>)?(@(.+?):)?(api)?(\\(\\((.+?)\\)\\))?/;\n\nfunction __createFunction(\n  initCode: string,\n  bodyCode: string,\n  name: string,\n  uid: string\n): Function {\n  return function(num: number) {\n    const funStr = `\n    try {\n      ${initCode ? initCode.replace(/(let|const)/g, \"var\") : \"\"}\n    } catch(e) {\n      return {error: e.message}\n    }\n\n    let _timeId = _newTime($name, _uid)\n    try {\n      ${bodyCode || \"\"}\n    } catch(e){\n      _runError(_timeId, e.message)\n    } finally {\n      let _result = _endTime(_timeId)\n      return _result\n    }\n  `;\n    let fn: Function;\n    try {\n      // eslint-disable-next-line\n      fn = new Function(\n        \"$n\",\n        \"$mock\",\n        \"$name\",\n        \"_newTime\",\n        \"_endTime\",\n        \"_runError\",\n        \"_uid\",\n        funStr\n      );\n    } catch (e) {\n      return { error: e.message };\n    }\n\n    return fn(\n      num,\n      Mock,\n      name + \"(\" + num + \")\",\n      beginTimer,\n      endTimer,\n      runError,\n      uid\n    );\n  };\n}\n\ninterface apiTemplateList {\n  __root__?: string;\n  [x: string]: string | undefined;\n}\n\nclass Interpreter {\n  public _api: BaseApiInfo[];\n  public _id: number;\n  public _apiMap: { [x: string]: BaseApiInfo };\n  public _customApiMap: { [x: string]: BaseApiInfo };\n  constructor() {\n    this._api = [];\n    this._id = 0;\n    this._apiMap = {};\n    this._customApiMap = {};\n  }\n\n  private _getId() {\n    return ++this._id + \"\";\n  }\n\n  private _createBaseApiInfo(\n    expression: string,\n    key: string,\n    root?: string\n  ): BaseApiInfo {\n    const uid = this._getId();\n    return {\n      root,\n      id: uid,\n      key,\n      name: \"\",\n      baseCode: \"\",\n      initCode: \"\",\n      loop: true,\n      expression,\n      type: 1,\n      fn: () => {}\n    };\n  }\n\n  public init(apiList: apiTemplateList[]) {\n    apiList.forEach((templateList: apiTemplateList) => {\n      const { __root__, ...baseTemplateList } = templateList;\n\n      Object.keys(baseTemplateList).forEach((key: string) => {\n        const apiInfo = this.getBaseApiInfo(\n          baseTemplateList[key],\n          key,\n          __root__\n        );\n        this.pushBaseApiInfo(apiInfo);\n      });\n    });\n  }\n  pushBaseApiInfo(apiInfo?: BaseApiInfo) {\n    if (!apiInfo) return;\n    this._api.push(apiInfo);\n    this._apiMap[apiInfo.id] = apiInfo;\n  }\n  public getBaseApiInfo(\n    expression: string | undefined,\n    key: string,\n    __root__?: string\n  ) {\n    if (!expression) return;\n    const apiInfo = this._createBaseApiInfo(expression, key, __root__);\n    const expressionData = expression.match(BASE_EXPRESSION_MATCH) || [];\n\n    const _beforeCode = expressionData[2];\n    const _loopName = expressionData[4];\n    const _defineRoot = expressionData[6] || __root__;\n    const _isUsedApi = expressionData[7] && key;\n    const _apiParams = expressionData[9];\n\n    let runtimeStatement = [];\n    let runtimeCode = \"\";\n    let initCode = \"\";\n    let baseCode = \"\";\n\n    if (_defineRoot) {\n      runtimeStatement.push(_defineRoot);\n    }\n    if (_isUsedApi) {\n      runtimeStatement.push(_isUsedApi);\n    }\n\n    runtimeCode = runtimeStatement.join(\".\");\n\n    if (_apiParams) {\n      runtimeCode += `(${_apiParams})`;\n    }\n\n    if (_beforeCode) {\n      initCode = _beforeCode;\n    }\n\n    if (_loopName) {\n      const loopInfo = loopCodeMap[\"__\" + _loopName];\n      if (loopInfo) {\n        baseCode = loopInfo.code.replace(/<body>/, runtimeCode);\n        initCode = (loopInfo.init || \"\") + initCode;\n      }\n    } else {\n      baseCode = runtimeCode;\n    }\n\n    const name = __root__\n      ? __root__ === \"window\"\n        ? key\n        : [__root__, key].join(\".\")\n      : key;\n\n    const runtimeFn = __createFunction(initCode, baseCode, name, apiInfo.id);\n\n    apiInfo.initCode = initCode;\n    apiInfo.baseCode = baseCode;\n    apiInfo.root = _defineRoot;\n    apiInfo.name = name;\n    apiInfo.fn = runtimeFn;\n    return apiInfo;\n  }\n\n  public getApiMenuList(): { name: string; id: string }[] {\n    return this._api.map((apiInfo: BaseApiInfo) => {\n      return {\n        name: apiInfo.name,\n        id: apiInfo.id\n      };\n    });\n  }\n\n  public getApiInfo(id: string): BaseApiInfo {\n    return this._apiMap[id];\n  }\n\n  public getDatabaseInfo(id: string): DatabaseCodeInfo {\n    const apiInfo = this._apiMap[id] || this._customApiMap[id];\n    const { fn, ...databaseInfo } = apiInfo;\n    return databaseInfo;\n  }\n\n  public pushCustomApiInfo(info: BaseApiInfo) {\n    const id = info.id;\n    this._customApiMap[id] = info;\n  }\n\n  public createCustomInfo(\n    baseCode: string,\n    initCode: string = \"\"\n  ): BaseApiInfo {\n    const name = \"Custom\";\n    const apiInfo = this._createBaseApiInfo(\"\", name);\n    apiInfo.initCode = initCode;\n    apiInfo.baseCode = baseCode;\n    apiInfo.type = 2;\n    apiInfo.fn = __createFunction(initCode, baseCode, name, apiInfo.id);\n    return apiInfo;\n  }\n}\n\nconst interpreter = new Interpreter();\n\nexport default interpreter;\n","export const log = function(message: string, type: string = \"success\"): void {\n  const ColorMap: { [x: string]: string } = {\n    success: \"green\",\n    error: \"red\",\n    info: \"blue\",\n    not: \"gray\",\n  };\n  const color = ColorMap[type] || \"gray\";\n  console.log(`%c ${message}`, `color: ${color}`);\n};\n","import { log } from \"./common\";\nimport { DatabaseItem, SyncReturn } from \"./types\";\n\nconst StoreName = \"history\";\nconst keyPath = \"id\";\nconst DBName = \"fast_api_timer\";\nlet connectStatus: number = 0; // DB连接状态\nlet currentDB: IDBDatabase | null; // 当前db名称\nlet awaitRequestQueue: Function[] = [];\n\nconst returnReject = () =>\n  Promise.reject({\n    error: \"IndexDB is not supported by your browser\"\n  });\n\nif (!window.indexedDB) {\n  connectStatus = -1;\n  log(\"IndexDB is not supported by your browser\", \"not\");\n}\n\nfunction _execRequestQueue() {\n  awaitRequestQueue.forEach(fn => {\n    fn();\n  });\n  awaitRequestQueue = [];\n}\n\nfunction _pushRequestQueue(fn: Function) {\n  awaitRequestQueue.push(fn);\n}\n\nfunction initDB() {\n  if (connectStatus === -1) return;\n  const connect = window.indexedDB.open(DBName);\n  connect.onsuccess = function() {\n    log(\"connect success: \" + DBName);\n    connectStatus = 1;\n    currentDB = this.result;\n    _execRequestQueue();\n  };\n  connect.onerror = function() {\n    connectStatus = -1;\n    log(\"connect error\", \"error\");\n  };\n  connect.onupgradeneeded = function() {\n    connectStatus = 2;\n    currentDB = this.result;\n\n    if (!currentDB.objectStoreNames.contains(StoreName)) {\n      currentDB.createObjectStore(StoreName, {\n        autoIncrement: true,\n        keyPath: keyPath\n      });\n      log(\"create success of objectStore: \" + StoreName);\n    }\n    _execRequestQueue();\n  };\n}\n\nfunction _getTransactionStore(): IDBObjectStore {\n  return (currentDB as IDBDatabase)\n    .transaction([StoreName], \"readwrite\")\n    .objectStore(StoreName);\n}\n\nfunction addData(databaseItem: DatabaseItem): SyncReturn {\n  log(\"addData\", \"info\");\n  if (connectStatus === -1) {\n    return returnReject();\n  }\n  return new Promise((resolve, reject) => {\n    const awaitFn = () => {\n      const objectStore = _getTransactionStore();\n      const request = objectStore.add(databaseItem);\n      request.onsuccess = function(e: Event) {\n        resolve({ data: (e.target as IDBRequest).result });\n      };\n      request.onerror = function(e: Event) {\n        reject({ error: e });\n      };\n    };\n    if (connectStatus === 0) {\n      _pushRequestQueue(awaitFn);\n    } else {\n      awaitFn();\n    }\n  });\n}\n\nfunction putData(databaseItem: DatabaseItem): SyncReturn {\n  log(\"addData\", \"info\");\n  if (connectStatus === -1) {\n    return returnReject();\n  }\n  return new Promise((resolve, reject) => {\n    const awaitFn = () => {\n      const objectStore = _getTransactionStore();\n      const request = objectStore.put(databaseItem);\n      request.onsuccess = function(e: Event) {\n        resolve({ data: (e.target as IDBRequest).result });\n      };\n      request.onerror = function(e: Event) {\n        reject({ error: e });\n      };\n    };\n    if (connectStatus === 0) {\n      _pushRequestQueue(awaitFn);\n    } else {\n      awaitFn();\n    }\n  });\n}\n\nfunction deleteData(id: string): SyncReturn {\n  log(\"deleteData\", \"info\");\n  if (connectStatus === -1) {\n    return returnReject();\n  }\n  return new Promise((resolve, reject) => {\n    const awaitFn = () => {\n      const objectStore = _getTransactionStore();\n      const request = objectStore.delete(id);\n      request.onsuccess = function(e: Event) {\n        resolve({ data: (e.target as IDBRequest).result });\n      };\n      request.onerror = function(e: Event) {\n        reject({ error: e });\n      };\n    };\n    if (connectStatus === 0) {\n      _pushRequestQueue(awaitFn);\n    } else {\n      awaitFn();\n    }\n  });\n}\n\nfunction getData(id: string): SyncReturn {\n  log(\"getData\", \"info\");\n  if (connectStatus === -1) {\n    return returnReject();\n  }\n  return new Promise((resolve, reject) => {\n    const awaitFn = () => {\n      const objectStore = _getTransactionStore();\n      const request = objectStore.get(id);\n      request.onsuccess = function(e: Event) {\n        resolve({ data: (e.target as IDBRequest).result });\n      };\n      request.onerror = function(e: Event) {\n        reject({ error: e });\n      };\n    };\n    if (connectStatus === 0) {\n      _pushRequestQueue(awaitFn);\n    } else {\n      awaitFn();\n    }\n  });\n}\n\nfunction getAllData(): SyncReturn {\n  log(\"getData\", \"info\");\n  if (connectStatus === -1) {\n    return returnReject();\n  }\n  return new Promise((resolve, reject) => {\n    const awaitFn = () => {\n      const objectStore = _getTransactionStore();\n      const request = objectStore.getAll();\n      request.onsuccess = function(e: Event) {\n        resolve({ data: (e.target as IDBRequest).result });\n      };\n      request.onerror = function(e: Event) {\n        reject({ error: e });\n      };\n    };\n    if (connectStatus === 0) {\n      _pushRequestQueue(awaitFn);\n    } else {\n      awaitFn();\n    }\n  });\n}\n\nexport { initDB, addData, deleteData, getData, getAllData, putData };\n","export const ADD_TODO = \"ADD_TODO\";\nexport type ADD_TODO = typeof ADD_TODO;\n\nexport const PROGRESS_STATUS = \"PROGRESS_STATUS\";\nexport type PROGRESS_STATUS = typeof PROGRESS_STATUS;\n\nexport interface UpdateProgress {\n  type: PROGRESS_STATUS;\n  payload: boolean;\n}\n\nexport function UpdateProgress(status: boolean): UpdateProgress {\n  return {\n    type: PROGRESS_STATUS,\n    payload: status\n  };\n}\n","import React, { Suspense, lazy } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { RouterMap } from \"./types\";\n\nconst routes: RouterMap[] = [\n  {\n    path: \"/\",\n    component: lazy(() => import(\"../page/home/App\")),\n  },\n  {\n    path: \"/api\",\n    component: lazy(() => import(\"../page/api/App\")),\n    routes: [\n      {\n        path: \"/api/:id\",\n        component: lazy(() => import(\"../page/api/View\")),\n      },\n    ],\n  },\n  {\n    path: \"/custom\",\n    component: lazy(() => import(\"../page/custom/App\")),\n  },\n  {\n    path: \"/code\",\n    component: lazy(() => import(\"../page/code/App\")),\n  },\n];\n\nfunction RouteWithSubRoutes(route: RouterMap) {\n  return (\n    <Route\n      exact={route.path === \"/\"}\n      path={route.path}\n      render={(props: any) => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\nconst RouterView: React.FC = () => (\n  <Suspense fallback={<div>loading...</div>}>\n    {routes.map((route, i) => {\n      return <RouteWithSubRoutes key={i} {...route} />;\n    })}\n  </Suspense>\n);\n\nexport { RouterView, RouteWithSubRoutes };\n","import React from \"react\";\n// eslint-disable-next-line\nimport { Link, withRouter, RouteComponentProps } from \"react-router-dom\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\ninterface NavBoxProps {\n  text: string;\n  sub?: string;\n  to: string;\n  color: string;\n}\n\n// Render a NavBox Dom\nconst NavBox: React.FC<NavBoxProps> = ({\n  text,\n  sub = \"Click Me\",\n  to,\n  color,\n}) => (\n  <Link to={to}>\n    <ButtonBase className={\"nav-button\"}>\n      <div className={\"nav-box \" + color}>\n        <div className=\"nav-box-content\">\n          <h3 className=\"nav-box-text\">{text}</h3>\n          <div className=\"nav-box-subText\">{sub}</div>\n        </div>\n      </div>\n    </ButtonBase>\n  </Link>\n);\n\n/**\n *  Render different Nav according to current pathname\n */\n\nconst HEADER_PROPS_MAP: { [type: number]: NavBoxProps } = {\n  0: {\n    text: \"FAST API\",\n    to: \"/api\",\n    color: \"black\",\n  },\n  1: {\n    text: \"ES API TIMER\",\n    to: \"/custom\",\n    color: \"blue\",\n  },\n  2: {\n    text: \"CUSTOM API TIMER\",\n    to: \"/code\",\n    color: \"green\",\n  },\n  3: {\n    text: \"CODE TEST\",\n    to: \"/api\",\n    color: \"yellow\",\n  },\n};\n\nclass Header extends React.Component<RouteComponentProps> {\n  render() {\n    const pathname: string = this.props.location.pathname;\n    let navType: number = 0;\n    if (pathname === \"/\") {\n      navType = 0;\n    }\n    if (/^\\/api(\\/?)/.test(pathname)) {\n      navType = 1;\n    }\n    if (/^\\/custom(\\/?)/.test(pathname)) {\n      navType = 2;\n    }\n    if (/^\\/code(\\/?)/.test(pathname)) {\n      navType = 3;\n    }\n    const navProps: NavBoxProps =\n      HEADER_PROPS_MAP[navType] || HEADER_PROPS_MAP[0];\n    return (\n      <header className=\"layout-header\">\n        <nav className=\"layout-header-nav\">\n          <NavBox {...navProps} />\n        </nav>\n      </header>\n    );\n  }\n}\nexport default withRouter(Header);\n","import React from \"react\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nexport default (): React.ReactElement => {\n  function openGithub() {\n    window.open(\"https://github.com/ArthurYung/fast-api\");\n  }\n  return (\n    <footer className=\"footer-nav\">\n      <ButtonBase className={\"nav-button\"} onClick={openGithub}>\n        <div className={\"nav-box\"}>\n          <div className=\"nav-box-content\">\n            <div className=\"nav-box-subText\">\n              github: https://github.com/ArthurYung/fast-api\n            </div>\n          </div>\n        </div>\n      </ButtonBase>\n    </footer>\n  );\n};\n","import React from \"react\";\nimport connect from \"@/container/progress\";\n\nconst Progress: React.FC<{ progress: boolean }> = props => {\n  return (\n    <article className=\"app-progress\">\n      {props.progress && <div className=\"app-progress-bar\" />}\n    </article>\n  );\n};\n\nexport default connect(Progress);\n","import { connect } from \"react-redux\";\n\nexport default connect((state: any) => ({ progress: state.progress }));\n","import { combineReducers } from \"redux\";\nimport baseApi from \"./baseApi\";\nimport progress from \"./progress\";\nimport currCode from \"./currCode\";\nimport history from \"./history\";\nexport default combineReducers({ currCode, baseApi, progress, history });\n","import { SetCurrInfoActionType, CURRENT_CODE } from \"../actions/history\";\nimport { DatabaseCodeInfo } from \"../utils/types\";\n\nexport default function progress(\n  state: DatabaseCodeInfo | null = null,\n  action: SetCurrInfoActionType\n) {\n  switch (action.type) {\n    case CURRENT_CODE:\n      return Object.assign({}, action.payload);\n    default:\n      return state;\n  }\n}\n","import { ADD_TODO } from \"@/actions/home\";\n\ninterface testAction {\n  type: ADD_TODO;\n  text: string;\n}\nexport default function baseApi(state: string[] = [], action: testAction) {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return state.concat([action.text]);\n    default:\n      return state;\n  }\n}\n","import { PROGRESS_STATUS, UpdateProgress } from \"../actions/home\";\n\nexport default function progress(\n  state: boolean = false,\n  action: UpdateProgress\n) {\n  switch (action.type) {\n    case PROGRESS_STATUS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n  HistoryActionType,\n  HISTORY_RESULT,\n  TimerDataInfo,\n  DELETE_TIMER,\n  ChangeHistoryActionType,\n  CHANGE_TIMER\n} from \"../actions/history\";\n\nexport default function progress(\n  state: TimerDataInfo[] = [],\n  action: HistoryActionType | ChangeHistoryActionType\n) {\n  switch (action.type) {\n    case HISTORY_RESULT:\n      return [action.payload].concat(state).splice(0, 99);\n    case DELETE_TIMER:\n      const index = state.indexOf(action.payload);\n      let baseState = [...state];\n\n      if (index > -1) {\n        baseState.splice(index, 1);\n      }\n\n      return baseState;\n\n    case CHANGE_TIMER:\n      let find = -1;\n      state.forEach((dataInfo, index) => {\n        if (dataInfo.id === action.payload.id) {\n          find = index;\n        }\n      });\n\n      if (find < 0) return state;\n\n      const newDataInfo = Object.assign({}, state[find], action.payload);\n\n      state.splice(find, 1, newDataInfo);\n      return [...state];\n\n    default:\n      return state;\n  }\n}\n","import reducer from \"./reducer\";\nimport { createStore } from \"redux\";\nconst store = createStore(reducer);\nexport default store;\n","import React from \"react\";\nimport { RouterView } from \"./router\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Progress from \"./components/Progress\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className={\"app\"}>\n          <HashRouter>\n            <Progress />\n            <Header />\n            <main className={\"layout-main\"}>\n              <RouterView />\n            </main>\n            <Footer />\n          </HashRouter>\n        </div>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const Loops = {\n  for: \"<for>\",\n  for_less: \"<for_less>\",\n  while: \"<while>\",\n  while_less: \"<while_less>\",\n  forEach: \"<forEach>\",\n  map: \"<map>\",\n  reduce: \"<reduce>\",\n  test: \"let $newArr = []|<for>@$newArr.push(i):\"\n};\n\nexport { Loops };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./assets/css/index.scss\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport apiInterpreter from \"./utils/baseStatement\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Loops } from \"./template/api\";\nimport { initDB } from \"./utils/indexDB\";\n// import * as worker from \"./utils/worker\";\n// worker.addWorkerWatcher((e) => {});\napiInterpreter.init([Loops]);\ninitDB();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n"],"sourceRoot":""}