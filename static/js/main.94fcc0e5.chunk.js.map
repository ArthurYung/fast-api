{"version":3,"sources":["actions/history.ts","utils/loopCode.ts","utils/baseTimer.ts","utils/mock.ts","utils/baseStatement.ts","utils/element.ts","utils/common.ts","utils/indexDB.ts","actions/home.ts","router/index.tsx","components/Header.tsx","components/Footer.tsx","components/Progress.tsx","container/progress.ts","reducer/index.ts","reducer/currCode.ts","reducer/baseApi.ts","reducer/progress.ts","reducer/history.ts","store.ts","App.tsx","serviceWorker.ts","template/api.tsx","index.tsx"],"names":["HISTORY_RESULT","DELETE_TIMER","CHANGE_TIMER","CURRENT_CODE","updateHistoryResultData","timerData","type","payload","deleteHistoryTimerData","changeHistoryTimer","setCurrentCodeInfo","codeInfo","BaseCodeMap","__for","code","__for_less","__while","__while_less","__forEach","init","__map","__reduce","_uid","tempTimer","__initApiInfo","uid","currId","date","Date","now","name","startTime","endTime","useTime","status","id","__parseTimerInfo","info","children","beginTimer","timerInfo","window","performance","runError","message","error","endTimer","mock","Mock","mockObj","obj","mockData","Object","keys","forEach","key","arr","$n","Array","numArr","array","i","push","mockArr","objArr","ele","tagName","num","document","createElement","elem","BASE_EXPRESSION_MATCH","__createFunction","initCode","bodyCode","fn","funStr","replace","Function","e","console","log","Dom","element","DomBox","style","cssText","body","appendChild","createElementBox","result","innerHTML","removeChild","interpreter","_api","_id","_apiMap","_customApiMap","this","expression","root","_getId","baseCode","loop","apiList","templateList","__root__","baseTemplateList","apiInfo","getBaseApiInfo","pushBaseApiInfo","_createBaseApiInfo","expressionData","match","_beforeCode","_loopName","_defineRoot","_isUsedApi","_apiParams","runtimeStatement","runtimeCode","join","loopInfo","loopCodeMap","runtimeFn","map","ColorMap","success","not","color","currentDB","StoreName","keyPath","DBName","connectStatus","awaitRequestQueue","returnReject","Promise","reject","_execRequestQueue","_pushRequestQueue","initDB","connect","indexedDB","open","onsuccess","onerror","onupgradeneeded","objectStoreNames","contains","createObjectStore","autoIncrement","_getTransactionStore","transaction","objectStore","addData","databaseItem","resolve","awaitFn","request","add","data","target","putData","put","deleteData","delete","getAllData","getAll","PROGRESS_STATUS","UpdateProgress","routes","path","component","lazy","RouteWithSubRoutes","route","exact","render","props","RouterView","fallback","NavBox","text","sub","to","ButtonBase","className","HEADER_PROPS_MAP","0","1","2","3","Header","pathname","location","navType","test","navProps","React","Component","withRouter","onClick","state","progress","combineReducers","currCode","action","assign","baseApi","concat","history","splice","index","indexOf","baseState","find","dataInfo","newDataInfo","store","createStore","reducer","App","Footer","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","apiInterpreter","for","for_less","while","while_less","reduce","getAttribute","setAttribute","parse","stringify","isArray","form","of","copyWithin","sort","shift","unshift","includes","ReactDOM","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.94fcc0e5.chunk.js","sourcesContent":["import { DatabaseCodeInfo } from \"@/utils/types\";\r\n\r\nexport const HISTORY_RESULT = \"HISTORY_RESULT\";\r\nexport type HISTORY_RESULT = typeof HISTORY_RESULT;\r\nexport const DELETE_TIMER = \"DELETE_TIMER\";\r\nexport type DELETE_TIMER = typeof DELETE_TIMER;\r\nexport const PUSH_TIMER = \"PUSH_TIMER\";\r\nexport type PUSH_TIMER = typeof PUSH_TIMER;\r\nexport const CHANGE_TIMER = \"CHANGE_TIMER\";\r\nexport type CHANGE_TIMER = typeof CHANGE_TIMER;\r\nexport const CURRENT_CODE = \"CURRENT_CODE\";\r\nexport type CURRENT_CODE = typeof CURRENT_CODE;\r\n\r\nexport interface TimerChild {\r\n  name: string;\r\n  time: number;\r\n  async: boolean;\r\n}\r\n\r\nexport interface TimerDataInfo {\r\n  saved?: boolean;\r\n  uid: string;\r\n  id: string;\r\n  name: string;\r\n  startTime: number;\r\n  endTime: number;\r\n  status: number; // 0 - info, 1: success, 2: error\r\n  children: TimerChild[];\r\n  useTime: number;\r\n  date: number;\r\n  error?: string;\r\n}\r\n\r\nexport interface ChangeTimerInfo {\r\n  saved?: boolean;\r\n  id: string;\r\n  name?: string;\r\n  root?: boolean;\r\n  parentId?: string | null;\r\n  status?: number; // 0 - info, 1: success, 2: error\r\n  children?: TimerChild[];\r\n  date?: number;\r\n  error?: string;\r\n}\r\nexport interface HistoryActionType {\r\n  type: HISTORY_RESULT | DELETE_TIMER | PUSH_TIMER;\r\n  payload: TimerDataInfo;\r\n}\r\n\r\nexport interface ChangeHistoryActionType {\r\n  type: CHANGE_TIMER;\r\n  payload: ChangeTimerInfo;\r\n}\r\n\r\nexport interface SetCurrInfoActionType {\r\n  type: CURRENT_CODE;\r\n  payload: DatabaseCodeInfo;\r\n}\r\n\r\nexport function updateHistoryResultData(\r\n  timerData: TimerDataInfo\r\n): HistoryActionType {\r\n  return {\r\n    type: HISTORY_RESULT,\r\n    payload: timerData\r\n  };\r\n}\r\n\r\nexport function deleteHistoryTimerData(\r\n  timerData: TimerDataInfo\r\n): HistoryActionType {\r\n  return {\r\n    type: DELETE_TIMER,\r\n    payload: timerData\r\n  };\r\n}\r\n\r\nexport function pushHistoryTimer(timerData: TimerDataInfo): HistoryActionType {\r\n  return {\r\n    type: PUSH_TIMER,\r\n    payload: timerData\r\n  };\r\n}\r\n\r\nexport function changeHistoryTimer(\r\n  timerData: ChangeTimerInfo\r\n): ChangeHistoryActionType {\r\n  return {\r\n    type: CHANGE_TIMER,\r\n    payload: timerData\r\n  };\r\n}\r\n\r\nexport function setCurrentCodeInfo(\r\n  codeInfo: DatabaseCodeInfo\r\n): SetCurrInfoActionType {\r\n  return {\r\n    type: CURRENT_CODE,\r\n    payload: codeInfo\r\n  };\r\n}\r\n","const __for = {\r\n  code: `for (let i = 0; i < $n; i++) {\r\n  <body>\r\n}`\r\n};\r\nconst __for_less = {\r\n  code: `for (let i = $n - 1; i >= 0; i--) {\r\n  <body>\r\n}`\r\n};\r\nconst __while = {\r\n  code: `let i = 0; \r\nwhile(i < $n) {\r\n  i++; \r\n  <body>\r\n}`\r\n};\r\nconst __while_less = {\r\n  code: `let i = $n;\r\nwhile(i--){\r\n  <body>\r\n}`\r\n};\r\nconst __forEach = {\r\n  init: `let $Array = $mock.arr($n);\r\n`,\r\n  code: `$Array.forEach((_,i) => {\r\n  <body>\r\n})`\r\n};\r\nconst __map = {\r\n  init: `let $Array = $mock.arr($n);\r\n`,\r\n  code: `$Array.map((_,i) => {\r\n  <body>\r\n})`\r\n};\r\n\r\nconst __reduce = {\r\n  init: `let $Array = $mock.numArr($n);\r\n`,\r\n  code: `$Array.reduce(($pre, $cur) => {\r\n  <body>\r\n}, 0)`\r\n};\r\n\r\ninterface baseCode {\r\n  init?: string;\r\n  code: string;\r\n}\r\nconst BaseCodeMap: { [x: string]: baseCode } = {\r\n  __for,\r\n  __for_less,\r\n  __while,\r\n  __while_less,\r\n  __forEach,\r\n  __map,\r\n  __reduce\r\n};\r\n\r\nexport default BaseCodeMap;\r\n","import { TimerInfo } from \"./types\";\r\n\r\n/**\r\n * api测试打点简单，只需要插入一次打点，不需要介入ast遍历\r\n */\r\n\r\nlet _uid: number = 0;\r\nlet tempTimer: { [x: string]: defineApiInfo } = {};\r\n\r\ninterface defineApiInfo {\r\n  id: string;\r\n  startTime: number;\r\n  endTime: number;\r\n  useTime: number;\r\n  name: string;\r\n  date: number;\r\n  status: number;\r\n  uid: string;\r\n  error?: string;\r\n}\r\n\r\n/**\r\n * 创建一个唯一id\r\n */\r\nfunction createUid(): string {\r\n  return ++_uid + \"\";\r\n}\r\n\r\n/**\r\n * 清除之前工作树\r\n */\r\nfunction clearEmptyTimer() {\r\n  tempTimer = {};\r\n}\r\n\r\n/**\r\n * 初始化一个Timer Object\r\n */\r\nfunction __initApiInfo(uid: string): defineApiInfo {\r\n  const currId = createUid();\r\n  const date = Date.now();\r\n  tempTimer[currId] = {\r\n    name: \"\",\r\n    startTime: 0,\r\n    endTime: 0,\r\n    useTime: 0,\r\n    status: 0,\r\n    date,\r\n    id: currId,\r\n    uid\r\n  };\r\n\r\n  return tempTimer[currId];\r\n}\r\n\r\n/**\r\n * 补充timerInfo结构以便使用\r\n */\r\nfunction __parseTimerInfo(info: defineApiInfo): TimerInfo {\r\n  return {\r\n    ...info,\r\n    children: []\r\n  };\r\n}\r\n\r\n/**\r\n * 开始计时\r\n */\r\nfunction beginTimer(name: string, uid: string): string {\r\n  clearEmptyTimer();\r\n\r\n  const timerInfo = __initApiInfo(uid);\r\n\r\n  timerInfo.name = name;\r\n  timerInfo.startTime = window.performance.now();\r\n\r\n  return timerInfo.id;\r\n}\r\n\r\n/**\r\n * 错误情况\r\n */\r\nfunction runError(id: string, message: string) {\r\n  if (tempTimer[id]) {\r\n    tempTimer[id].status = 2;\r\n    tempTimer[id].error = message;\r\n  }\r\n}\r\n\r\n/**\r\n * 结束计时\r\n */\r\nfunction endTimer(id: string): TimerInfo {\r\n  const timerInfo: defineApiInfo = tempTimer[id];\r\n\r\n  timerInfo.endTime = window.performance.now();\r\n  timerInfo.useTime = timerInfo.endTime - timerInfo.startTime;\r\n\r\n  if (timerInfo.status === 0) {\r\n    timerInfo.status = 1;\r\n  }\r\n\r\n  return __parseTimerInfo(timerInfo);\r\n}\r\n\r\nexport { beginTimer, endTimer, runError };\r\n","import Mock from \"mockjs\";\r\n\r\nfunction arr($n: number): any[] {\r\n  return new Array($n);\r\n}\r\n\r\nfunction numArr($n: number): number[] {\r\n  const array: number[] = [];\r\n  for (let i = 0; i < $n; i++) {\r\n    array.push(i);\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction mock(type: string) {\r\n  return Mock.mock(type);\r\n}\r\n\r\nfunction mockArr($n: number, type: string) {\r\n  const array: any[] = [];\r\n  for (let i = 0; i < $n; i++) {\r\n    array.push(mock(type));\r\n  }\r\n}\r\n\r\nfunction element(tagName: string, num?: number) {\r\n  if (!num) {\r\n    return document.createElement(tagName);\r\n  }\r\n  const elem = [];\r\n  for (let i = 0; i < num; i++) {\r\n    elem.push(document.createElement(tagName));\r\n  }\r\n  return elem;\r\n}\r\n\r\ntype MockObjType = {\r\n  [x: string]: \"string\" | \"number\" | \"boolean\" | \"function\" | \"name\" | \"time\";\r\n};\r\n\r\nfunction mockObj(obj: MockObjType) {\r\n  const mockData: any = {};\r\n  Object.keys(obj).forEach((key: string) => {\r\n    switch (obj[key]) {\r\n      case \"string\":\r\n        mockData[key] = Mock.mock({ \"string|1-10\": \"abc\" });\r\n        break;\r\n      case \"number\":\r\n        mockData[key] = Mock.mock({ \"number|10-100000\": 10 });\r\n        break;\r\n      case \"boolean\":\r\n        mockData[key] = Mock.mock({ \"boolean|1-2\": true });\r\n        break;\r\n      case \"function\":\r\n        mockData[key] = () => {};\r\n        break;\r\n      case \"name\":\r\n        mockData[key] = Mock.mock(\"@cname\");\r\n        break;\r\n      case \"time\":\r\n        mockData[key] = Mock.mock(\"@time\");\r\n      // eslint-disable-next-line\r\n      default:\r\n        break;\r\n    }\r\n    return mockData;\r\n  });\r\n}\r\n\r\nfunction objArr($n: number, obj: MockObjType) {\r\n  const array = [];\r\n  for (let i = 0; i < $n; i++) {\r\n    array.push(mockObj(obj));\r\n  }\r\n  return array;\r\n}\r\n\r\nexport default {\r\n  arr,\r\n  numArr,\r\n  mockArr,\r\n  objArr,\r\n  mock,\r\n  ele: element\r\n};\r\n","import loopCodeMap from \"./loopCode\";\r\nimport { BaseApiInfo, DatabaseCodeInfo } from \"./types\";\r\nimport { beginTimer, endTimer, runError } from \"./baseTimer\";\r\nimport { createElementBox, clearElementBox } from \"./element\";\r\nimport Mock from \"./mock\";\r\n\r\nconst BASE_EXPRESSION_MATCH: RegExp = /^((.+?)\\|)?(<(.+?)>)?(@(.+?):)?(api)?(\\((.+)\\))?/;\r\n\r\nfunction __createFunction(\r\n  initCode: string,\r\n  bodyCode: string,\r\n  name: string,\r\n  uid: string\r\n): Function {\r\n  return function(num: number) {\r\n    const funStr = `\r\n    try {\r\n      ${initCode ? initCode.replace(/(let|const)/g, \"var\") : \"\"}\r\n    } catch(e) {\r\n      return {error: e.message}\r\n    }\r\n\r\n    let _timeId = _newTime($name, _uid)\r\n    try {\r\n      ${bodyCode || \"\"}\r\n    } catch(e){\r\n      _runError(_timeId, e.message)\r\n    } finally {\r\n      let _result = _endTime(_timeId)\r\n      return _result\r\n    }\r\n  `;\r\n    var fn: Function;\r\n    try {\r\n      // eslint-disable-next-line\r\n      fn = new Function(\r\n        \"$n\",\r\n        \"$mock\",\r\n        \"$element\",\r\n        \"$name\",\r\n        \"_newTime\",\r\n        \"_endTime\",\r\n        \"_runError\",\r\n        \"_uid\",\r\n        funStr\r\n      );\r\n    } catch (e) {\r\n      return { error: e.message };\r\n    }\r\n    console.log(\"111\");\r\n    let element = createElementBox();\r\n    let result = fn(\r\n      num,\r\n      Mock,\r\n      element,\r\n      name + \"(\" + num + \")\",\r\n      beginTimer,\r\n      endTimer,\r\n      runError,\r\n      uid\r\n    );\r\n    clearElementBox(element);\r\n    element = null as any;\r\n    console.log(result);\r\n    return result;\r\n  };\r\n}\r\n\r\ninterface apiTemplateList {\r\n  __root__?: string;\r\n  [x: string]: string | undefined;\r\n}\r\n\r\nclass Interpreter {\r\n  public _api: BaseApiInfo[];\r\n  public _id: number;\r\n  public _apiMap: { [x: string]: BaseApiInfo };\r\n  public _customApiMap: { [x: string]: BaseApiInfo };\r\n  constructor() {\r\n    this._api = [];\r\n    this._id = 0;\r\n    this._apiMap = {};\r\n    this._customApiMap = {};\r\n  }\r\n\r\n  private _getId() {\r\n    return ++this._id + \"\";\r\n  }\r\n\r\n  private _createBaseApiInfo(\r\n    expression: string,\r\n    key: string,\r\n    root?: string\r\n  ): BaseApiInfo {\r\n    const uid = this._getId();\r\n    return {\r\n      root,\r\n      id: uid,\r\n      key,\r\n      name: \"\",\r\n      baseCode: \"\",\r\n      initCode: \"\",\r\n      loop: true,\r\n      expression,\r\n      type: 1,\r\n      fn: () => {}\r\n    };\r\n  }\r\n\r\n  public init(apiList: apiTemplateList[]) {\r\n    apiList.forEach((templateList: apiTemplateList) => {\r\n      const { __root__, ...baseTemplateList } = templateList;\r\n\r\n      Object.keys(baseTemplateList).forEach((key: string) => {\r\n        const apiInfo = this.getBaseApiInfo(\r\n          baseTemplateList[key],\r\n          key,\r\n          __root__\r\n        );\r\n        this.pushBaseApiInfo(apiInfo);\r\n      });\r\n    });\r\n  }\r\n  pushBaseApiInfo(apiInfo?: BaseApiInfo) {\r\n    if (!apiInfo) return;\r\n    this._api.push(apiInfo);\r\n    this._apiMap[apiInfo.id] = apiInfo;\r\n  }\r\n  public getBaseApiInfo(\r\n    expression: string | undefined,\r\n    key: string,\r\n    __root__?: string\r\n  ) {\r\n    if (!expression) return;\r\n    const apiInfo = this._createBaseApiInfo(expression, key, __root__);\r\n    const expressionData = expression.match(BASE_EXPRESSION_MATCH) || [];\r\n\r\n    const _beforeCode = expressionData[2];\r\n    const _loopName = expressionData[4];\r\n    const _defineRoot = expressionData[6] || __root__;\r\n    const _isUsedApi = expressionData[7] && key;\r\n    const _apiParams = expressionData[9];\r\n\r\n    let runtimeStatement = [];\r\n    let runtimeCode = \"\";\r\n    let initCode = \"\";\r\n    let baseCode = \"\";\r\n\r\n    if (_defineRoot) {\r\n      runtimeStatement.push(_defineRoot);\r\n    }\r\n    if (_isUsedApi) {\r\n      runtimeStatement.push(_isUsedApi);\r\n    }\r\n\r\n    runtimeCode = runtimeStatement.join(\".\");\r\n\r\n    if (_apiParams) {\r\n      runtimeCode += `(${_apiParams})`;\r\n    }\r\n\r\n    if (_beforeCode) {\r\n      initCode = _beforeCode;\r\n    }\r\n\r\n    if (_loopName) {\r\n      const loopInfo = loopCodeMap[\"__\" + _loopName];\r\n      if (loopInfo) {\r\n        baseCode = loopInfo.code.replace(/<body>/, runtimeCode);\r\n        initCode = (loopInfo.init || \"\") + initCode;\r\n      }\r\n    } else {\r\n      baseCode = runtimeCode;\r\n    }\r\n\r\n    const name = __root__\r\n      ? __root__ === \"window\"\r\n        ? key\r\n        : [__root__, key].join(\".\")\r\n      : key;\r\n\r\n    const runtimeFn = __createFunction(initCode, baseCode, name, apiInfo.id);\r\n\r\n    apiInfo.initCode = initCode;\r\n    apiInfo.baseCode = baseCode;\r\n    apiInfo.root = _defineRoot;\r\n    apiInfo.name = name;\r\n    apiInfo.fn = runtimeFn;\r\n    return apiInfo;\r\n  }\r\n\r\n  public getApiMenuList(): { name: string; id: string }[] {\r\n    return this._api.map((apiInfo: BaseApiInfo) => {\r\n      return {\r\n        name: apiInfo.name,\r\n        id: apiInfo.id\r\n      };\r\n    });\r\n  }\r\n\r\n  public getApiInfo(id: string): BaseApiInfo {\r\n    return this._apiMap[id];\r\n  }\r\n\r\n  public getDatabaseInfo(id: string): DatabaseCodeInfo {\r\n    const apiInfo = this._apiMap[id] || this._customApiMap[id];\r\n    const { fn, ...databaseInfo } = apiInfo;\r\n    return databaseInfo;\r\n  }\r\n\r\n  public pushCustomApiInfo(info: BaseApiInfo) {\r\n    const id = info.id;\r\n    this._customApiMap[id] = info;\r\n  }\r\n\r\n  public createCustomInfo(\r\n    baseCode: string,\r\n    initCode: string = \"\"\r\n  ): BaseApiInfo {\r\n    const name = \"Custom\";\r\n    const apiInfo = this._createBaseApiInfo(\"\", name);\r\n    apiInfo.initCode = initCode;\r\n    apiInfo.baseCode = baseCode;\r\n    apiInfo.type = 2;\r\n    apiInfo.fn = __createFunction(initCode, baseCode, name, apiInfo.id);\r\n    return apiInfo;\r\n  }\r\n}\r\n\r\nconst interpreter = new Interpreter();\r\n\r\nexport default interpreter;\r\n","function createElementBox(): HTMLDivElement {\r\n  const DomBox = document.createElement(\"div\");\r\n  DomBox.id = \"test-black-box\";\r\n  DomBox.style.cssText = \"position:fixed; top: 100%; left:0\";\r\n  document.body.appendChild(DomBox);\r\n  return DomBox;\r\n}\r\n\r\nfunction clearElementBox(Dom: HTMLDivElement) {\r\n  Dom.innerHTML = \"\";\r\n  document.body.removeChild(Dom);\r\n}\r\n\r\nexport { createElementBox, clearElementBox };\r\n","export const log = function(message: string, type: string = \"success\"): void {\r\n  const ColorMap: { [x: string]: string } = {\r\n    success: \"green\",\r\n    error: \"red\",\r\n    info: \"blue\",\r\n    not: \"gray\",\r\n  };\r\n  const color = ColorMap[type] || \"gray\";\r\n  console.log(`%c ${message}`, `color: ${color}`);\r\n};\r\n","import { log } from \"./common\";\r\nimport { DatabaseItem, SyncReturn } from \"./types\";\r\n\r\nconst StoreName = \"history\";\r\nconst keyPath = \"id\";\r\nconst DBName = \"fast_api_timer\";\r\nlet connectStatus: number = 0; // DB连接状态\r\nlet currentDB: IDBDatabase | null; // 当前db名称\r\nlet awaitRequestQueue: Function[] = [];\r\n\r\nconst returnReject = () =>\r\n  Promise.reject({\r\n    error: \"IndexDB is not supported by your browser\"\r\n  });\r\n\r\nif (!window.indexedDB) {\r\n  connectStatus = -1;\r\n  log(\"IndexDB is not supported by your browser\", \"not\");\r\n}\r\n\r\nfunction _execRequestQueue() {\r\n  awaitRequestQueue.forEach(fn => {\r\n    fn();\r\n  });\r\n  awaitRequestQueue = [];\r\n}\r\n\r\nfunction _pushRequestQueue(fn: Function) {\r\n  awaitRequestQueue.push(fn);\r\n}\r\n\r\nfunction initDB() {\r\n  if (connectStatus === -1) return;\r\n  const connect = window.indexedDB.open(DBName);\r\n  connect.onsuccess = function() {\r\n    log(\"connect success: \" + DBName);\r\n    connectStatus = 1;\r\n    currentDB = this.result;\r\n    _execRequestQueue();\r\n  };\r\n  connect.onerror = function() {\r\n    connectStatus = -1;\r\n    log(\"connect error\", \"error\");\r\n  };\r\n  connect.onupgradeneeded = function() {\r\n    connectStatus = 2;\r\n    currentDB = this.result;\r\n\r\n    if (!currentDB.objectStoreNames.contains(StoreName)) {\r\n      currentDB.createObjectStore(StoreName, {\r\n        autoIncrement: true,\r\n        keyPath: keyPath\r\n      });\r\n      log(\"create success of objectStore: \" + StoreName);\r\n    }\r\n    _execRequestQueue();\r\n  };\r\n}\r\n\r\nfunction _getTransactionStore(): IDBObjectStore {\r\n  return (currentDB as IDBDatabase)\r\n    .transaction([StoreName], \"readwrite\")\r\n    .objectStore(StoreName);\r\n}\r\n\r\nfunction addData(databaseItem: DatabaseItem): SyncReturn {\r\n  log(\"addData\", \"info\");\r\n  if (connectStatus === -1) {\r\n    return returnReject();\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    const awaitFn = () => {\r\n      const objectStore = _getTransactionStore();\r\n      const request = objectStore.add(databaseItem);\r\n      request.onsuccess = function(e: Event) {\r\n        resolve({ data: (e.target as IDBRequest).result });\r\n      };\r\n      request.onerror = function(e: Event) {\r\n        reject({ error: e });\r\n      };\r\n    };\r\n    if (connectStatus === 0) {\r\n      _pushRequestQueue(awaitFn);\r\n    } else {\r\n      awaitFn();\r\n    }\r\n  });\r\n}\r\n\r\nfunction putData(databaseItem: DatabaseItem): SyncReturn {\r\n  log(\"addData\", \"info\");\r\n  if (connectStatus === -1) {\r\n    return returnReject();\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    const awaitFn = () => {\r\n      const objectStore = _getTransactionStore();\r\n      const request = objectStore.put(databaseItem);\r\n      request.onsuccess = function(e: Event) {\r\n        resolve({ data: (e.target as IDBRequest).result });\r\n      };\r\n      request.onerror = function(e: Event) {\r\n        reject({ error: e });\r\n      };\r\n    };\r\n    if (connectStatus === 0) {\r\n      _pushRequestQueue(awaitFn);\r\n    } else {\r\n      awaitFn();\r\n    }\r\n  });\r\n}\r\n\r\nfunction deleteData(id: string): SyncReturn {\r\n  log(\"deleteData\", \"info\");\r\n  if (connectStatus === -1) {\r\n    return returnReject();\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    const awaitFn = () => {\r\n      const objectStore = _getTransactionStore();\r\n      const request = objectStore.delete(id);\r\n      request.onsuccess = function(e: Event) {\r\n        resolve({ data: (e.target as IDBRequest).result });\r\n      };\r\n      request.onerror = function(e: Event) {\r\n        reject({ error: e });\r\n      };\r\n    };\r\n    if (connectStatus === 0) {\r\n      _pushRequestQueue(awaitFn);\r\n    } else {\r\n      awaitFn();\r\n    }\r\n  });\r\n}\r\n\r\nfunction getData(id: string): SyncReturn {\r\n  log(\"getData\", \"info\");\r\n  if (connectStatus === -1) {\r\n    return returnReject();\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    const awaitFn = () => {\r\n      const objectStore = _getTransactionStore();\r\n      const request = objectStore.get(id);\r\n      request.onsuccess = function(e: Event) {\r\n        resolve({ data: (e.target as IDBRequest).result });\r\n      };\r\n      request.onerror = function(e: Event) {\r\n        reject({ error: e });\r\n      };\r\n    };\r\n    if (connectStatus === 0) {\r\n      _pushRequestQueue(awaitFn);\r\n    } else {\r\n      awaitFn();\r\n    }\r\n  });\r\n}\r\n\r\nfunction getAllData(): SyncReturn {\r\n  log(\"getData\", \"info\");\r\n  if (connectStatus === -1) {\r\n    return returnReject();\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    const awaitFn = () => {\r\n      const objectStore = _getTransactionStore();\r\n      const request = objectStore.getAll();\r\n      request.onsuccess = function(e: Event) {\r\n        resolve({ data: (e.target as IDBRequest).result });\r\n      };\r\n      request.onerror = function(e: Event) {\r\n        reject({ error: e });\r\n      };\r\n    };\r\n    if (connectStatus === 0) {\r\n      _pushRequestQueue(awaitFn);\r\n    } else {\r\n      awaitFn();\r\n    }\r\n  });\r\n}\r\n\r\nexport { initDB, addData, deleteData, getData, getAllData, putData };\r\n","export const ADD_TODO = \"ADD_TODO\";\r\nexport type ADD_TODO = typeof ADD_TODO;\r\n\r\nexport const PROGRESS_STATUS = \"PROGRESS_STATUS\";\r\nexport type PROGRESS_STATUS = typeof PROGRESS_STATUS;\r\n\r\nexport interface UpdateProgress {\r\n  type: PROGRESS_STATUS;\r\n  payload: boolean;\r\n}\r\n\r\nexport function UpdateProgress(status: boolean): UpdateProgress {\r\n  return {\r\n    type: PROGRESS_STATUS,\r\n    payload: status\r\n  };\r\n}\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { RouterMap } from \"./types\";\r\n\r\nconst routes: RouterMap[] = [\r\n  {\r\n    path: \"/\",\r\n    component: lazy(() => import(\"../page/home/App\")),\r\n  },\r\n  {\r\n    path: \"/api\",\r\n    component: lazy(() => import(\"../page/api/App\")),\r\n    routes: [\r\n      {\r\n        path: \"/api/:id\",\r\n        component: lazy(() => import(\"../page/api/View\")),\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/custom\",\r\n    component: lazy(() => import(\"../page/custom/App\")),\r\n  },\r\n  {\r\n    path: \"/code\",\r\n    component: lazy(() => import(\"../page/code/App\")),\r\n  },\r\n];\r\n\r\nfunction RouteWithSubRoutes(route: RouterMap) {\r\n  return (\r\n    <Route\r\n      exact={route.path === \"/\"}\r\n      path={route.path}\r\n      render={(props: any) => (\r\n        // pass the sub-routes down to keep nesting\r\n        <route.component {...props} routes={route.routes} />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nconst RouterView: React.FC = () => (\r\n  <Suspense fallback={<div>first loading always slowly...()</div>}>\r\n    {routes.map((route, i) => {\r\n      return <RouteWithSubRoutes key={i} {...route} />;\r\n    })}\r\n  </Suspense>\r\n);\r\n\r\nexport { RouterView, RouteWithSubRoutes };\r\n","import React from \"react\";\r\n// eslint-disable-next-line\r\nimport { Link, withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\ninterface NavBoxProps {\r\n  text: string;\r\n  sub?: string;\r\n  to: string;\r\n  color: string;\r\n}\r\n\r\n// Render a NavBox Dom\r\nconst NavBox: React.FC<NavBoxProps> = ({\r\n  text,\r\n  sub = \"Click Me\",\r\n  to,\r\n  color\r\n}) => (\r\n  <Link to={to}>\r\n    <ButtonBase className={\"nav-button\"}>\r\n      <div className={\"nav-box \" + color}>\r\n        <div className=\"nav-box-content\">\r\n          <h3 className=\"nav-box-text\">{text}</h3>\r\n          <div className=\"nav-box-subText\">{sub}</div>\r\n        </div>\r\n      </div>\r\n    </ButtonBase>\r\n  </Link>\r\n);\r\n\r\n/**\r\n *  Render different Nav according to current pathname\r\n */\r\n\r\nconst HEADER_PROPS_MAP: { [type: number]: NavBoxProps } = {\r\n  0: {\r\n    text: \"FAST API\",\r\n    to: \"/api\",\r\n    color: \"black\"\r\n  },\r\n  1: {\r\n    text: \"ES API\",\r\n    to: \"/custom\",\r\n    color: \"blue\"\r\n  },\r\n  2: {\r\n    text: \"CUSTOM API\",\r\n    to: \"/code\",\r\n    color: \"green\"\r\n  },\r\n  3: {\r\n    text: \"CODE TEST\",\r\n    to: \"/api\",\r\n    color: \"yellow\"\r\n  }\r\n};\r\n\r\nclass Header extends React.Component<RouteComponentProps> {\r\n  render() {\r\n    const pathname: string = this.props.location.pathname;\r\n    let navType: number = 0;\r\n    if (pathname === \"/\") {\r\n      navType = 0;\r\n    }\r\n    if (/^\\/api(\\/?)/.test(pathname)) {\r\n      navType = 1;\r\n    }\r\n    if (/^\\/custom(\\/?)/.test(pathname)) {\r\n      navType = 2;\r\n    }\r\n    if (/^\\/code(\\/?)/.test(pathname)) {\r\n      navType = 3;\r\n    }\r\n    const navProps: NavBoxProps =\r\n      HEADER_PROPS_MAP[navType] || HEADER_PROPS_MAP[0];\r\n    return (\r\n      <header className=\"layout-header\">\r\n        <nav className=\"layout-header-nav\">\r\n          <NavBox {...navProps} />\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nexport default (): React.ReactElement => {\r\n  function openGithub() {\r\n    window.open(\"https://github.com/ArthurYung/fast-api\");\r\n  }\r\n  return (\r\n    <footer className=\"footer-nav\">\r\n      <ButtonBase className={\"nav-button\"} onClick={openGithub}>\r\n        <div className={\"nav-box\"}>\r\n          <div className=\"nav-box-content\">\r\n            <div className=\"nav-box-subText\">\r\n              github: https://github.com/ArthurYung/fast-api\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ButtonBase>\r\n    </footer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport connect from \"@/container/progress\";\r\n\r\nconst Progress: React.FC<{ progress: boolean }> = props => {\r\n  return (\r\n    <article className=\"app-progress\">\r\n      {props.progress && <div className=\"app-progress-bar\" />}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default connect(Progress);\r\n","import { connect } from \"react-redux\";\r\n\r\nexport default connect((state: any) => ({ progress: state.progress }));\r\n","import { combineReducers } from \"redux\";\r\nimport baseApi from \"./baseApi\";\r\nimport progress from \"./progress\";\r\nimport currCode from \"./currCode\";\r\nimport history from \"./history\";\r\nexport default combineReducers({ currCode, baseApi, progress, history });\r\n","import { SetCurrInfoActionType, CURRENT_CODE } from \"../actions/history\";\r\nimport { DatabaseCodeInfo } from \"../utils/types\";\r\n\r\nexport default function progress(\r\n  state: DatabaseCodeInfo | null = null,\r\n  action: SetCurrInfoActionType\r\n) {\r\n  switch (action.type) {\r\n    case CURRENT_CODE:\r\n      return Object.assign({}, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ADD_TODO } from \"@/actions/home\";\r\n\r\ninterface testAction {\r\n  type: ADD_TODO;\r\n  text: string;\r\n}\r\nexport default function baseApi(state: string[] = [], action: testAction) {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return state.concat([action.text]);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { PROGRESS_STATUS, UpdateProgress } from \"../actions/home\";\r\n\r\nexport default function progress(\r\n  state: boolean = false,\r\n  action: UpdateProgress\r\n) {\r\n  switch (action.type) {\r\n    case PROGRESS_STATUS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  HistoryActionType,\r\n  HISTORY_RESULT,\r\n  TimerDataInfo,\r\n  DELETE_TIMER,\r\n  ChangeHistoryActionType,\r\n  CHANGE_TIMER\r\n} from \"../actions/history\";\r\n\r\nexport default function progress(\r\n  state: TimerDataInfo[] = [],\r\n  action: HistoryActionType | ChangeHistoryActionType\r\n) {\r\n  switch (action.type) {\r\n    case HISTORY_RESULT:\r\n      return [action.payload].concat(state).splice(0, 99);\r\n    case DELETE_TIMER:\r\n      const index = state.indexOf(action.payload);\r\n      let baseState = [...state];\r\n\r\n      if (index > -1) {\r\n        baseState.splice(index, 1);\r\n      }\r\n\r\n      return baseState;\r\n\r\n    case CHANGE_TIMER:\r\n      let find = -1;\r\n      state.forEach((dataInfo, index) => {\r\n        if (dataInfo.id === action.payload.id) {\r\n          find = index;\r\n        }\r\n      });\r\n\r\n      if (find < 0) return state;\r\n\r\n      const newDataInfo = Object.assign({}, state[find], action.payload);\r\n\r\n      state.splice(find, 1, newDataInfo);\r\n      return [...state];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import reducer from \"./reducer\";\r\nimport { createStore } from \"redux\";\r\nconst store = createStore(reducer);\r\nexport default store;\r\n","import React from \"react\";\r\nimport { RouterView } from \"./router\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Progress from \"./components/Progress\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div className={\"app\"}>\r\n          <HashRouter>\r\n            <Progress />\r\n            <Header />\r\n            <main className={\"layout-main\"}>\r\n              <RouterView />\r\n            </main>\r\n            <Footer />\r\n          </HashRouter>\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const Loops = {\r\n  for: \"<for>\",\r\n  for_less: \"<for_less>\",\r\n  while: \"<while>\",\r\n  while_less: \"<while_less>\",\r\n  forEach: \"<forEach>\",\r\n  map: \"<map>\",\r\n  reduce: \"<reduce>\"\r\n};\r\n\r\nconst Element = {\r\n  __root__: \"$element\",\r\n  appendChild: 'let doms = $mock.ele(\"span\", $n)|<for>api(doms[i])',\r\n  removeChild:\r\n    'let doms = $mock.ele(\"div\", $n);doms.forEach(dom=>$element.appendChild(dom))|<for>api(doms[i])',\r\n  innerHTML: '<for>@$element.innerHTML=\"<div>1</div>\":',\r\n  getAttribute: '<for>@$element:api(\"id\")',\r\n  setAttribute: '<for>@$element:api(\"class\", \"test\")'\r\n};\r\n\r\nconst ArRay = {\r\n  __root__: \"Array\",\r\n  isArray: \"let test = []|<for>api(test)\",\r\n  form: \"<for>api(i)\",\r\n  of: \"<for>api(i)\",\r\n  copyWithin: \"let $array = [1,2,3]|<for>@$array:api(1,2)\",\r\n  sort: \"let $array = [1, 30, 4, 21, 100000]|<for>@$array:api(undefined)\",\r\n  push: \"let $array = []|<for>@$array:api(i)\",\r\n  concat: \"let $array = []|<for>@$array:api([i])\",\r\n  shift: \"let $array = $mock.arr($n)|<for>@$array:api(undefined)\",\r\n  unshift: \"let $array = []|<for>@$array:api(i)\",\r\n  includes: \"let $array = $mock.numArr($n)|<for>@$array:api(i)\",\r\n  indexOf: \"let $array = $mock.numArr($n)|<for>@$array:api(i)\"\r\n};\r\n\r\nconst Json = {\r\n  __root__: \"JSON\",\r\n  parse: `let json = '{\"result\":true, \"count\":42}'|<for>api(json)`,\r\n  stringify: `let json = {\"result\":true, \"count\":42}|<for>api(json)`\r\n};\r\n\r\nexport { Loops, Element, Json, ArRay };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./assets/css/index.scss\";\r\nimport \"prismjs/themes/prism-tomorrow.css\";\r\nimport apiInterpreter from \"./utils/baseStatement\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Loops, Element, ArRay, Json } from \"./template/api\";\r\nimport { initDB } from \"./utils/indexDB\";\r\n// import * as worker from \"./utils/worker\";\r\n// worker.addWorkerWatcher((e) => {});\r\napiInterpreter.init([Loops, Element, Json, ArRay]);\r\ninitDB();\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}