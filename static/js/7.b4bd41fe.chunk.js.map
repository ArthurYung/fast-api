{"version":3,"sources":["container/history.ts","utils/date.ts","components/ResultCard.tsx","components/CollectorList.tsx","components/HistoryView.tsx","assets/css/custom.module.scss","page/custom/Expression.tsx","components/Editor.tsx","page/custom/EditLoop.tsx","page/custom/Content.tsx","page/custom/CustomTab.tsx","page/custom/App.tsx","components/Message.tsx","container/apiMain.ts"],"names":["connect","state","historyData","history","dispatch","deleteTimer","timerInfo","deleteHistoryTimerData","dateFormat","date","format","Boolean","flags","yyyy","Date","getFullYear","toString","mm","getMonth","slice","dd","getDate","HH","getHours","MM","getMinutes","SS","getSeconds","replace","match","MyCard","info","collectTimer","useState","visible","setVisible","anchorEl","setAnchorEl","showMenu","resultClassName","status","timerChildList","handleClose","deepChild","child","root","forEach","push","name","useTime","children","length","className","Grow","in","Card","CardHeader","avatar","Avatar","aria-label","action","IconButton","onClick","event","currentTarget","title","subheader","CardContent","map","childInfo","i","key","Divider","error","Menu","id","keepMounted","open","onClose","PaperProps","style","width","MenuItem","setTimeout","CollectorList","replayCollect","deleteCollect","collectorList","setCollectorList","a","getAllData","data","useEffect","then","List","collector","ListItem","ListItemText","primary","secondary","edge","handleDelete","withRouter","drawer","setDrawer","type","message","messageInfo","setMessageInfo","showMessage","codeInfo","interpreter","getDatabaseInfo","uid","databaseItem","addData","catch","err","String","item","deleteData","Fab","variant","ResultCard","Drawer","anchor","pathname","search","now","Message","closed","module","exports","throttleTimeout","progress","updateProgress","updateHistoryList","currentInfo","loopCount","setLoopCount","rootName","setRootName","apiName","setApiName","expression","setExpression","apiInfo","setApiInfo","BaseCodeHtml","Prism","highlight","baseCode","languages","javascript","initCodeHtml","initCode","Button","color","timerData","fn","Number","pushCustomApiInfo","classes","items","Typography","gutterBottom","RadioGroup","radio","value","onChange","e","Radio","radioLabel","formInput","TextField","label","apiInput","helperText","expressionInput","clearTimeout","getBaseApiInfo","translateApiInfo","minHeight","dangerouslySetInnerHTML","__html","Editor","props","editorId","Doc","showHintTimeout","textarea","document","getElementById","this","codemirror","fromTextArea","lineNumbers","styleActiveLine","matchBrackets","mode","indentWithTabs","lineWrapping","theme","getDoc","_bindEditorEvent","_initEditorValue","setValue","on","editor","change","origin","text","checkChange","execCommand","getValue","border","React","Component","EditLoop","codeRef1","codeRef2","initCodeRefValue1","initCodeRefValue2","createRef","current","getEditorValue","createCustomInfo","setState","runCurrentApiTest","handleChangeTime","editBox","ref","closeMessage","CustomContent","currentTab","HistoryView","CustomTabs","changeTab","console","log","Tabs","orientation","indicatorColor","Tab","Custom","location","currTab","setCurrTab","currSearchMatch","Content","SnackBarIcon","anchorOrigin","vertical","horizontal","autoHideDuration","reason","aria-describedby","UpdateProgress","updateHistoryResultData"],"mappings":"6LAGeA,cACb,SAACC,GAAD,MAAiB,CAAEC,YAAaD,EAAME,UACtC,SAACC,GAAD,MAAoB,CAClBC,YADkB,SACNC,GACVF,EAASG,YAAuBD,Q,uICP/B,SAASE,EAAWC,EAAsBC,GAE/C,GAAIC,QAAQF,GAAO,CAEjB,IAAIG,EAAiC,CACnCC,MAFFJ,EAAOA,aAAgBK,KAAOL,EAAO,IAAIK,KAAKL,IAEjCM,cAAcC,WACzBC,IAAK,KAAOR,EAAKS,WAAa,IAAIC,OAAO,GACzCC,IAAK,IAAMX,EAAKY,WAAWF,OAAO,GAClCG,IAAK,IAAMb,EAAKc,YAAYJ,OAAO,GACnCK,IAAK,IAAMf,EAAKgB,cAAcN,OAAO,GACrCO,IAAK,IAAMjB,EAAKkB,cAAcR,OAAO,IAYvC,OAVKT,IAEHA,EAAS,uBAEXA,EAASA,EAAOkB,QAfN,gDAeqB,SAASC,GACtC,OAAIA,KAASjB,EACJA,EAAMiB,GAER,KAIX,MAAO,GCIT,IAiGeC,EAjGmB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAM1B,EAAgC,EAAhCA,YAAa2B,EAAmB,EAAnBA,aAAmB,EAC3CC,mBAAiB,GAD0B,mBAClEC,EADkE,KACzDC,EADyD,OAEzCF,mBAA6B,MAFY,mBAElEG,EAFkE,KAExDC,EAFwD,KAInEC,EAAW3B,QAAQyB,GACnBG,EAAkC,IAAhBR,EAAKS,OAAe,eAAiB,iBAEvDC,EAAmC,GAkBzC,SAASC,IACPL,EAAY,MAed,OAhCA,SAASM,EAAUC,GAA4C,IAApBC,EAAmB,uDAAJ,GACxDD,EAAME,QAAQ,SAACf,GACbU,EAAeM,KAAK,CAClBC,KAAMH,EAAOd,EAAKiB,KAClBC,QAASlB,EAAKkB,UAEZlB,EAAKmB,SAASC,QAChBR,EAAUZ,EAAKmB,SAAUnB,EAAKiB,QAwBpCL,CAAUZ,EAAKmB,UAEb,2BAAOE,UAAU,eACf,kBAACC,EAAA,EAAD,CAAMC,GAAI3C,QAAQuB,IAChB,kBAACqB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,OACE,kBAACC,EAAA,EAAD,CAAQC,aAAW,SAASP,UAAWb,GACpB,IAAhBR,EAAKS,OAAe,kBAAC,IAAD,MAAY,kBAAC,IAAD,OAGrCoB,OACE,kBAACC,EAAA,EAAD,CAAYF,aAAW,WAAWG,QA/B9C,SAAyBC,GACvB1B,EAAY0B,EAAMC,iBA+BN,kBAAC,IAAD,OAGJC,MAAOlC,EAAKiB,KACZkB,UAAW1D,EAAWuB,EAAKtB,KAAM,kBACjC2C,UAAU,uBAEZ,kBAACe,EAAA,EAAD,KACG1B,EAAe2B,IAAI,SAACC,EAA2BC,GAA5B,OAClB,yBAAKlB,UAAU,mBAAmBmB,IAAKD,GACrC,0BAAMlB,UAAU,kBAAkBiB,EAAUrB,MAC5C,0BAAMI,UAAU,kBAAkBiB,EAAUpB,QAA5C,UAIN,kBAACuB,EAAA,EAAD,MACA,kBAACL,EAAA,EAAD,KACmB,IAAhBpC,EAAKS,OACJ,yBAAKY,UAAU,yBAAf,QAA6CrB,EAAKkB,QAAlD,MAEA,yBAAKG,UAAU,uBAAuBrB,EAAK0C,UAKnD,kBAACC,EAAA,EAAD,CACEC,GAAG,YACHvC,SAAUA,EACVwC,aAAW,EACXC,KAAMvC,EACNwC,QAASpC,EACTqC,WAAY,CACVC,MAAO,CACLC,MAAO,OAIX,kBAACC,EAAA,EAAD,CAAUpB,QAvDhB,WACEpB,IACAV,EAAaD,KAqDT,WACA,kBAACmD,EAAA,EAAD,CAAUpB,QA9DhB,WACE3B,EAAW,GACXO,IACAyC,WAAW,kBAAM9E,EAAY0B,IAAO,OA2DhC,a,2GCzDOqD,EA9CiC,SAAC,GAG1C,IAFLC,EAEI,EAFJA,cACAC,EACI,EADJA,cACI,EACsCrD,mBAAyB,IAD/D,mBACGsD,EADH,KACkBC,EADlB,gDAOJ,WAA4BzD,GAA5B,iBAAA0D,EAAA,qEACuBH,EAAcvD,GADrC,UAEiB,IAFjB,wEAGyB2D,cAHzB,iBAGUC,EAHV,EAGUA,OACEH,EAAiBG,GAJ7B,2CAPI,sBAaJ,OAXAC,oBAAU,WACRF,cAAaG,KAAK,SAACF,GACjBH,EAAiBG,EAAKA,SAEvB,IAQD,2BAAOvC,UAAU,iBACf,kBAAC0C,EAAA,EAAD,KACGP,EAAcnB,IAAI,SAAC2B,GAAD,OACjB,kBAACC,EAAA,EAAD,CAAUzB,IAAKwB,EAAUpB,IACvB,kBAACsB,EAAA,EAAD,CACEC,QAASH,EAAUzF,UAAU0C,KAC7BmD,UAAW3F,EAAWuF,EAAUzF,UAAUG,QAE5C,kBAACoD,EAAA,EAAD,CACEuC,KAAK,MACLzC,aAAW,OACXG,QAAS,kBAAMuB,EAAcU,KAE7B,kBAAC,IAAD,OAEF,kBAAClC,EAAA,EAAD,CACEuC,KAAK,MACLzC,aAAW,SACXG,QAAS,kBAhCjB,2CAgCuBuC,CAAaN,KAE5B,kBAAC,IAAD,a,oPCuFC/F,MAAQsG,YApHgB,SAAC,GAIjC,IAHLpG,EAGI,EAHJA,YACAG,EAEI,EAFJA,YACAF,EACI,EADJA,QACI,EACwB8B,oBAAkB,GAD1C,mBACGsE,EADH,KACWC,EADX,OAEkCvE,mBAAsB,CAC1DwE,KAAM,UACNvE,SAAS,EACTwE,QAAS,KALP,mBAEGC,EAFH,KAEgBC,EAFhB,KAaJ,SAASC,EAAT,GAA4E,IAArDJ,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAC3BE,EAAe,CACbH,OACAC,UACAxE,SAAS,IASb,SAASF,EAAaD,GACpB,IAAM+E,EAAWC,IAAYC,gBAAgBjF,EAAKkF,KAC5CC,EAAe,CACnB5G,UAAWyB,EACX+E,SAAUA,EACVL,KAAMK,EAASL,MAEjBU,YAAQD,GACLrB,KAAK,WACJgB,EAAY,CACVJ,KAAM,UACNC,QAAS,yBAGZU,MAAM,SAACC,GACNR,EAAY,CACVJ,KAAM,OACNC,QAASY,OAAOD,OA3CpB,2CAiEJ,WAA6BE,GAA7B,iBAAA9B,EAAA,wDACO8B,EAAK5C,GADZ,yCACuB,GADvB,uBAE0B6C,YAAWD,EAAK5C,IAF1C,qBAEUF,EAFV,EAEUA,OAFV,uBAIIoC,EAAY,CACVJ,KAAM,QACNC,QAASjC,IANf,kBAQW,GARX,gCAUS,GAVT,2CAjEI,sBA8EJ,OACE,kBAAC,WAAD,KACE,2BAAOrB,UAAU,eACf,yBAAKA,UAAU,oBACb,kBAACqE,EAAA,EAAD,CAAKC,QAAQ,WAAW/D,aAAW,OAAOG,QAxElD,WACE0C,GAAU,KAwEF,kBAAC,IAAD,MADF,mBAKDtG,EAAYkE,IAAI,SAAC9D,GAAD,OACf,kBAACqH,EAAD,CACEpD,IAAKjE,EAAUqE,GACf5C,KAAMzB,EACND,YAAaA,EACb2B,aAAcA,OAIpB,kBAAC4F,EAAA,EAAD,CAAQC,OAAO,QAAQhD,KAAM0B,EAAQzB,QAzFzC,WACE0B,GAAU,KAyFN,kBAAC,EAAD,CACEnB,cAlDR,SAAuBkC,GACH,IAAdA,EAAKd,KACPtG,EAAQ4C,KAAK,CACX9C,MAAOsH,EAAKT,SACZgB,SAAU,UACVC,OAAQ,UAAYjH,KAAKkH,QAEJ,IAAdT,EAAKd,MACdtG,EAAQ4C,KAAK,CACX9C,MAAOsH,EAAKT,SACZgB,SAAU,UACVC,OAAQ,UAAYjH,KAAKkH,QAG7BxB,GAAU,IAqCJlB,cAnGJ,+CAsGA,kBAAC2C,EAAA,EAAD,CACE/F,QAASyE,EAAYzE,QACrBuE,KAAME,EAAYF,KAClByB,OArFN,WACEtB,E,qVAAe,CAAD,GACTD,EADS,CAEZzE,SAAS,MAmFPwE,QAASC,EAAYD,e,oBCrI7ByB,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,gBAAkB,gCAAgC,SAAW,yBAAyB,WAAa,2BAA2B,MAAQ,wB,2aC0B5N,IAqLepI,cArL+B,SAAC,GAKxC,IAsBDqI,EA1BJC,EAII,EAJJA,SACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,YACI,EAC8BxG,mBAAiB,SAD/C,mBACGyG,EADH,KACcC,EADd,OAE4B1G,mBAAiB,IAF7C,mBAEG2G,EAFH,KAEaC,EAFb,OAG0B5G,mBAAiB,IAH3C,mBAGG6G,EAHH,KAGYC,EAHZ,OAIgC9G,mBAAiB,IAJjD,mBAIG+G,EAJH,KAIeC,EAJf,OAK0BhH,qBAL1B,mBAKGiH,EALH,KAKYC,EALZ,OAMkClH,mBAAsB,CAC1DwE,KAAM,UACNvE,SAAS,EACTwE,QAAS,KATP,mBAMGC,EANH,KAMgBC,EANhB,KAWEwC,EAAuBC,IAAMC,UACjCJ,EAAUA,EAAQK,SAAW,GAC7BF,IAAMG,UAAUC,WAChB,cAEIC,EAAuBL,IAAMC,UACjCJ,EAAUA,EAAQS,SAAW,GAC7BN,IAAMG,UAAUC,WAChB,cAmEF,OA9DA7D,oBAAU,WACJ6C,IACFQ,EAAcR,EAAYO,YAAc,IACxCH,EAAYJ,EAAY5F,MAAQ,IAChCkG,EAAWN,EAAYlE,KAAO,IAC9B4E,EAAWV,KAEZ,CAACA,IAwDF,iCACE,iCACE,yBAAKrF,UAAU,mBAAf,kBACA,kBAACwG,EAAA,EAAD,CAAQlC,QAAQ,YAAYmC,MAAM,UAAU/F,QAzDlD,WACMwE,GACAY,IACFX,GAAe,GACfpD,WAAW,WACT,IAAM2E,EAA2BZ,EAAQa,GAAGC,OAAOtB,IAC9CoB,EAAUnF,IAGboC,IAAYkD,kBAAkBf,GAC9BV,EAAkBsB,IA6B1B,YAA4E,IAArDrD,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAC3BE,EAAe,CACbH,OACAC,UACAxE,SAAS,IApCL2E,CAAY,CAAEJ,KAAM,QAASC,QAASoD,EAAUrF,QAKlD8D,GAAe,IACd,QA4CD,WAEE,kBAAC,IAAD,QAGJ,6BAASnF,UAAW8G,IAAQC,OAC1B,kBAACC,EAAA,EAAD,CAAY1C,QAAQ,YAAY2C,cAAY,GAA5C,mBAGA,kBAACC,EAAA,EAAD,CACE3G,aAAW,SACXX,KAAK,UACLI,UAAW8G,IAAQK,MACnBC,MAAO9B,EACP+B,SAtDR,SAA0BC,EAAQF,GAChC7B,EAAa6B,KAuDP,kBAACG,EAAA,EAAD,CAAOH,MAAM,QAAQX,MAAM,YAC3B,0BAAMzG,UAAW8G,IAAQU,YAAzB,SACA,kBAACD,EAAA,EAAD,CAAOH,MAAM,SAASX,MAAM,YAC5B,0BAAMzG,UAAW8G,IAAQU,YAAzB,UACA,kBAACD,EAAA,EAAD,CAAOH,MAAM,SAASX,MAAM,YAC5B,0BAAMzG,UAAW8G,IAAQU,YAAzB,UACA,kBAACD,EAAA,EAAD,CAAOH,MAAM,UAAUX,MAAM,YAC7B,0BAAMzG,UAAW8G,IAAQU,YAAzB,WACA,kBAACD,EAAA,EAAD,CAAOH,MAAM,WAAWX,MAAM,YAC9B,0BAAMzG,UAAW8G,IAAQU,YAAzB,cAGJ,6BAASxH,UAAW8G,IAAQC,OAC1B,kBAACC,EAAA,EAAD,CAAY1C,QAAQ,YAAY2C,cAAY,GAA5C,eAGA,yBAAKjH,UAAW8G,IAAQW,WACtB,kBAACC,EAAA,EAAD,CACEC,MAAM,YACN3H,UAAW8G,IAAQc,SACnBP,SAzEV,SAAuBC,GACrB7B,EAAY6B,EAAE1G,cAAcwG,QAyEpBA,MAAO5B,EACPqC,WAAW,wCAEb,kBAACH,EAAA,EAAD,CACEC,MAAM,WACN3H,UAAW8G,IAAQc,SACnBP,SA7EV,SAAsBC,GACpB3B,EAAW2B,EAAE1G,cAAcwG,QA6EnBA,MAAO1B,EACPmC,WAAW,2CAEb,kBAACH,EAAA,EAAD,CACEC,MAAM,aACN3H,UAAW8G,IAAQgB,gBACnBT,SAjFV,SAAyBC,GACvBzB,EAAcyB,EAAE1G,cAAcwG,OAGhC,SAA0BxB,GACxBmC,aAAa9C,GACbA,EAAkBlD,WAAW,WAC3B,IAAM+D,EAAUnC,IAAYqE,eAAepC,EAAYF,EAASF,GAC5DM,GACFC,EAAWD,IAEZ,KATHmC,CAAiBX,EAAE1G,cAAcwG,QAgFzBA,MAAOxB,EACPiC,WAAW,2BAIjB,6BAAS7H,UAAW8G,IAAQC,OAC1B,kBAACC,EAAA,EAAD,CAAY1C,QAAQ,YAAY2C,cAAY,GAA5C,gCAGA,yBACEjH,UAAU,qCACV4B,MAAO,CAAEsG,UAAW,QACpBC,wBAAyB,CAAEC,OAAQ9B,MAGvC,6BAAStG,UAAW8G,IAAQC,OAC1B,kBAACC,EAAA,EAAD,CAAY1C,QAAQ,YAAY2C,cAAY,GAA5C,oBAGA,yBACEjH,UAAU,qCACV4B,MAAO,CAAEsG,UAAW,QACpBC,wBAAyB,CAAEC,OAAQpC,MAGvC,kBAACnB,EAAA,EAAD,CACE/F,QAASyE,EAAYzE,QACrBuE,KAAME,EAAYF,KAClByB,OA1FN,WACEtB,E,qVAAe,CAAD,GACTD,EADS,CAEZzE,SAAS,MAwFPwE,QAASC,EAAYD,a,wDC/LR+E,G,oEAKnB,WAAYC,GAA4B,IAAD,8BACrC,4CAAMA,KALRC,cAIuC,IAHvCF,YAGuC,IAFvCG,SAEuC,IADvCC,qBACuC,EAErC,EAAKF,SAAW7K,KAAKkH,MAAQ,GAC7B,EAAKyD,OAAS,KACd,EAAKG,IAAM,KAJ0B,E,iFAOrC,IAAME,EAAWC,SAASC,eAAeC,KAAKN,UAC9CM,KAAKR,OAASS,IAAWC,aAAaL,EAAiC,CACrEM,aAAa,EACbC,iBAAiB,EACjBC,eAAe,EACfC,KAAM,kBACNC,gBAAgB,EAChBC,cAAc,EACdC,MAAO,YAETT,KAAKL,IAAMK,KAAKR,OAAOkB,SACvBV,KAAKW,mBACLX,KAAKY,qB,yCAGDZ,KAAKP,MAAMlB,OACZyB,KAAKL,IAAuBkB,SAASb,KAAKP,MAAMlB,S,yCAGzB,IAAD,OACxByB,KAAKR,OAAyCsB,GAC7C,SACA,SAACC,EAA2BC,GAE1B,GAAsB,WAAlBA,EAAOC,OAAqB,CAI9B,GAHA/B,aAAa,EAAKU,kBA0B5B,SAAqBsB,GACnB,QAAKA,IACQ,KAATA,IACS,MAATA,IACS,MAATA,GACS,OAATA,KA5BSC,CAJyB,YAEfH,EAAOE,KAFQ,OAK5B,OAEF,EAAKtB,gBAAkB1G,WAAW,WAChC6H,EAAOK,YAAY,iBAClB,U,uCAMT,OAAKpB,KAAKL,IACHK,KAAKL,IAAI0B,WADM,K,+BAItB,OACE,yBAAKlK,UAAU,kBACb,8BAAUuB,GAAIsH,KAAKN,SAAU3I,KAAK,OAAOgC,MAAO,CAAEuI,OAAQ,e,GAzD9BC,IAAMC,Y,ICgBpCC,E,YASJ,WAAYhC,GAAyB,IAAD,8BAClC,4CAAMA,KATRzL,WAQoC,IAFpC0N,cAEoC,IADpCC,cACoC,EAElC,EAAK3N,MAAQ,CACXyI,UAAW,QACX/B,YAAa,CACXF,KAAM,UACNvE,SAAS,EACTwE,QAAS,IAEXmH,kBAAmBnC,EAAMjD,YAAciD,EAAMjD,YAAYkB,SAAW,GACpEmE,kBAAmBpC,EAAMjD,YAAciD,EAAMjD,YAAYc,SAAW,IAEtE,EAAKoE,SAAWH,IAAMO,YACtB,EAAKH,SAAWJ,IAAMO,YAbY,E,iFAef,IAAD,OACZpE,EAAmBsC,KAAK0B,SAASK,QAAQC,iBACzC1E,EAAmB0C,KAAK2B,SAASI,QAAQC,iBAC3ChC,KAAKP,MAAMpD,WACVqB,GAAaJ,KAClB0C,KAAKP,MAAMnD,gBAAe,GAC1BpD,WAAW,WACT,IAAM+D,EAAUnC,IAAYmH,iBAAiB3E,EAAUI,GACjDG,EAA2BZ,EAAQa,GAAG,EAAK9J,MAAMyI,WAClDoB,EAAUnF,IAGboC,IAAYkD,kBAAkBf,GAC9B,EAAKwC,MAAMlD,kBAAkBsB,IAH7B,EAAKjD,YAAY,CAAEJ,KAAM,QAASC,QAASoD,EAAUrF,QAKvD,EAAKiH,MAAMnD,gBAAe,IACzB,Q,uCAEYiC,GACfyB,KAAKkC,SAAS,CACZzF,UAAW8B,M,qCAGoD,IAArD/D,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAClBuF,KAAKkC,SAAS,CACZxH,YAAa,CACXzE,SAAS,EACTuE,OACAC,e,qCAKJuF,KAAKkC,SAAS,CACZxH,YAAa,CACXzE,SAAS,O,+BAIL,IAAD,OACP,OACE,iCACE,iCACE,yBAAKkB,UAAU,mBAAf,oBACA,kBAACwG,EAAA,EAAD,CACElC,QAAQ,YACRmC,MAAM,UACN/F,QAAS,kBAAM,EAAKsK,sBAHtB,WAME,kBAAC,IAAD,QAGJ,6BAAShL,UAAW8G,IAAQC,OAC1B,kBAACC,EAAA,EAAD,CAAY1C,QAAQ,YAAY2C,cAAY,GAA5C,mBAGA,kBAACC,EAAA,EAAD,CACE3G,aAAW,SACXX,KAAK,UACLI,UAAW8G,IAAQK,MACnBC,MAAOyB,KAAKhM,MAAMyI,UAClB+B,SAAU,SAACC,EAAQF,GAAT,OAA2B,EAAK6D,iBAAiB7D,KAE3D,kBAACG,EAAA,EAAD,CAAOH,MAAM,QAAQX,MAAM,YAC3B,0BAAMzG,UAAW8G,IAAQU,YAAzB,SACA,kBAACD,EAAA,EAAD,CAAOH,MAAM,SAASX,MAAM,YAC5B,0BAAMzG,UAAW8G,IAAQU,YAAzB,UACA,kBAACD,EAAA,EAAD,CAAOH,MAAM,SAASX,MAAM,YAC5B,0BAAMzG,UAAW8G,IAAQU,YAAzB,UACA,kBAACD,EAAA,EAAD,CAAOH,MAAM,UAAUX,MAAM,YAC7B,0BAAMzG,UAAW8G,IAAQU,YAAzB,WACA,kBAACD,EAAA,EAAD,CAAOH,MAAM,WAAWX,MAAM,YAC9B,0BAAMzG,UAAW8G,IAAQU,YAAzB,cAGJ,6BAASxH,UAAW8G,IAAQC,OAC1B,kBAACC,EAAA,EAAD,CAAY1C,QAAQ,YAAY2C,cAAY,GAA5C,gCAGA,yBAAKjH,UAAW8G,IAAQoE,SACtB,kBAAC,EAAD,CAAQC,IAAKtC,KAAK0B,SAAUnD,MAAOyB,KAAKhM,MAAM4N,sBAGlD,6BAASzK,UAAW8G,IAAQC,OAC1B,kBAACC,EAAA,EAAD,CAAY1C,QAAQ,YAAY2C,cAAY,GAA5C,oBAGA,yBAAKjH,UAAW8G,IAAQoE,SACtB,kBAAC,EAAD,CAAQC,IAAKtC,KAAK2B,SAAUpD,MAAOyB,KAAKhM,MAAM6N,sBAGlD,kBAAC7F,EAAA,EAAD,CACE/F,QAAS+J,KAAKhM,MAAM0G,YAAYzE,QAChCuE,KAAMwF,KAAKhM,MAAM0G,YAAYF,KAC7ByB,OAAQ,kBAAM,EAAKsG,gBACnB9H,QAASuF,KAAKhM,MAAM0G,YAAYD,e,GAxHnB8G,IAAMC,WA8HdzN,cAAQ0N,GC7HRe,EAlBgC,SAAC,GAGzC,IAFLC,EAEI,EAFJA,WACAjG,EACI,EADJA,YAEA,OACE,yBAAKrF,UAAU,uBACb,yBAAKA,UAAU,uBACG,MAAfsL,EACC,kBAAC,EAAD,CAAYjG,YAAaA,IAEzB,kBAAC,EAAD,CAAUA,YAAaA,KAG3B,kBAACkG,EAAA,EAAD,Q,kBCISC,EAlByB,SAAC,GAA+B,IAA7BF,EAA4B,EAA5BA,WAAYG,EAAgB,EAAhBA,UAErD,OADAC,QAAQC,IAAIL,GAEV,kBAACM,EAAA,EAAD,CACEC,YAAY,WACZvH,QAAQ,aACRwH,eAAe,UACf1E,MAAOkE,EACPjE,SAAU,SAACC,EAAQF,GAAT,OAAmBqE,EAAUrE,IACvC7G,aAAW,wBACXP,UAAU,uBAEV,kBAAC+L,EAAA,EAAD,CAAKpE,MAAM,aAAaP,MAAM,MAC9B,kBAAC2E,EAAA,EAAD,CAAKpE,MAAM,YAAYP,MAAM,QCQpB4E,UAzB+B,SAAC1D,GAC7C,IAAMjD,EAAciD,EAAM2D,SAASpP,MADoB,EAEzBgC,mBAAiB,KAFQ,mBAEhDqN,EAFgD,KAEvCC,EAFuC,KAiBvD,OAdA3J,oBAAU,WACR,IAAM4J,EAAkB9D,EAAM2D,SAAStH,OAAOlG,MAAM,iBAChD2N,GACEA,EAAgB,KAAOF,GACzBC,EAAWC,EAAgB,KAG9B,CAAC9D,EAAM2D,SAAStH,OAAQuH,IAQzB,yBAAKlM,UAAU,cACb,kBAAC,EAAD,CAAMsL,WAAYY,EAAST,UAR/B,SAAmBH,GACjBhD,EAAMvL,QAAQ4C,KAAK,CACjB+E,SAAU,UACVC,OAAQ,SAAW2G,OAMnB,kBAACe,EAAD,CAASf,WAAYY,EAAS7G,YAAaA,O,gCCzBjD,8GAeMiH,EAA2C,SAAC,GAAc,IAAZjJ,EAAW,EAAXA,KAClD,MAAa,YAATA,EACK,kBAAC,IAAD,MAEI,SAATA,EACK,kBAAC,IAAD,MAEI,UAATA,EACK,kBAAC,IAAD,MAEF,kBAAC,IAAD,OA0CMwB,IAvCyB,SAAC,GAKlC,IAJLvB,EAII,EAJJA,QACAxE,EAGI,EAHJA,QACAgG,EAEI,EAFJA,OAEI,IADJzB,YACI,MADG,OACH,EAOJ,OACE,8BACE,kBAAC,IAAD,CACEkJ,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,iBAAkB,IAClBjL,KAAM3C,EACN4C,QAfc,SAACf,EAAoCgM,GACxC,cAAXA,GAGJ7H,KAYI9E,UAAW,eAAiBqD,GAE5B,kBAAC,IAAD,CACErD,UAAU,kBACV4M,mBAAiB,kBACjBtJ,QACE,0BAAM/B,GAAG,kBAAkBvB,UAAU,uBACnC,kBAACsM,EAAD,CAAcjJ,KAAMA,IACnBC,S,gCC1Df,4BAGe1G,gBACb,SAACC,GAAD,MAAiB,CAAEqI,SAAUrI,EAAMqI,WACnC,SAAClI,GAAD,MAAoB,CAClBmI,eADkB,SACHtI,GACbG,EAAS6P,YAAehQ,KAE1BuI,kBAJkB,SAIAzG,GAChB3B,EAAS8P,YAAwBnO","file":"static/js/7.b4bd41fe.chunk.js","sourcesContent":["import { connect } from \"react-redux\";\nimport { deleteHistoryTimerData, TimerDataInfo } from \"@/actions/history\";\n\nexport default connect(\n  (state: any) => ({ historyData: state.history }),\n  (dispatch: any) => ({\n    deleteTimer(timerInfo: TimerDataInfo) {\n      dispatch(deleteHistoryTimerData(timerInfo));\n    }\n  })\n);\n","export function dateFormat(date?: Date | number, format?: string): string {\n  let token = /d{1,4}|m{1,4}|yy(?:yy)?|H{1,2}|M{1,2}|S{1,2}/g;\n  if (Boolean(date)) {\n    date = date instanceof Date ? date : new Date(date as number);\n    let flags: { [x: string]: string } = {\n      yyyy: date.getFullYear().toString(),\n      mm: (\"0\" + (date.getMonth() + 1)).slice(-2),\n      dd: (\"0\" + date.getDate()).slice(-2),\n      HH: (\"0\" + date.getHours()).slice(-2),\n      MM: (\"0\" + date.getMinutes()).slice(-2),\n      SS: (\"0\" + date.getSeconds()).slice(-2)\n    };\n    if (!format) {\n      // 默认显示格式\n      format = \"yyyy-mm-dd HH:MM:SS\";\n    }\n    format = format.replace(token, function(match: string) {\n      if (match in flags) {\n        return flags[match];\n      }\n      return \"\";\n    });\n    return format;\n  }\n  return \"\";\n}\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Grow from \"@material-ui/core/Grow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport { TimerDataInfo } from \"@/actions/history\";\nimport { dateFormat } from \"@/utils/date\";\n\ninterface ChildTimerInfo {\n  name: string;\n  useTime: number;\n}\n\ninterface FcProps {\n  info: TimerDataInfo;\n  collectTimer: (info: TimerDataInfo) => void;\n  deleteTimer: (timerInfo: TimerDataInfo) => void;\n}\n\nconst MyCard: React.FC<FcProps> = ({ info, deleteTimer, collectTimer }) => {\n  const [visible, setVisible] = useState<number>(1);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const showMenu = Boolean(anchorEl);\n  const resultClassName = info.status === 2 ? \"result-error\" : \"result-success\";\n\n  const timerChildList: ChildTimerInfo[] = [];\n\n  function deepChild(child: TimerDataInfo[], root: string = \"\") {\n    child.forEach((info: TimerDataInfo) => {\n      timerChildList.push({\n        name: root + info.name,\n        useTime: info.useTime,\n      });\n      if (info.children.length) {\n        deepChild(info.children, info.name);\n      }\n    });\n  }\n\n  function openSettingMenu(event: React.MouseEvent<HTMLElement>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function deleteCurrInfo() {\n    setVisible(0);\n    handleClose();\n    setTimeout(() => deleteTimer(info), 300);\n  }\n\n  function saveCurrentInfo() {\n    handleClose();\n    collectTimer(info);\n  }\n\n  deepChild(info.children);\n  return (\n    <aside className=\"result-card\">\n      <Grow in={Boolean(visible)}>\n        <Card>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"recipe\" className={resultClassName}>\n                {info.status === 1 ? <Check /> : <Clear />}\n              </Avatar>\n            }\n            action={\n              <IconButton aria-label=\"settings\" onClick={openSettingMenu}>\n                <MoreVertIcon />\n              </IconButton>\n            }\n            title={info.name}\n            subheader={dateFormat(info.date, \"mm-dd HH:MM:SS\")}\n            className=\"result-card-header\"\n          />\n          <CardContent>\n            {timerChildList.map((childInfo: ChildTimerInfo, i: number) => (\n              <div className=\"result-card-item\" key={i}>\n                <span className=\"card-item-root\">{childInfo.name}</span>\n                <span className=\"card-item-time\">{childInfo.useTime}ms</span>\n              </div>\n            ))}\n          </CardContent>\n          <Divider />\n          <CardContent>\n            {info.status === 1 ? (\n              <div className=\"result-active-success\">use: {info.useTime}ms</div>\n            ) : (\n              <div className=\"result-active-error\">{info.error}</div>\n            )}\n          </CardContent>\n        </Card>\n      </Grow>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={showMenu}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            width: 120,\n          },\n        }}\n      >\n        <MenuItem onClick={saveCurrentInfo}>Collect</MenuItem>\n        <MenuItem onClick={deleteCurrInfo}>Delete</MenuItem>\n      </Menu>\n    </aside>\n  );\n};\n\nexport default MyCard;\n","import React, { useEffect, useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { DatabaseItem } from \"@/utils/types\";\nimport { getAllData } from \"@/utils/indexDB\";\nimport { dateFormat } from \"@/utils/date\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport PlayCircleFilled from \"@material-ui/icons/PlayCircleFilled\";\n\ninterface CollectorProps {\n  replayCollect: (item: DatabaseItem) => void;\n  deleteCollect: (item: DatabaseItem) => Promise<1 | 0>;\n}\n\nconst CollectorList: React.FC<CollectorProps> = ({\n  replayCollect,\n  deleteCollect,\n}) => {\n  const [collectorList, setCollectorList] = useState<DatabaseItem[]>([]);\n  useEffect(() => {\n    getAllData().then((data) => {\n      setCollectorList(data.data);\n    });\n  }, []);\n  async function handleDelete(info: DatabaseItem) {\n    const result = await deleteCollect(info);\n    if (result !== 1) return;\n    const { data } = await getAllData();\n    if (data) setCollectorList(data);\n  }\n  return (\n    <aside className=\"collector-box\">\n      <List>\n        {collectorList.map((collector: DatabaseItem) => (\n          <ListItem key={collector.id}>\n            <ListItemText\n              primary={collector.timerInfo.name}\n              secondary={dateFormat(collector.timerInfo.date)}\n            />\n            <IconButton\n              edge=\"end\"\n              aria-label=\"play\"\n              onClick={() => replayCollect(collector)}\n            >\n              <PlayCircleFilled />\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"delete\"\n              onClick={() => handleDelete(collector)}\n            >\n              <Delete />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n    </aside>\n  );\n};\n\nexport default CollectorList;\n","import React, { Fragment, useState } from \"react\";\nimport connect from \"../container/history\";\nimport { TimerDataInfo } from \"../actions/history\";\nimport { DatabaseItem } from \"@/utils/types\";\nimport ResultCard from \"./ResultCard\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport CollectorList from \"./CollectorList\";\nimport Message from \"./Message\";\nimport interpreter from \"@/utils/baseStatement\";\nimport { addData, deleteData } from \"@/utils/indexDB\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\ninterface FcProps extends RouteComponentProps {\n  historyData: TimerDataInfo[];\n  deleteTimer: (timerInfo: TimerDataInfo) => void;\n}\n\ninterface MessageInfo {\n  type: string;\n  message: string;\n  visible: boolean;\n}\n\nconst HistoryView: React.FC<FcProps> = ({\n  historyData,\n  deleteTimer,\n  history,\n}) => {\n  const [drawer, setDrawer] = useState<boolean>(false);\n  const [messageInfo, setMessageInfo] = useState<MessageInfo>({\n    type: \"success\",\n    visible: false,\n    message: \"\",\n  });\n  function handleCloseDrawer() {\n    setDrawer(false);\n  }\n  function handleOpenDrawer() {\n    setDrawer(true);\n  }\n  function showMessage({ type, message }: { type: string; message: string }) {\n    setMessageInfo({\n      type,\n      message,\n      visible: true,\n    });\n  }\n  function closeMessage() {\n    setMessageInfo({\n      ...messageInfo,\n      visible: false,\n    });\n  }\n  function collectTimer(info: TimerDataInfo) {\n    const codeInfo = interpreter.getDatabaseInfo(info.uid);\n    const databaseItem = {\n      timerInfo: info,\n      codeInfo: codeInfo,\n      type: codeInfo.type,\n    };\n    addData(databaseItem)\n      .then(() => {\n        showMessage({\n          type: \"success\",\n          message: \"Saved timer record\",\n        });\n      })\n      .catch((err: any) => {\n        showMessage({\n          type: \"warn\",\n          message: String(err),\n        });\n      });\n  }\n\n  function replayCollect(item: DatabaseItem) {\n    if (item.type === 1) {\n      history.push({\n        state: item.codeInfo,\n        pathname: \"/custom\",\n        search: \"?type=1\" + Date.now(),\n      });\n    } else if (item.type === 2) {\n      history.push({\n        state: item.codeInfo,\n        pathname: \"/custom\",\n        search: \"?type=2\" + Date.now(),\n      });\n    }\n    setDrawer(false);\n  }\n\n  async function deleteCollect(item: DatabaseItem) {\n    if (!item.id) return 0;\n    const { error } = await deleteData(item.id);\n    if (error) {\n      showMessage({\n        type: \"error\",\n        message: error,\n      });\n      return 0;\n    }\n    return 1;\n  }\n\n  return (\n    <Fragment>\n      <aside className=\"history-box\">\n        <div className=\"collector-button\">\n          <Fab variant=\"extended\" aria-label=\"open\" onClick={handleOpenDrawer}>\n            <KeyboardArrowLeft />\n            Open Collector\n          </Fab>\n        </div>\n        {historyData.map((timerInfo: TimerDataInfo) => (\n          <ResultCard\n            key={timerInfo.id}\n            info={timerInfo}\n            deleteTimer={deleteTimer}\n            collectTimer={collectTimer}\n          />\n        ))}\n      </aside>\n      <Drawer anchor=\"right\" open={drawer} onClose={handleCloseDrawer}>\n        <CollectorList\n          replayCollect={replayCollect}\n          deleteCollect={deleteCollect}\n        />\n      </Drawer>\n      <Message\n        visible={messageInfo.visible}\n        type={messageInfo.type}\n        closed={closeMessage}\n        message={messageInfo.message}\n      />\n    </Fragment>\n  );\n};\n\nexport default connect(withRouter(HistoryView));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"custom_formInput__1vrEs\",\"items\":\"custom_items__sKkq6\",\"expressionInput\":\"custom_expressionInput__3waP-\",\"apiInput\":\"custom_apiInput__dMDqN\",\"radioLabel\":\"custom_radioLabel__2hRq_\",\"radio\":\"custom_radio__3Cpkp\"};","import React, { useState, ChangeEvent, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Replay from \"@material-ui/icons/Replay\";\nimport classes from \"@/assets/css/custom.module.scss\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Prism from \"prismjs\";\nimport interpreter from \"@/utils/baseStatement\";\nimport { BaseApiInfo } from \"@/utils/types\";\nimport { TimerDataInfo } from \"@/actions/history\";\nimport connect from \"@/container/apiMain\";\nimport Message from \"@/components/Message\";\n\ninterface expressionProps {\n  progress: boolean;\n  updateProgress: (status: boolean) => void;\n  updateHistoryList: (info: TimerDataInfo) => void;\n  currentInfo?: BaseApiInfo;\n}\n\ninterface MessageInfo {\n  type: string;\n  message: string;\n  visible: boolean;\n}\nconst Expression: React.FC<expressionProps> = ({\n  progress,\n  updateProgress,\n  updateHistoryList,\n  currentInfo,\n}) => {\n  const [loopCount, setLoopCount] = useState<string>(\"50000\");\n  const [rootName, setRootName] = useState<string>(\"\");\n  const [apiName, setApiName] = useState<string>(\"\");\n  const [expression, setExpression] = useState<string>(\"\");\n  const [apiInfo, setApiInfo] = useState<BaseApiInfo | undefined>();\n  const [messageInfo, setMessageInfo] = useState<MessageInfo>({\n    type: \"success\",\n    visible: false,\n    message: \"\",\n  });\n  const BaseCodeHtml: string = Prism.highlight(\n    apiInfo ? apiInfo.baseCode : \"\",\n    Prism.languages.javascript,\n    \"javascript\"\n  );\n  const initCodeHtml: string = Prism.highlight(\n    apiInfo ? apiInfo.initCode : \"\",\n    Prism.languages.javascript,\n    \"javascript\"\n  );\n\n  let throttleTimeout: any;\n\n  useEffect(() => {\n    if (currentInfo) {\n      setExpression(currentInfo.expression || \"\");\n      setRootName(currentInfo.root || \"\");\n      setApiName(currentInfo.key || \"\");\n      setApiInfo(currentInfo);\n    }\n  }, [currentInfo]);\n\n  function runCurrentApiTest() {\n    if (progress) return;\n    if (apiInfo) {\n      updateProgress(true);\n      setTimeout(() => {\n        const timerData: TimerDataInfo = apiInfo.fn(Number(loopCount));\n        if (!timerData.id) {\n          showMessage({ type: \"error\", message: timerData.error as string });\n        } else {\n          interpreter.pushCustomApiInfo(apiInfo);\n          updateHistoryList(timerData);\n        }\n        updateProgress(false);\n      }, 200);\n    }\n  }\n\n  function handleChangeTime(e: any, value: string) {\n    setLoopCount(value);\n  }\n  function inputRootName(e: ChangeEvent<HTMLInputElement>) {\n    setRootName(e.currentTarget.value);\n  }\n  function inputApiName(e: ChangeEvent<HTMLInputElement>) {\n    setApiName(e.currentTarget.value);\n  }\n  function inputExpression(e: ChangeEvent<HTMLInputElement>) {\n    setExpression(e.currentTarget.value);\n    translateApiInfo(e.currentTarget.value);\n  }\n  function translateApiInfo(expression: string) {\n    clearTimeout(throttleTimeout);\n    throttleTimeout = setTimeout(() => {\n      const apiInfo = interpreter.getBaseApiInfo(expression, apiName, rootName);\n      if (apiInfo) {\n        setApiInfo(apiInfo);\n      }\n    }, 500);\n  }\n  function showMessage({ type, message }: { type: string; message: string }) {\n    setMessageInfo({\n      type,\n      message,\n      visible: true,\n    });\n  }\n  function closeMessage() {\n    setMessageInfo({\n      ...messageInfo,\n      visible: false,\n    });\n  }\n\n  return (\n    <article>\n      <section>\n        <div className=\"component-title\">Use Expression</div>\n        <Button variant=\"contained\" color=\"primary\" onClick={runCurrentApiTest}>\n          Run Test\n          <Replay />\n        </Button>\n      </section>\n      <section className={classes.items}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Loop Count($n):\n        </Typography>\n        <RadioGroup\n          aria-label=\"gender\"\n          name=\"gender1\"\n          className={classes.radio}\n          value={loopCount}\n          onChange={handleChangeTime}\n        >\n          <Radio value=\"50000\" color=\"primary\" />\n          <span className={classes.radioLabel}>50000</span>\n          <Radio value=\"100000\" color=\"primary\" />\n          <span className={classes.radioLabel}>100000</span>\n          <Radio value=\"500000\" color=\"primary\" />\n          <span className={classes.radioLabel}>500000</span>\n          <Radio value=\"1000000\" color=\"primary\" />\n          <span className={classes.radioLabel}>1000000</span>\n          <Radio value=\"10000000\" color=\"primary\" />\n          <span className={classes.radioLabel}>10000000</span>\n        </RadioGroup>\n      </section>\n      <section className={classes.items}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Expression:\n        </Typography>\n        <div className={classes.formInput}>\n          <TextField\n            label=\"Root Name\"\n            className={classes.apiInput}\n            onChange={inputRootName}\n            value={rootName}\n            helperText=\"set api root path if you input this\"\n          />\n          <TextField\n            label=\"API Name\"\n            className={classes.apiInput}\n            onChange={inputApiName}\n            value={apiName}\n            helperText=\"api name in the replacement expression\"\n          />\n          <TextField\n            label=\"Expression\"\n            className={classes.expressionInput}\n            onChange={inputExpression}\n            value={expression}\n            helperText=\"see expression rules\"\n          />\n        </div>\n      </section>\n      <section className={classes.items}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Before the timer begin code:\n        </Typography>\n        <pre\n          className=\"language-javascript pre-javascript\"\n          style={{ minHeight: \"40px\" }}\n          dangerouslySetInnerHTML={{ __html: initCodeHtml }}\n        />\n      </section>\n      <section className={classes.items}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Code under test:\n        </Typography>\n        <pre\n          className=\"language-javascript pre-javascript\"\n          style={{ minHeight: \"40px\" }}\n          dangerouslySetInnerHTML={{ __html: BaseCodeHtml }}\n        />\n      </section>\n      <Message\n        visible={messageInfo.visible}\n        type={messageInfo.type}\n        closed={closeMessage}\n        message={messageInfo.message}\n      />\n    </article>\n  );\n};\n\nexport default connect(Expression);\n","import React from \"react\";\nimport codemirror from \"codemirror\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/dracula.css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"codemirror/addon/hint/show-hint.js\";\nimport \"codemirror/addon/edit/matchbrackets\";\nimport \"codemirror/addon/hint/javascript-hint\";\nimport \"codemirror/addon/selection/active-line.js\";\n\nexport default class Editor extends React.Component<{ value?: string }> {\n  editorId: string;\n  Editor: codemirror.EditorFromTextArea | null;\n  Doc: codemirror.Doc | null;\n  showHintTimeout: any;\n  constructor(props: { value?: string }) {\n    super(props);\n    this.editorId = Date.now() + \"\";\n    this.Editor = null;\n    this.Doc = null;\n  }\n  componentDidMount() {\n    const textarea = document.getElementById(this.editorId);\n    this.Editor = codemirror.fromTextArea(textarea as HTMLTextAreaElement, {\n      lineNumbers: true,\n      styleActiveLine: true,\n      matchBrackets: true,\n      mode: \"text/javascript\",\n      indentWithTabs: true,\n      lineWrapping: true,\n      theme: \"dracula\",\n    });\n    this.Doc = this.Editor.getDoc();\n    this._bindEditorEvent();\n    this._initEditorValue();\n  }\n  private _initEditorValue() {\n    if (this.props.value) {\n      (this.Doc as codemirror.Doc).setValue(this.props.value);\n    }\n  }\n  private _bindEditorEvent() {\n    (this.Editor as codemirror.EditorFromTextArea).on(\n      \"change\",\n      (editor: CodeMirror.Editor, change) => {\n        //获取用户当前的编辑器中的编写的代码\n        if (change.origin === \"+input\") {\n          clearTimeout(this.showHintTimeout);\n          const [text] = change.text;\n\n          if (!checkChange(text)) {\n            return;\n          }\n          this.showHintTimeout = setTimeout(function() {\n            editor.execCommand(\"autocomplete\");\n          }, 300);\n        }\n      }\n    );\n  }\n  public getEditorValue(): string {\n    if (!this.Doc) return \"\";\n    return this.Doc.getValue();\n  }\n  render() {\n    return (\n      <div className=\"editor-content\">\n        <textarea id={this.editorId} name=\"code\" style={{ border: \"none\" }} />\n      </div>\n    );\n  }\n}\n\nfunction checkChange(text: string | undefined) {\n  if (!text) return false;\n  if (text === \"\") return false;\n  if (text === \" \") return false;\n  if (text === \"=\") return false;\n  if (text === \"= \") return false;\n  return true;\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Replay from \"@material-ui/icons/Replay\";\nimport classes from \"@/assets/css/custom.module.scss\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport interpreter from \"@/utils/baseStatement\";\nimport { TimerDataInfo } from \"@/actions/history\";\nimport { BaseApiInfo } from \"@/utils/types\";\nimport connect from \"@/container/apiMain\";\nimport Message from \"@/components/Message\";\nimport Editor from \"@/components/Editor\";\n\ninterface expressionProps {\n  progress: boolean;\n  updateProgress: (status: boolean) => void;\n  updateHistoryList: (info: TimerDataInfo) => void;\n  currentInfo?: BaseApiInfo;\n}\n\ninterface MessageInfo {\n  type: string;\n  message: string;\n  visible: boolean;\n}\n\nclass EditLoop extends React.Component<expressionProps> {\n  state: {\n    loopCount: string;\n    messageInfo: MessageInfo;\n    initCodeRefValue1: string;\n    initCodeRefValue2: string;\n  };\n  codeRef1: any;\n  codeRef2: any;\n  constructor(props: expressionProps) {\n    super(props);\n    this.state = {\n      loopCount: \"50000\",\n      messageInfo: {\n        type: \"success\",\n        visible: false,\n        message: \"\",\n      },\n      initCodeRefValue1: props.currentInfo ? props.currentInfo.initCode : \"\",\n      initCodeRefValue2: props.currentInfo ? props.currentInfo.baseCode : \"\",\n    };\n    this.codeRef1 = React.createRef();\n    this.codeRef2 = React.createRef();\n  }\n  runCurrentApiTest() {\n    const initCode: string = this.codeRef1.current.getEditorValue();\n    const baseCode: string = this.codeRef2.current.getEditorValue();\n    if (this.props.progress) return;\n    if (!initCode && !baseCode) return;\n    this.props.updateProgress(true);\n    setTimeout(() => {\n      const apiInfo = interpreter.createCustomInfo(baseCode, initCode);\n      const timerData: TimerDataInfo = apiInfo.fn(this.state.loopCount);\n      if (!timerData.id) {\n        this.showMessage({ type: \"error\", message: timerData.error as string });\n      } else {\n        interpreter.pushCustomApiInfo(apiInfo);\n        this.props.updateHistoryList(timerData);\n      }\n      this.props.updateProgress(false);\n    }, 200);\n  }\n  handleChangeTime(value: string) {\n    this.setState({\n      loopCount: value,\n    });\n  }\n  showMessage({ type, message }: { type: string; message: string }) {\n    this.setState({\n      messageInfo: {\n        visible: true,\n        type,\n        message,\n      },\n    });\n  }\n  closeMessage() {\n    this.setState({\n      messageInfo: {\n        visible: false,\n      },\n    });\n  }\n  render() {\n    return (\n      <article>\n        <section>\n          <div className=\"component-title\">Edit Custom Code</div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.runCurrentApiTest()}\n          >\n            Run Test\n            <Replay />\n          </Button>\n        </section>\n        <section className={classes.items}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Loop Count($n):\n          </Typography>\n          <RadioGroup\n            aria-label=\"gender\"\n            name=\"gender1\"\n            className={classes.radio}\n            value={this.state.loopCount}\n            onChange={(e: any, value: string) => this.handleChangeTime(value)}\n          >\n            <Radio value=\"50000\" color=\"primary\" />\n            <span className={classes.radioLabel}>50000</span>\n            <Radio value=\"100000\" color=\"primary\" />\n            <span className={classes.radioLabel}>100000</span>\n            <Radio value=\"500000\" color=\"primary\" />\n            <span className={classes.radioLabel}>500000</span>\n            <Radio value=\"1000000\" color=\"primary\" />\n            <span className={classes.radioLabel}>1000000</span>\n            <Radio value=\"10000000\" color=\"primary\" />\n            <span className={classes.radioLabel}>10000000</span>\n          </RadioGroup>\n        </section>\n        <section className={classes.items}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Before the timer begin code:\n          </Typography>\n          <div className={classes.editBox}>\n            <Editor ref={this.codeRef1} value={this.state.initCodeRefValue1} />\n          </div>\n        </section>\n        <section className={classes.items}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Code under test:\n          </Typography>\n          <div className={classes.editBox}>\n            <Editor ref={this.codeRef2} value={this.state.initCodeRefValue2} />\n          </div>\n        </section>\n        <Message\n          visible={this.state.messageInfo.visible}\n          type={this.state.messageInfo.type}\n          closed={() => this.closeMessage()}\n          message={this.state.messageInfo.message}\n        />\n      </article>\n    );\n  }\n}\nexport default connect(EditLoop);\n","import React from \"react\";\nimport HistoryView from \"@/components/HistoryView\";\nimport Expression from \"./Expression\";\nimport EditLoop from \"./EditLoop\";\nimport { BaseApiInfo } from \"@/utils/types\";\ninterface CustomContent {\n  currentTab: string;\n  currentInfo?: BaseApiInfo;\n}\n\nconst CustomContent: React.FC<CustomContent> = ({\n  currentTab,\n  currentInfo,\n}) => {\n  return (\n    <div className=\"custom-content-main\">\n      <div className=\"custom-content-view\">\n        {currentTab === \"1\" ? (\n          <Expression currentInfo={currentInfo} />\n        ) : (\n          <EditLoop currentInfo={currentInfo} />\n        )}\n      </div>\n      <HistoryView />\n    </div>\n  );\n};\n\nexport default CustomContent;\n","import React from \"react\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\ninterface TabsProps {\n  currentTab: string;\n  changeTab: (cur: string) => void;\n}\n\nconst CustomTabs: React.FC<TabsProps> = ({ currentTab, changeTab }) => {\n  console.log(currentTab);\n  return (\n    <Tabs\n      orientation=\"vertical\"\n      variant=\"scrollable\"\n      indicatorColor=\"primary\"\n      value={currentTab}\n      onChange={(e: any, value) => changeTab(value)}\n      aria-label=\"Vertical tabs example\"\n      className=\"custom-content-tabs\"\n    >\n      <Tab label=\"Expression\" value=\"1\" />\n      <Tab label=\"Edit loop\" value=\"2\" />\n    </Tabs>\n  );\n};\n\nexport default CustomTabs;\n","import React, { useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Content from \"./Content\";\nimport Tabs from \"./CustomTab\";\n\nconst Custom: React.FC<RouteComponentProps> = (props) => {\n  const currentInfo = props.location.state;\n  const [currTab, setCurrTab] = useState<string>(\"1\");\n  useEffect(() => {\n    const currSearchMatch = props.location.search.match(/^\\?type=(1|2)/);\n    if (currSearchMatch) {\n      if (currSearchMatch[1] !== currTab) {\n        setCurrTab(currSearchMatch[1]);\n      }\n    }\n  }, [props.location.search, currTab]);\n  function changeTab(currentTab: string) {\n    props.history.push({\n      pathname: \"/custom\",\n      search: \"?type=\" + currentTab,\n    });\n  }\n  return (\n    <div className=\"custom-box\">\n      <Tabs currentTab={currTab} changeTab={changeTab} />\n      <Content currentTab={currTab} currentInfo={currentInfo} />\n    </div>\n  );\n};\n\nexport default Custom;\n","import React, { SyntheticEvent } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport Error from \"@material-ui/icons/Error\";\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\nimport Info from \"@material-ui/icons/Info\";\n\ninterface MessageProps {\n  visible: boolean;\n  message: string;\n  type?: string;\n  closed: () => void;\n}\n\nconst SnackBarIcon: React.FC<{ type: string }> = ({ type }) => {\n  if (type === \"success\") {\n    return <CheckCircle />;\n  }\n  if (type === \"warn\") {\n    return <Warning />;\n  }\n  if (type === \"error\") {\n    return <Error />;\n  }\n  return <Info />;\n};\n\nconst Message: React.FC<MessageProps> = ({\n  message,\n  visible,\n  closed,\n  type = \"info\",\n}) => {\n  const handleClose = (event: SyntheticEvent | MouseEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    closed();\n  };\n  return (\n    <span>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        autoHideDuration={3000}\n        open={visible}\n        onClose={handleClose}\n        className={\"message-box-\" + type}\n      >\n        <SnackbarContent\n          className=\"message-content\"\n          aria-describedby=\"client-snackbar\"\n          message={\n            <span id=\"client-snackbar\" className=\"message-content-txt\">\n              <SnackBarIcon type={type} />\n              {message}\n            </span>\n          }\n        />\n      </Snackbar>\n    </span>\n  );\n};\n\nexport default Message;\n","import { connect } from \"react-redux\";\nimport { UpdateProgress } from \"../actions/home\";\nimport { updateHistoryResultData, TimerDataInfo } from \"../actions/history\";\nexport default connect(\n  (state: any) => ({ progress: state.progress }),\n  (dispatch: any) => ({\n    updateProgress(state: boolean) {\n      dispatch(UpdateProgress(state));\n    },\n    updateHistoryList(info: TimerDataInfo) {\n      dispatch(updateHistoryResultData(info));\n    }\n  })\n);\n"],"sourceRoot":""}