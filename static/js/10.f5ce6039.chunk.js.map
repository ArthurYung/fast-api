{"version":3,"sources":["components/Message.tsx","container/history.ts","utils/date.ts","components/ResultCard.tsx","components/CollectorList.tsx","components/HistoryView.tsx","components/Editor.tsx","utils/transformCommon.ts","utils/codeTransform.ts","utils/codeTimer.ts","page/code/Content.tsx","page/code/App.tsx"],"names":["SnackBarIcon","type","Message","message","visible","closed","anchorOrigin","vertical","horizontal","autoHideDuration","open","onClose","event","reason","className","aria-describedby","id","connect","state","historyData","history","dispatch","deleteTimer","timerInfo","deleteHistoryTimerData","dateFormat","date","format","Boolean","flags","yyyy","Date","getFullYear","toString","mm","getMonth","slice","dd","getDate","HH","getHours","MM","getMinutes","SS","getSeconds","replace","match","MyCard","info","collectTimer","useState","setVisible","anchorEl","setAnchorEl","showMenu","resultClassName","status","timerChildList","handleClose","deepChild","child","root","forEach","push","name","useTime","children","length","Grow","in","Card","CardHeader","avatar","Avatar","aria-label","action","IconButton","onClick","currentTarget","title","subheader","CardContent","map","childInfo","i","key","Divider","error","Menu","keepMounted","PaperProps","style","width","MenuItem","setTimeout","CollectorList","replayCollect","deleteCollect","collectorList","setCollectorList","a","getAllData","data","useEffect","then","List","collector","ListItem","ListItemText","primary","secondary","edge","handleDelete","withRouter","drawer","setDrawer","messageInfo","setMessageInfo","showMessage","codeInfo","interpreter","getDatabaseInfo","uid","databaseItem","addData","catch","err","String","item","deleteData","Fab","variant","ResultCard","Drawer","anchor","pathname","search","now","Editor","props","editorId","Doc","showHintTimeout","textarea","document","getElementById","this","codemirror","fromTextArea","lineNumbers","styleActiveLine","matchBrackets","mode","indentWithTabs","lineWrapping","theme","getDoc","_bindEditorEvent","_initEditorValue","value","setValue","on","editor","change","origin","clearTimeout","text","checkChange","execCommand","getValue","border","React","Component","startTime","query","t","tid","gid","endTime","createNewStatement","start","end","body","BlockStatement","_gid","_parseToAst","code","funcNameMap","ast","parse","sourceType","traverse","Function","path","node","get","isEmptyFunction","scope","generateUidIdentifier","generateUid","parentNode","parentPath","left","property","callee","findFunctionName","scopeInfo","startStatement","endStatement","newStatementBody","replaceWith","replaceFunction","enter","isProgram","rootScopeInfo","unshiftContainer","pushContainer","shiftProgramBody","skip","getTransformCode","currentTimerId","watcherCallback","_code","result","transformFromAstSync","nameMap","stampTimerPool","watchTimerEnd","_tid","_uid","window","performance","console","log","async","getData","transformData","time","addTime","addAsyncTime","createTransformData","Object","keys","initCodeRefValue","CodeTest","codeRef","toES5","createRef","results","current","getEditorValue","fun","callback","beginTimer","e","Button","color","runCurrentApiTest","Typography","gutterBottom","ref","Code","HistoryView"],"mappings":"6GAAA,8GAeMA,EAA2C,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClD,MAAa,YAATA,EACK,kBAAC,IAAD,MAEI,SAATA,EACK,kBAAC,IAAD,MAEI,UAATA,EACK,kBAAC,IAAD,MAEF,kBAAC,IAAD,OA0CMC,IAvCyB,SAAC,GAKlC,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,OAEI,IADJJ,YACI,MADG,OACH,EAOJ,OACE,8BACE,kBAAC,IAAD,CACEK,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,iBAAkB,IAClBC,KAAMN,EACNO,QAfc,SAACC,EAAoCC,GACxC,cAAXA,GAGJR,KAYIS,UAAW,eAAiBb,GAE5B,kBAAC,IAAD,CACEa,UAAU,kBACVC,mBAAiB,kBACjBZ,QACE,0BAAMa,GAAG,kBAAkBF,UAAU,uBACnC,kBAACd,EAAD,CAAcC,KAAMA,IACnBE,S,gHCvDAc,cACb,SAACC,GAAD,MAAiB,CAAEC,YAAaD,EAAME,UACtC,SAACC,GAAD,MAAoB,CAClBC,YADkB,SACNC,GACVF,EAASG,YAAuBD,Q,uICP/B,SAASE,EAAWC,EAAsBC,GAE/C,GAAIC,QAAQF,GAAO,CAEjB,IAAIG,EAAiC,CACnCC,MAFFJ,EAAOA,aAAgBK,KAAOL,EAAO,IAAIK,KAAKL,IAEjCM,cAAcC,WACzBC,IAAK,KAAOR,EAAKS,WAAa,IAAIC,OAAO,GACzCC,IAAK,IAAMX,EAAKY,WAAWF,OAAO,GAClCG,IAAK,IAAMb,EAAKc,YAAYJ,OAAO,GACnCK,IAAK,IAAMf,EAAKgB,cAAcN,OAAO,GACrCO,IAAK,IAAMjB,EAAKkB,cAAcR,OAAO,IAYvC,OAVKT,IAEHA,EAAS,uBAEXA,EAASA,EAAOkB,QAfN,gDAeqB,SAASC,GACtC,OAAIA,KAASjB,EACJA,EAAMiB,GAER,KAIX,MAAO,GCIT,IAiGeC,EAjGmB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAM1B,EAAgC,EAAhCA,YAAa2B,EAAmB,EAAnBA,aAAmB,EAC3CC,mBAAiB,GAD0B,mBAClE9C,EADkE,KACzD+C,EADyD,OAEzCD,mBAA6B,MAFY,mBAElEE,EAFkE,KAExDC,EAFwD,KAInEC,EAAW1B,QAAQwB,GACnBG,EAAkC,IAAhBP,EAAKQ,OAAe,eAAiB,iBAEvDC,EAAmC,GAkBzC,SAASC,IACPL,EAAY,MAed,OAhCA,SAASM,EAAUC,GAA4C,IAApBC,EAAmB,uDAAJ,GACxDD,EAAME,QAAQ,SAACd,GACbS,EAAeM,KAAK,CAClBC,KAAMH,EAAOb,EAAKgB,KAClBC,QAASjB,EAAKiB,UAEZjB,EAAKkB,SAASC,QAChBR,EAAUX,EAAKkB,SAAUlB,EAAKgB,QAwBpCL,CAAUX,EAAKkB,UAEb,2BAAOpD,UAAU,eACf,kBAACsD,EAAA,EAAD,CAAMC,GAAIzC,QAAQxB,IAChB,kBAACkE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,OACE,kBAACC,EAAA,EAAD,CAAQC,aAAW,SAAS5D,UAAWyC,GACpB,IAAhBP,EAAKQ,OAAe,kBAAC,IAAD,MAAY,kBAAC,IAAD,OAGrCmB,OACE,kBAACC,EAAA,EAAD,CAAYF,aAAW,WAAWG,QA/B9C,SAAyBjE,GACvByC,EAAYzC,EAAMkE,iBA+BN,kBAAC,IAAD,OAGJC,MAAO/B,EAAKgB,KACZgB,UAAWvD,EAAWuB,EAAKtB,KAAM,kBACjCZ,UAAU,uBAEZ,kBAACmE,EAAA,EAAD,KACGxB,EAAeyB,IAAI,SAACC,EAA2BC,GAA5B,OAClB,yBAAKtE,UAAU,mBAAmBuE,IAAKD,GACrC,0BAAMtE,UAAU,kBAAkBqE,EAAUnB,MAC5C,0BAAMlD,UAAU,kBAAkBqE,EAAUlB,QAA5C,UAIN,kBAACqB,EAAA,EAAD,MACA,kBAACL,EAAA,EAAD,KACmB,IAAhBjC,EAAKQ,OACJ,yBAAK1C,UAAU,yBAAf,QAA6CkC,EAAKiB,QAAlD,MAEA,yBAAKnD,UAAU,uBAAuBkC,EAAKuC,UAKnD,kBAACC,EAAA,EAAD,CACExE,GAAG,YACHoC,SAAUA,EACVqC,aAAW,EACX/E,KAAM4C,EACN3C,QAAS+C,EACTgC,WAAY,CACVC,MAAO,CACLC,MAAO,OAIX,kBAACC,EAAA,EAAD,CAAUhB,QAvDhB,WACEnB,IACAT,EAAaD,KAqDT,WACA,kBAAC6C,EAAA,EAAD,CAAUhB,QA9DhB,WACE1B,EAAW,GACXO,IACAoC,WAAW,kBAAMxE,EAAY0B,IAAO,OA2DhC,a,2GCzDO+C,EA9CiC,SAAC,GAG1C,IAFLC,EAEI,EAFJA,cACAC,EACI,EADJA,cACI,EACsC/C,mBAAyB,IAD/D,mBACGgD,EADH,KACkBC,EADlB,gDAOJ,WAA4BnD,GAA5B,iBAAAoD,EAAA,qEACuBH,EAAcjD,GADrC,UAEiB,IAFjB,wEAGyBqD,cAHzB,iBAGUC,EAHV,EAGUA,OACEH,EAAiBG,GAJ7B,2CAPI,sBAaJ,OAXAC,oBAAU,WACRF,cAAaG,KAAK,SAACF,GACjBH,EAAiBG,EAAKA,SAEvB,IAQD,2BAAOxF,UAAU,iBACf,kBAAC2F,EAAA,EAAD,KACGP,EAAchB,IAAI,SAACwB,GAAD,OACjB,kBAACC,EAAA,EAAD,CAAUtB,IAAKqB,EAAU1F,IACvB,kBAAC4F,EAAA,EAAD,CACEC,QAASH,EAAUnF,UAAUyC,KAC7B8C,UAAWrF,EAAWiF,EAAUnF,UAAUG,QAE5C,kBAACkD,EAAA,EAAD,CACEmC,KAAK,MACLrC,aAAW,OACXG,QAAS,kBAAMmB,EAAcU,KAE7B,kBAAC,IAAD,OAEF,kBAAC9B,EAAA,EAAD,CACEmC,KAAK,MACLrC,aAAW,SACXG,QAAS,kBAhCjB,2CAgCuBmC,CAAaN,KAE5B,kBAAC,IAAD,a,qPCuFCzF,MAAQgG,YApHgB,SAAC,GAIjC,IAHL9F,EAGI,EAHJA,YACAG,EAEI,EAFJA,YACAF,EACI,EADJA,QACI,EACwB8B,oBAAkB,GAD1C,mBACGgE,EADH,KACWC,EADX,OAEkCjE,mBAAsB,CAC1DjD,KAAM,UACNG,SAAS,EACTD,QAAS,KALP,mBAEGiH,EAFH,KAEgBC,EAFhB,KAaJ,SAASC,EAAT,GAA4E,IAArDrH,EAAoD,EAApDA,KAAME,EAA8C,EAA9CA,QAC3BkH,EAAe,CACbpH,OACAE,UACAC,SAAS,IASb,SAAS6C,EAAaD,GACpB,IAAMuE,EAAWC,IAAYC,gBAAgBzE,EAAK0E,KAC5CC,EAAe,CACnBpG,UAAWyB,EACXuE,SAAUA,EACVtH,KAAMsH,EAAStH,MAEjB2H,YAAQD,GACLnB,KAAK,WACJc,EAAY,CACVrH,KAAM,UACNE,QAAS,yBAGZ0H,MAAM,SAACC,GACNR,EAAY,CACVrH,KAAM,OACNE,QAAS4H,OAAOD,OA3CpB,2CAiEJ,WAA6BE,GAA7B,iBAAA5B,EAAA,wDACO4B,EAAKhH,GADZ,yCACuB,GADvB,uBAE0BiH,YAAWD,EAAKhH,IAF1C,qBAEUuE,EAFV,EAEUA,OAFV,uBAII+B,EAAY,CACVrH,KAAM,QACNE,QAAUoF,EAAqBpF,UANrC,kBAQW,GARX,gCAUS,GAVT,2CAjEI,sBA8EJ,OACE,kBAAC,WAAD,KACE,2BAAOW,UAAU,eACf,yBAAKA,UAAU,oBACb,kBAACoH,EAAA,EAAD,CAAKC,QAAQ,WAAWzD,aAAW,OAAOG,QAxElD,WACEsC,GAAU,KAwEF,kBAAC,IAAD,MADF,mBAKDhG,EAAY+D,IAAI,SAAC3D,GAAD,OACf,kBAAC6G,EAAD,CACE/C,IAAK9D,EAAUP,GACfgC,KAAMzB,EACND,YAAaA,EACb2B,aAAcA,OAIpB,kBAACoF,EAAA,EAAD,CAAQC,OAAO,QAAQ5H,KAAMwG,EAAQvG,QAzFzC,WACEwG,GAAU,KAyFN,kBAAC,EAAD,CACEnB,cAlDR,SAAuBgC,GACH,IAAdA,EAAK/H,KACPmB,EAAQ2C,KAAK,CACX7C,MAAO8G,EAAKT,SACZgB,SAAU,UACVC,OAAQ,UAAYzG,KAAK0G,QAEJ,IAAdT,EAAK/H,MACdmB,EAAQ2C,KAAK,CACX7C,MAAO8G,EAAKT,SACZgB,SAAU,UACVC,OAAQ,UAAYzG,KAAK0G,QAG7BtB,GAAU,IAqCJlB,cAnGJ,+CAsGA,kBAAC/F,EAAA,EAAD,CACEE,QAASgH,EAAYhH,QACrBH,KAAMmH,EAAYnH,KAClBI,OArFN,WACEgH,E,qVAAe,CAAD,GACTD,EADS,CAEZhH,SAAS,MAmFPD,QAASiH,EAAYjH,e,sJC3HRuI,G,oEAKnB,WAAYC,GAA4B,IAAD,8BACrC,4CAAMA,KALRC,cAIuC,IAHvCF,YAGuC,IAFvCG,SAEuC,IADvCC,qBACuC,EAErC,EAAKF,SAAW7G,KAAK0G,MAAQ,GAC7B,EAAKC,OAAS,KACd,EAAKG,IAAM,KAJ0B,E,iFAOrC,IAAME,EAAWC,SAASC,eAAeC,KAAKN,UAC9CM,KAAKR,OAASS,IAAWC,aAAaL,EAAiC,CACrEM,aAAa,EACbC,iBAAiB,EACjBC,eAAe,EACfC,KAAM,kBACNC,gBAAgB,EAChBC,cAAc,EACdC,MAAO,YAETT,KAAKL,IAAMK,KAAKR,OAAOkB,SACvBV,KAAKW,mBACLX,KAAKY,qB,yCAGDZ,KAAKP,MAAMoB,OACZb,KAAKL,IAAuBmB,SAASd,KAAKP,MAAMoB,S,yCAGzB,IAAD,OACxBb,KAAKR,OAAyCuB,GAC7C,SACA,SAACC,EAA2BC,GAE1B,GAAsB,WAAlBA,EAAOC,OAAqB,CAI9B,GAHAC,aAAa,EAAKvB,kBA0B5B,SAAqBwB,GACnB,QAAKA,IACQ,KAATA,IACS,MAATA,IACS,MAATA,IACS,OAATA,IACS,MAATA,IACS,OAATA,IACS,MAATA,GACS,OAATA,SAhCSC,CAJyB,YAEfJ,EAAOG,KAFQ,OAK5B,OAEF,EAAKxB,gBAAkBhD,WAAW,WAChCoE,EAAOM,YAAY,iBAClB,U,uCAMT,OAAKtB,KAAKL,IACHK,KAAKL,IAAI4B,WADM,K,+BAItB,OACE,yBAAK3J,UAAU,kBACb,8BAAUE,GAAIkI,KAAKN,SAAU5E,KAAK,OAAO2B,MAAO,CAAE+E,OAAQ,e,GAzD9BC,IAAMC,a,mMC2B1C,IAAMC,EAAY,SAACC,GAUjB,OATaC,sBAAsB,MAAO,CACxCA,qBACED,EAAMpD,IACNqD,iBAAiBA,aAAa,WAAY,CACxCA,gBAAgBD,EAAME,KACtBD,gBAAgBD,EAAMG,WAOxBC,EAAU,SAACJ,GASf,OARaC,sBACXA,iBAAiBA,aAAa,SAAU,CACtCA,gBAAgBD,EAAME,KACtBD,gBAAgBD,EAAMG,KACtBH,EAAMpD,QAONyD,EAAqB,SACzBC,EACAC,GAEI,IADJC,EACG,uDADmB,GAEhBC,EAAiBR,iBAAiB,CACtCK,EACAL,eAAeA,iBAAiBO,GAAO,KAAMP,iBAAiB,CAACM,OAEjE,OAAOE,GCpDT,IAAIC,EAAO,EAMX,SAASC,EACPC,GAEA,IAAMT,IANGO,EAAO,GAOVG,EAA2B,GAE3BC,EAAMC,gBAAMH,EAAM,CAAEI,WAAY,WA+BtC,OA9BAC,IAASH,EAAK,CACZI,SADY,uHACHC,GACP,IDtBN,SAAyBA,GACvB,IAAMC,EAAYD,EAAKE,IAAI,QAAQD,KACnC,QAAIA,EAAKZ,OACCY,EAAKZ,KAAKnH,OCmBZiI,CAAgBH,GAApB,CACA,IAAMvE,EAAMuE,EAAKI,MAAMC,sBAAsB,QACvCtB,EAAMiB,EAAKI,MAAME,YAAY,QAC7BvI,EDjBZ,SAA0BiI,GACxB,IAAMO,EAAaP,EAAKQ,WAAWP,KAanC,MAVwB,yBAApBM,EAAWvM,KACEuM,EAAWE,KAAKC,SAAS3I,KACX,uBAApBwI,EAAWvM,KACLuM,EAAWxL,GAAGgD,KACA,mBAApBwI,EAAWvM,KACLuM,EAAWI,OAAO5I,KAAO,aAEzBiI,EAAKC,KAAKlL,GAAKiL,EAAKC,KAAKlL,GAAGgD,KAAO,YCMnC6I,CAAiBZ,GACxBa,EAAmC,CAAE7B,MAAKvD,MAAKsD,MAAKiB,QAE1DN,EAAYX,GAAOhH,EDkCzB,YAA8E,IAAnDiH,EAAkD,EAAlDA,IAAKD,EAA6C,EAA7CA,IAAKtD,EAAwC,EAAxCA,IAAKuE,EAAmC,EAAnCA,KAClCc,EAAiBlC,EAAU,CAAEI,MAAKD,MAAKtD,QACvCsF,EAAe9B,EAAQ,CAAED,MAAKD,MAAKtD,QACnCuF,EAAmB9B,EACvB4B,EACAC,EACCf,EAAKC,KAAKZ,KAAaA,MAE1BW,EAAKE,IAAI,QAAQe,YAAYD,GCxCzBE,CAAgBL,QAIpBf,IAASH,EAAK,CACZwB,MADY,SACNnB,GACJ,GAAIA,EAAKoB,YAAa,CACpB,IAAM3F,EAAMuE,EAAKI,MAAMC,sBAAsB,QACvCgB,EAAsC,CAC1CrC,MACAvD,MACAsD,IAAKC,EACLgB,QAEFN,EAAYV,GAAO,OD6B3B,YAA8E,IAAlDA,EAAiD,EAAjDA,IAAKD,EAA4C,EAA5CA,IAAKtD,EAAuC,EAAvCA,IAAKuE,EAAkC,EAAlCA,KACnCc,EAAiBlC,EAAU,CAAEI,MAAKD,MAAKtD,QACvCsF,EAAe9B,EAAQ,CAAED,MAAKD,MAAKtD,QACxCuE,EAAasB,iBAAiB,OAAQR,GACtCd,EAAauB,cAAc,OAAQR,GChC9BS,CAAiBH,GACjBrB,EAAKyB,WAIJ,CACL1M,GAAIiK,EACJW,MACAD,eAeWgC,IC/EXC,EAGAC,ED4EWF,EAXf,SACEG,GACwE,IAAD,EACtCrC,EAAYqC,GAArClC,EAD+D,EAC/DA,IAAK5K,EAD0D,EAC1DA,GAAI2K,EADsD,EACtDA,YACXoC,EAASC,+BAAqBpC,GACpC,OAAImC,EACK,CAAE/M,KAAI0K,KAAMqC,EAAOrC,KAAMuC,QAAStC,GAEpC,CAAE3K,KAAI0K,KAAM,GAAIuC,QAAStC,IC3E9BuC,EAAoD,GACpDC,GAAyB,EAGzBzG,EAAM,EAgBV,SAAS0D,EAAMgD,EAAc5C,GAC3B,GAAIoC,IAAmBpC,EAAM,MAAO,KAEpC,IAAM6C,IAhBG3G,EAAM,GAkBTe,EAAM6F,OAAOC,YAAY9F,MAU/B,OATA+F,QAAQC,IAAIhG,GACZyF,EAAeG,GAAQ,CACrBD,KAAMA,EACN5C,KAAMA,EACNJ,MAAO3C,EACP4C,IAAK,EACLqD,MAAOP,GAGFE,EAGT,SAAShD,EAAI+C,EAAc5C,EAAc6C,GACvC,GAAIT,IAAmBpC,EAAvB,CAEA,IAAM/C,EAAM6F,OAAOC,YAAY9F,MAE/ByF,EAAeG,GAAMhD,IAAM5C,EAE3B0F,GAAiBN,EAAgBc,MAGnC,SAASA,IACPR,GAAgB,EAEhB,IAAMS,EAiBR,SAA6BpD,GAC3B,IAAMoD,EAA+B,CACnC5N,GAAIwK,EACJqD,KAAM,EACNjL,MAAO,GACP8K,MAAO,IAuBT,MAAO,CACLI,QArBF,SAAiBD,EAAcT,GACzBA,IAAS5C,EACXoD,EAAcC,KAAOA,EAErBD,EAAchL,MAAMwK,GAAQS,GAkB9BE,aAdF,SAAsBF,EAAcT,GAC9BA,IAAS5C,EACXoD,EAAcC,KAAOA,EAErBD,EAAcF,MAAMN,GAAQS,GAW9BF,QAPF,WACE,OAAOC,IA1CkBI,CAAoBpB,GAc/C,OAZAqB,OAAOC,KAAKhB,GAAgBpK,QAAQ,SAACuK,GAAkB,IAAD,EAChBH,EAAeG,GAA3ChD,EAD4C,EAC5CA,IAAKD,EADuC,EACvCA,MAAOgD,EADgC,EAChCA,KAAMM,EAD0B,EAC1BA,MAE1B,GAAIrD,GAAOD,EAAO,CAChB,IAAMyD,EAAOxD,EAAMD,EAEnBsD,EACIE,EAAcG,aAAaF,EAAMT,GACjCQ,EAAcE,QAAQD,EAAMT,MAI7BQ,EAAcD,UC3DvB,IAAMQ,EAAgB,uHAaDC,E,YAMnB,WAAYzG,GAAa,IAAD,8BACtB,4CAAMA,KANR0G,aAKwB,IAJxBnO,WAIwB,EAEtB,EAAKA,MAAQ,CACXoO,OAAO,EACPH,iBAAkBA,GAEpB,EAAKE,QAAU1E,IAAM4E,YANC,E,iFAStB,IAAMC,EAAU7B,EAAiBzE,KAAKmG,QAAQI,QAAQC,kBACtD,GAAIF,EAAQ9D,KAAM,CAChB,IAAMiE,EAAM,IAAI3D,SAAS,UAAW,QAASwD,EAAQ9D,OD1B3D,SAAoBF,EAAcoE,GAChChC,EAAiBpC,EAEjB0C,EAAiB,GAEjBC,GAAgB,EAEhBN,EAAkB+B,ECoBdC,CAAWL,EAAQxO,GAAI,SAACsF,GAAD,OAAUkI,QAAQC,IAAInI,KAC7C,IACEqJ,EAAIvE,EAAOC,GACX,MAAOyE,IAIMnB,O,+BAGT,IAAD,OACP,OACE,6BAAS7N,UAAU,aACjB,iCACE,yBAAKA,UAAU,mBAAf,oBACA,kBAACiP,EAAA,EAAD,CACE5H,QAAQ,YACR6H,MAAM,UACNnL,QAAS,kBAAM,EAAKoL,sBAHtB,WAME,kBAAC,IAAD,QAGJ,iCACE,kBAACC,EAAA,EAAD,CAAY/H,QAAQ,YAAYgI,cAAY,GAA5C,oBAGA,6BACE,kBAACzH,EAAA,EAAD,CAAQ0H,IAAKlH,KAAKmG,QAAStF,MAAOb,KAAKhI,MAAMiO,0B,GA/CnBxE,IAAMC,WCV7ByF,UATQ,WACrB,OACE,yBAAKvP,UAAU,YACb,kBAAC,EAAD,MACA,kBAACwP,EAAA,EAAD","file":"static/js/10.f5ce6039.chunk.js","sourcesContent":["import React, { SyntheticEvent } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport Error from \"@material-ui/icons/Error\";\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\nimport Info from \"@material-ui/icons/Info\";\n\ninterface MessageProps {\n  visible: boolean;\n  message: string;\n  type?: string;\n  closed: () => void;\n}\n\nconst SnackBarIcon: React.FC<{ type: string }> = ({ type }) => {\n  if (type === \"success\") {\n    return <CheckCircle />;\n  }\n  if (type === \"warn\") {\n    return <Warning />;\n  }\n  if (type === \"error\") {\n    return <Error />;\n  }\n  return <Info />;\n};\n\nconst Message: React.FC<MessageProps> = ({\n  message,\n  visible,\n  closed,\n  type = \"info\",\n}) => {\n  const handleClose = (event: SyntheticEvent | MouseEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    closed();\n  };\n  return (\n    <span>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        autoHideDuration={3000}\n        open={visible}\n        onClose={handleClose}\n        className={\"message-box-\" + type}\n      >\n        <SnackbarContent\n          className=\"message-content\"\n          aria-describedby=\"client-snackbar\"\n          message={\n            <span id=\"client-snackbar\" className=\"message-content-txt\">\n              <SnackBarIcon type={type} />\n              {message}\n            </span>\n          }\n        />\n      </Snackbar>\n    </span>\n  );\n};\n\nexport default Message;\n","import { connect } from \"react-redux\";\nimport { deleteHistoryTimerData, TimerDataInfo } from \"@/actions/history\";\n\nexport default connect(\n  (state: any) => ({ historyData: state.history }),\n  (dispatch: any) => ({\n    deleteTimer(timerInfo: TimerDataInfo) {\n      dispatch(deleteHistoryTimerData(timerInfo));\n    }\n  })\n);\n","export function dateFormat(date?: Date | number, format?: string): string {\n  let token = /d{1,4}|m{1,4}|yy(?:yy)?|H{1,2}|M{1,2}|S{1,2}/g;\n  if (Boolean(date)) {\n    date = date instanceof Date ? date : new Date(date as number);\n    let flags: { [x: string]: string } = {\n      yyyy: date.getFullYear().toString(),\n      mm: (\"0\" + (date.getMonth() + 1)).slice(-2),\n      dd: (\"0\" + date.getDate()).slice(-2),\n      HH: (\"0\" + date.getHours()).slice(-2),\n      MM: (\"0\" + date.getMinutes()).slice(-2),\n      SS: (\"0\" + date.getSeconds()).slice(-2)\n    };\n    if (!format) {\n      // 默认显示格式\n      format = \"yyyy-mm-dd HH:MM:SS\";\n    }\n    format = format.replace(token, function(match: string) {\n      if (match in flags) {\n        return flags[match];\n      }\n      return \"\";\n    });\n    return format;\n  }\n  return \"\";\n}\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Grow from \"@material-ui/core/Grow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport { TimerDataInfo } from \"@/actions/history\";\nimport { dateFormat } from \"@/utils/date\";\n\ninterface ChildTimerInfo {\n  name: string;\n  useTime: number;\n}\n\ninterface FcProps {\n  info: TimerDataInfo;\n  collectTimer: (info: TimerDataInfo) => void;\n  deleteTimer: (timerInfo: TimerDataInfo) => void;\n}\n\nconst MyCard: React.FC<FcProps> = ({ info, deleteTimer, collectTimer }) => {\n  const [visible, setVisible] = useState<number>(1);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const showMenu = Boolean(anchorEl);\n  const resultClassName = info.status === 2 ? \"result-error\" : \"result-success\";\n\n  const timerChildList: ChildTimerInfo[] = [];\n\n  function deepChild(child: TimerDataInfo[], root: string = \"\") {\n    child.forEach((info: TimerDataInfo) => {\n      timerChildList.push({\n        name: root + info.name,\n        useTime: info.useTime,\n      });\n      if (info.children.length) {\n        deepChild(info.children, info.name);\n      }\n    });\n  }\n\n  function openSettingMenu(event: React.MouseEvent<HTMLElement>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function deleteCurrInfo() {\n    setVisible(0);\n    handleClose();\n    setTimeout(() => deleteTimer(info), 300);\n  }\n\n  function saveCurrentInfo() {\n    handleClose();\n    collectTimer(info);\n  }\n\n  deepChild(info.children);\n  return (\n    <aside className=\"result-card\">\n      <Grow in={Boolean(visible)}>\n        <Card>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"recipe\" className={resultClassName}>\n                {info.status === 1 ? <Check /> : <Clear />}\n              </Avatar>\n            }\n            action={\n              <IconButton aria-label=\"settings\" onClick={openSettingMenu}>\n                <MoreVertIcon />\n              </IconButton>\n            }\n            title={info.name}\n            subheader={dateFormat(info.date, \"mm-dd HH:MM:SS\")}\n            className=\"result-card-header\"\n          />\n          <CardContent>\n            {timerChildList.map((childInfo: ChildTimerInfo, i: number) => (\n              <div className=\"result-card-item\" key={i}>\n                <span className=\"card-item-root\">{childInfo.name}</span>\n                <span className=\"card-item-time\">{childInfo.useTime}ms</span>\n              </div>\n            ))}\n          </CardContent>\n          <Divider />\n          <CardContent>\n            {info.status === 1 ? (\n              <div className=\"result-active-success\">use: {info.useTime}ms</div>\n            ) : (\n              <div className=\"result-active-error\">{info.error}</div>\n            )}\n          </CardContent>\n        </Card>\n      </Grow>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={showMenu}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            width: 120,\n          },\n        }}\n      >\n        <MenuItem onClick={saveCurrentInfo}>Collect</MenuItem>\n        <MenuItem onClick={deleteCurrInfo}>Delete</MenuItem>\n      </Menu>\n    </aside>\n  );\n};\n\nexport default MyCard;\n","import React, { useEffect, useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { DatabaseItem } from \"@/utils/types\";\nimport { getAllData } from \"@/utils/indexDB\";\nimport { dateFormat } from \"@/utils/date\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport PlayCircleFilled from \"@material-ui/icons/PlayCircleFilled\";\n\ninterface CollectorProps {\n  replayCollect: (item: DatabaseItem) => void;\n  deleteCollect: (item: DatabaseItem) => Promise<1 | 0>;\n}\n\nconst CollectorList: React.FC<CollectorProps> = ({\n  replayCollect,\n  deleteCollect,\n}) => {\n  const [collectorList, setCollectorList] = useState<DatabaseItem[]>([]);\n  useEffect(() => {\n    getAllData().then((data) => {\n      setCollectorList(data.data);\n    });\n  }, []);\n  async function handleDelete(info: DatabaseItem) {\n    const result = await deleteCollect(info);\n    if (result !== 1) return;\n    const { data } = await getAllData();\n    if (data) setCollectorList(data);\n  }\n  return (\n    <aside className=\"collector-box\">\n      <List>\n        {collectorList.map((collector: DatabaseItem) => (\n          <ListItem key={collector.id}>\n            <ListItemText\n              primary={collector.timerInfo.name}\n              secondary={dateFormat(collector.timerInfo.date)}\n            />\n            <IconButton\n              edge=\"end\"\n              aria-label=\"play\"\n              onClick={() => replayCollect(collector)}\n            >\n              <PlayCircleFilled />\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"delete\"\n              onClick={() => handleDelete(collector)}\n            >\n              <Delete />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n    </aside>\n  );\n};\n\nexport default CollectorList;\n","import React, { Fragment, useState } from \"react\";\nimport connect from \"../container/history\";\nimport { TimerDataInfo } from \"../actions/history\";\nimport { DatabaseItem } from \"@/utils/types\";\nimport ResultCard from \"./ResultCard\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport CollectorList from \"./CollectorList\";\nimport Message from \"./Message\";\nimport interpreter from \"@/utils/baseStatement\";\nimport { addData, deleteData } from \"@/utils/indexDB\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\ninterface FcProps extends RouteComponentProps {\n  historyData: TimerDataInfo[];\n  deleteTimer: (timerInfo: TimerDataInfo) => void;\n}\n\ninterface MessageInfo {\n  type: string;\n  message: string;\n  visible: boolean;\n}\n\nconst HistoryView: React.FC<FcProps> = ({\n  historyData,\n  deleteTimer,\n  history\n}) => {\n  const [drawer, setDrawer] = useState<boolean>(false);\n  const [messageInfo, setMessageInfo] = useState<MessageInfo>({\n    type: \"success\",\n    visible: false,\n    message: \"\"\n  });\n  function handleCloseDrawer() {\n    setDrawer(false);\n  }\n  function handleOpenDrawer() {\n    setDrawer(true);\n  }\n  function showMessage({ type, message }: { type: string; message: string }) {\n    setMessageInfo({\n      type,\n      message,\n      visible: true\n    });\n  }\n  function closeMessage() {\n    setMessageInfo({\n      ...messageInfo,\n      visible: false\n    });\n  }\n  function collectTimer(info: TimerDataInfo) {\n    const codeInfo = interpreter.getDatabaseInfo(info.uid);\n    const databaseItem = {\n      timerInfo: info,\n      codeInfo: codeInfo,\n      type: codeInfo.type\n    };\n    addData(databaseItem)\n      .then(() => {\n        showMessage({\n          type: \"success\",\n          message: \"Saved timer record\"\n        });\n      })\n      .catch((err: any) => {\n        showMessage({\n          type: \"warn\",\n          message: String(err)\n        });\n      });\n  }\n\n  function replayCollect(item: DatabaseItem) {\n    if (item.type === 1) {\n      history.push({\n        state: item.codeInfo,\n        pathname: \"/custom\",\n        search: \"?type=1\" + Date.now()\n      });\n    } else if (item.type === 2) {\n      history.push({\n        state: item.codeInfo,\n        pathname: \"/custom\",\n        search: \"?type=2\" + Date.now()\n      });\n    }\n    setDrawer(false);\n  }\n\n  async function deleteCollect(item: DatabaseItem) {\n    if (!item.id) return 0;\n    const { error } = await deleteData(item.id);\n    if (error) {\n      showMessage({\n        type: \"error\",\n        message: (error as ErrorEvent).message\n      });\n      return 0;\n    }\n    return 1;\n  }\n\n  return (\n    <Fragment>\n      <aside className=\"history-box\">\n        <div className=\"collector-button\">\n          <Fab variant=\"extended\" aria-label=\"open\" onClick={handleOpenDrawer}>\n            <KeyboardArrowLeft />\n            Open Collector\n          </Fab>\n        </div>\n        {historyData.map((timerInfo: TimerDataInfo) => (\n          <ResultCard\n            key={timerInfo.id}\n            info={timerInfo}\n            deleteTimer={deleteTimer}\n            collectTimer={collectTimer}\n          />\n        ))}\n      </aside>\n      <Drawer anchor=\"right\" open={drawer} onClose={handleCloseDrawer}>\n        <CollectorList\n          replayCollect={replayCollect}\n          deleteCollect={deleteCollect}\n        />\n      </Drawer>\n      <Message\n        visible={messageInfo.visible}\n        type={messageInfo.type}\n        closed={closeMessage}\n        message={messageInfo.message}\n      />\n    </Fragment>\n  );\n};\n\nexport default connect(withRouter(HistoryView));\n","import React from \"react\";\nimport codemirror from \"codemirror\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/dracula.css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"codemirror/addon/hint/show-hint.js\";\nimport \"codemirror/addon/edit/matchbrackets\";\nimport \"codemirror/addon/hint/javascript-hint\";\nimport \"codemirror/addon/selection/active-line.js\";\n\nexport default class Editor extends React.Component<{ value?: string }> {\n  editorId: string;\n  Editor: codemirror.EditorFromTextArea | null;\n  Doc: codemirror.Doc | null;\n  showHintTimeout: any;\n  constructor(props: { value?: string }) {\n    super(props);\n    this.editorId = Date.now() + \"\";\n    this.Editor = null;\n    this.Doc = null;\n  }\n  componentDidMount() {\n    const textarea = document.getElementById(this.editorId);\n    this.Editor = codemirror.fromTextArea(textarea as HTMLTextAreaElement, {\n      lineNumbers: true,\n      styleActiveLine: true,\n      matchBrackets: true,\n      mode: \"text/javascript\",\n      indentWithTabs: true,\n      lineWrapping: true,\n      theme: \"dracula\"\n    });\n    this.Doc = this.Editor.getDoc();\n    this._bindEditorEvent();\n    this._initEditorValue();\n  }\n  private _initEditorValue() {\n    if (this.props.value) {\n      (this.Doc as codemirror.Doc).setValue(this.props.value);\n    }\n  }\n  private _bindEditorEvent() {\n    (this.Editor as codemirror.EditorFromTextArea).on(\n      \"change\",\n      (editor: CodeMirror.Editor, change) => {\n        //获取用户当前的编辑器中的编写的代码\n        if (change.origin === \"+input\") {\n          clearTimeout(this.showHintTimeout);\n          const [text] = change.text;\n\n          if (!checkChange(text)) {\n            return;\n          }\n          this.showHintTimeout = setTimeout(function() {\n            editor.execCommand(\"autocomplete\");\n          }, 300);\n        }\n      }\n    );\n  }\n  public getEditorValue(): string {\n    if (!this.Doc) return \"\";\n    return this.Doc.getValue();\n  }\n  render() {\n    return (\n      <div className=\"editor-content\">\n        <textarea id={this.editorId} name=\"code\" style={{ border: \"none\" }} />\n      </div>\n    );\n  }\n}\n\nfunction checkChange(text: string | undefined) {\n  if (!text) return false;\n  if (text === \"\") return false;\n  if (text === \" \") return false;\n  if (text === \"=\") return false;\n  if (text === \"= \") return false;\n  if (text === \";\") return false;\n  if (text === \"; \") return false;\n  if (text === \",\") return false;\n  if (text === \", \") return false;\n  return true;\n}\n","import { NodePath } from \"@babel/traverse\";\nimport * as t from \"@babel/types\";\n\ninterface QueryInfo {\n  gid: string;\n  tid: string;\n  uid: t.Identifier;\n}\n\ninterface TransformInfo<T> extends QueryInfo {\n  path: NodePath<T>;\n}\n\nfunction isEmptyFunction(path: NodePath<t.Function>): boolean {\n  const node: any = path.get(\"body\").node;\n  if (node.body) {\n    return !node.body.length;\n  }\n  return false;\n}\n\nfunction findFunctionName(path: any): string {\n  const parentNode = path.parentPath.node;\n  let functionName = \"\";\n\n  if (parentNode.type === \"AssignmentExpression\") {\n    functionName = parentNode.left.property.name;\n  } else if (parentNode.type === \"VariableDeclarator\") {\n    functionName = parentNode.id.name;\n  } else if (parentNode.type === \"CallExpression\") {\n    functionName = parentNode.callee.name + \"<CallBack>\";\n  } else {\n    functionName = path.node.id ? path.node.id.name : \"anonymous\";\n  }\n\n  return functionName;\n}\n\nconst startTime = (query: QueryInfo) => {\n  var result = t.variableDeclaration(\"var\", [\n    t.variableDeclarator(\n      query.uid,\n      t.callExpression(t.identifier(\"__start\"), [\n        t.stringLiteral(query.tid),\n        t.stringLiteral(query.gid),\n      ])\n    ),\n  ]);\n  return result;\n};\n\nconst endTime = (query: QueryInfo) => {\n  var result = t.expressionStatement(\n    t.callExpression(t.identifier(\"__end\"), [\n      t.stringLiteral(query.tid),\n      t.stringLiteral(query.gid),\n      query.uid,\n    ])\n  );\n\n  return result;\n};\n\nconst createNewStatement = (\n  start: t.Statement,\n  end: t.Statement,\n  body: t.Statement[] = []\n) => {\n  const BlockStatement = t.blockStatement([\n    start,\n    t.tryStatement(t.blockStatement(body), null, t.blockStatement([end])),\n  ]);\n  return BlockStatement;\n};\n\nfunction replaceFunction({ gid, tid, uid, path }: TransformInfo<t.Function>) {\n  const startStatement = startTime({ gid, tid, uid });\n  const endStatement = endTime({ gid, tid, uid });\n  const newStatementBody = createNewStatement(\n    startStatement,\n    endStatement,\n    (path.node.body as any).body\n  );\n  path.get(\"body\").replaceWith(newStatementBody);\n}\n\nfunction shiftProgramBody({ gid, tid, uid, path }: TransformInfo<t.Program>) {\n  const startStatement = startTime({ gid, tid, uid });\n  const endStatement = endTime({ gid, tid, uid });\n  (path as any).unshiftContainer(\"body\", startStatement);\n  (path as any).pushContainer(\"body\", endStatement);\n}\n\nexport { isEmptyFunction, findFunctionName, replaceFunction, shiftProgramBody };\n","import { transformFromAstSync } from \"@babel/core\";\nimport { parse } from \"@babel/parser\";\nimport traverse, { NodePath } from \"@babel/traverse\";\nimport * as t from \"@babel/types\";\nimport {\n  isEmptyFunction,\n  findFunctionName,\n  replaceFunction,\n  shiftProgramBody,\n} from \"./transformCommon\";\n\ninterface ScopeInfo<T> {\n  gid: string;\n  tid: string;\n  uid: t.Identifier;\n  path: NodePath<T>;\n}\n\ntype FuncNameMap = { [x: string]: string };\n\nlet _gid = 0;\n\nfunction getGid() {\n  return ++_gid + \"\";\n}\n\nfunction _parseToAst(\n  code: string\n): { id: string; ast: t.File; funcNameMap: FuncNameMap } {\n  const gid = getGid();\n  const funcNameMap: FuncNameMap = {};\n\n  const ast = parse(code, { sourceType: \"module\" });\n  traverse(ast, {\n    Function(path) {\n      if (isEmptyFunction(path)) return;\n      const uid = path.scope.generateUidIdentifier(\"_uid\");\n      const tid = path.scope.generateUid(\"_tid\");\n      const name = findFunctionName(path);\n      const scopeInfo: ScopeInfo<t.Function> = { gid, uid, tid, path };\n\n      funcNameMap[tid] = name;\n\n      replaceFunction(scopeInfo);\n    },\n  });\n\n  traverse(ast, {\n    enter(path) {\n      if (path.isProgram()) {\n        const uid = path.scope.generateUidIdentifier(\"_uid\");\n        const rootScopeInfo: ScopeInfo<t.Program> = {\n          gid,\n          uid,\n          tid: gid,\n          path,\n        };\n        funcNameMap[gid] = \"root\";\n        shiftProgramBody(rootScopeInfo);\n        path.skip();\n      }\n    },\n  });\n  return {\n    id: gid,\n    ast,\n    funcNameMap,\n  };\n}\n\nfunction getTransformCode(\n  _code: string\n): { id: string; code: string | null | undefined; nameMap: FuncNameMap } {\n  const { ast, id, funcNameMap } = _parseToAst(_code);\n  const result = transformFromAstSync(ast);\n  if (result) {\n    return { id, code: result.code, nameMap: funcNameMap };\n  }\n  return { id, code: \"\", nameMap: funcNameMap };\n}\n\nexport default getTransformCode;\n","import { ProcessTimerInfo, TransformData } from \"./types\";\n\nlet currentTimerId: string;\nlet stampTimerPool: { [x: string]: ProcessTimerInfo } = {};\nlet watchTimerEnd: boolean = false;\nlet watcherCallback: (x: TransformData) => void; // 监听收集数据后异步函数的回调函数\n\nlet uid = 0;\n\nfunction getUid() {\n  return ++uid + \"\";\n}\n\nfunction beginTimer(_gid: string, callback: (x: TransformData) => void) {\n  currentTimerId = _gid;\n\n  stampTimerPool = {};\n\n  watchTimerEnd = false;\n\n  watcherCallback = callback;\n}\n\nfunction start(_tid: string, _gid: string): string {\n  if (currentTimerId !== _gid) return \"-1\";\n\n  const _uid = getUid();\n\n  const now = window.performance.now();\n  console.log(now);\n  stampTimerPool[_uid] = {\n    _tid: _tid,\n    _gid: _gid,\n    start: now,\n    end: 0,\n    async: watchTimerEnd,\n  };\n\n  return _uid;\n}\n\nfunction end(_tid: string, _gid: string, _uid: string) {\n  if (currentTimerId !== _gid) return;\n\n  const now = window.performance.now();\n\n  stampTimerPool[_uid].end = now;\n\n  watchTimerEnd && watcherCallback(getData());\n}\n\nfunction getData(): TransformData {\n  watchTimerEnd = true; // 监听收集数据后异步函数的回调\n\n  const transformData: any = createTransformData(currentTimerId);\n\n  Object.keys(stampTimerPool).forEach((_uid: string) => {\n    const { end, start, _tid, async } = stampTimerPool[_uid];\n\n    if (end >= start) {\n      const time = end - start;\n\n      async\n        ? transformData.addAsyncTime(time, _tid)\n        : transformData.addTime(time, _tid);\n    }\n  });\n\n  return transformData.getData();\n}\n\nfunction createTransformData(_gid: string) {\n  const transformData: TransformData = {\n    id: _gid,\n    time: 0,\n    child: {},\n    async: {},\n  };\n\n  function addTime(time: number, _tid: string) {\n    if (_tid === _gid) {\n      transformData.time = time;\n    } else {\n      transformData.child[_tid] = time;\n    }\n  }\n\n  function addAsyncTime(time: number, _tid: string) {\n    if (_tid === _gid) {\n      transformData.time = time;\n    } else {\n      transformData.async[_tid] = time;\n    }\n  }\n\n  function getData() {\n    return transformData;\n  }\n\n  return {\n    addTime,\n    addAsyncTime,\n    getData,\n  };\n}\n\nexport { beginTimer, start, end, getData };\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Replay from \"@material-ui/icons/Replay\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Editor from \"@/components/Editor\";\n\nimport getTransformCode from \"@/utils/codeTransform\";\nimport { beginTimer, start, end, getData } from \"@/utils/codeTimer\";\n\nconst initCodeRefValue = `\nlet i = 0;\nfunction jacs() {\n  i++\n}\nconst testFun = (d) => {\n  return d + 1\n}\n\nconst j = function(){}\n\n`;\n\nexport default class CodeTest extends React.Component {\n  codeRef: any;\n  state: {\n    toES5: boolean;\n    initCodeRefValue: string;\n  };\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      toES5: false,\n      initCodeRefValue: initCodeRefValue,\n    };\n    this.codeRef = React.createRef();\n  }\n  runCurrentApiTest() {\n    const results = getTransformCode(this.codeRef.current.getEditorValue());\n    if (results.code) {\n      const fun = new Function(\"__start\", \"__end\", results.code);\n      beginTimer(results.id, (data) => console.log(data));\n      try {\n        fun(start, end);\n      } catch (e) {\n        //console.log(e);\n      }\n\n      const result = getData();\n    }\n  }\n  render() {\n    return (\n      <article className=\"code-main\">\n        <section>\n          <div className=\"component-title\">Edit Custom Code</div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.runCurrentApiTest()}\n          >\n            Run Test\n            <Replay />\n          </Button>\n        </section>\n        <section>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Code under test:\n          </Typography>\n          <div>\n            <Editor ref={this.codeRef} value={this.state.initCodeRefValue} />\n          </div>\n        </section>\n      </article>\n    );\n  }\n}\n","import React from \"react\";\nimport HistoryView from \"@/components/HistoryView\";\nimport Content from \"./Content\";\nconst Code: React.FC = () => {\n  return (\n    <div className=\"code-box\">\n      <Content />\n      <HistoryView />\n    </div>\n  );\n};\n\nexport default Code;\n"],"sourceRoot":""}