{"version":3,"sources":["components/Message.tsx","utils/codeInfoCache.ts","container/history.ts","utils/date.ts","components/ResultCard.tsx","components/CollectorList.tsx","components/HistoryView.tsx","components/Editor.tsx","utils/transformCommon.ts","utils/codeTransform.ts","utils/codeTimer.ts","container/code.ts","page/code/Content.tsx","page/code/App.tsx"],"names":["SnackBarIcon","type","Message","message","visible","closed","anchorOrigin","vertical","horizontal","autoHideDuration","open","onClose","event","reason","className","aria-describedby","id","CodeInfoCache","setCodeInfoCache","baseInfo","nameMap","getCodeInfoCache","getCodeInfoName","key","codeInfo","getNameMapCache","connect","state","historyData","history","dispatch","deleteTimer","timerInfo","deleteHistoryTimerData","setCurrCodeInfo","setCurrentCodeInfo","dateFormat","date","format","Boolean","flags","yyyy","Date","getFullYear","toString","mm","getMonth","slice","dd","getDate","HH","getHours","MM","getMinutes","SS","getSeconds","replace","match","MyCard","info","collectTimer","useState","setVisible","anchorEl","setAnchorEl","showMenu","resultClassName","status","handleClose","Grow","in","Card","CardHeader","avatar","Avatar","aria-label","action","IconButton","onClick","currentTarget","title","name","subheader","CardContent","children","map","childInfo","i","async","time","Divider","useTime","error","Menu","keepMounted","PaperProps","style","width","MenuItem","setTimeout","CollectorList","replayCollect","deleteCollect","collectorList","setCollectorList","handleGetList","a","getAllData","data","likedList","filter","item","liked","unLikedList","concat","collector","putData","useEffect","List","ListItem","FormControlLabel","control","Checkbox","icon","checkedIcon","checked","value","label","handleLiked","ListItemText","primary","secondary","edge","handleDelete","withRouter","drawer","setDrawer","messageInfo","setMessageInfo","showMessage","uid","indexOf","interpreter","getDatabaseInfo","databaseItem","addData","then","catch","err","String","deleteData","Fab","variant","ResultCard","Drawer","anchor","push","pathname","search","now","Editor","props","editorId","Doc","showHintTimeout","textarea","document","getElementById","this","codemirror","fromTextArea","lineNumbers","styleActiveLine","matchBrackets","mode","indentWithTabs","lineWrapping","theme","getDoc","_bindEditorEvent","_initEditorValue","setValue","on","editor","change","origin","clearTimeout","text","noHintString","includes","trim","checkChange","execCommand","getValue","code","border","React","Component","getCallFunctionName","callee","property","object","startTime","query","t","tid","gid","endTime","createNewStatement","start","end","body","BlockStatement","_gid","_parseToAst","funcNameMap","ast","parse","sourceType","traverse","Function","path","node","get","length","isEmptyFunction","scope","generateUidIdentifier","generateUid","parentNode","parentPath","left","findFunctionName","scopeInfo","startStatement","endStatement","newStatementBody","replaceWith","replaceFunction","enter","isProgram","rootScopeInfo","unshiftContainer","pushContainer","shiftProgramBody","skip","getTransformCode","currentTimerId","watcherCallback","_code","result","transformFromAstSync","stampTimerPool","watchTimerEnd","_tid","_uid","window","performance","getData","codeTimerData","child","addTime","addAsyncTime","createCodeTimerData","Object","keys","forEach","progress","currCode","updateProgress","UpdateProgress","updateHistoryTimer","updateHistoryResultData","changeHistoryTimer","initCodeRefValue","getChildrenData","syncChild","asyncChild","codeRef","toES5","msgType","msgVisible","baseCode","createRef","nextProps","current","resetCode","userCode","getEditorValue","transformData","e","fun","callback","codeTimer","TimerDataWatcher","bind","console","log","initTimerData","timerData","changeInfo","setState","Button","color","runCurrentApiTest","marginTop","Typography","gutterBottom","ref","closeMessage","Code","Content","HistoryView"],"mappings":"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","file":"static/js/10.a120a99e.chunk.js","sourcesContent":["import React, { SyntheticEvent } from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport Warning from \"@material-ui/icons/Warning\";\r\nimport Error from \"@material-ui/icons/Error\";\r\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\r\nimport Info from \"@material-ui/icons/Info\";\r\n\r\ninterface MessageProps {\r\n  visible: boolean;\r\n  message: string;\r\n  type?: string;\r\n  closed: () => void;\r\n}\r\n\r\nconst SnackBarIcon: React.FC<{ type: string }> = ({ type }) => {\r\n  if (type === \"success\") {\r\n    return <CheckCircle />;\r\n  }\r\n  if (type === \"warn\") {\r\n    return <Warning />;\r\n  }\r\n  if (type === \"error\") {\r\n    return <Error />;\r\n  }\r\n  return <Info />;\r\n};\r\n\r\nconst Message: React.FC<MessageProps> = ({\r\n  message,\r\n  visible,\r\n  closed,\r\n  type = \"info\",\r\n}) => {\r\n  const handleClose = (event: SyntheticEvent | MouseEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    closed();\r\n  };\r\n  return (\r\n    <span>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        autoHideDuration={3000}\r\n        open={visible}\r\n        onClose={handleClose}\r\n        className={\"message-box-\" + type}\r\n      >\r\n        <SnackbarContent\r\n          className=\"message-content\"\r\n          aria-describedby=\"client-snackbar\"\r\n          message={\r\n            <span id=\"client-snackbar\" className=\"message-content-txt\">\r\n              <SnackBarIcon type={type} />\r\n              {message}\r\n            </span>\r\n          }\r\n        />\r\n      </Snackbar>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { DatabaseCodeInfo } from \"./types\";\r\ntype CatchItem = {\r\n  baseInfo: DatabaseCodeInfo;\r\n  nameMap: NameMapCache;\r\n};\r\ntype NameMapCache = { [x: string]: string };\r\nconst CodeInfoCache: { [x: string]: CatchItem } = {};\r\n\r\nfunction setCodeInfoCache(baseInfo: DatabaseCodeInfo, nameMap: NameMapCache) {\r\n  CodeInfoCache[baseInfo.id] = { baseInfo: baseInfo, nameMap };\r\n}\r\nfunction delCodeInfoCache(id: string) {\r\n  delete CodeInfoCache[id];\r\n}\r\n\r\nfunction getCodeInfoCache(id: string) {\r\n  return CodeInfoCache[id].baseInfo;\r\n}\r\n\r\nfunction getNameMapCache(id: string) {\r\n  return CodeInfoCache[id].nameMap;\r\n}\r\n\r\nfunction getCodeInfoName(id: string, key: string) {\r\n  const codeInfo = getNameMapCache(id);\r\n  if (codeInfo) {\r\n    return codeInfo[key] || key;\r\n  }\r\n  return key;\r\n}\r\n\r\nexport {\r\n  setCodeInfoCache,\r\n  delCodeInfoCache,\r\n  getCodeInfoCache,\r\n  getCodeInfoName\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  deleteHistoryTimerData,\r\n  TimerDataInfo,\r\n  setCurrentCodeInfo\r\n} from \"@/actions/history\";\r\nimport { DatabaseCodeInfo } from \"@/utils/types\";\r\n\r\nexport default connect(\r\n  (state: any) => {\r\n    return { historyData: state.history };\r\n  },\r\n  (dispatch: any) => ({\r\n    deleteTimer(timerInfo: TimerDataInfo) {\r\n      dispatch(deleteHistoryTimerData(timerInfo));\r\n    },\r\n    setCurrCodeInfo(codeInfo: DatabaseCodeInfo) {\r\n      dispatch(setCurrentCodeInfo(codeInfo));\r\n    }\r\n  })\r\n);\r\n","export function dateFormat(date?: Date | number, format?: string): string {\r\n  let token = /d{1,4}|m{1,4}|yy(?:yy)?|H{1,2}|M{1,2}|S{1,2}/g;\r\n  if (Boolean(date)) {\r\n    date = date instanceof Date ? date : new Date(date as number);\r\n    let flags: { [x: string]: string } = {\r\n      yyyy: date.getFullYear().toString(),\r\n      mm: (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      dd: (\"0\" + date.getDate()).slice(-2),\r\n      HH: (\"0\" + date.getHours()).slice(-2),\r\n      MM: (\"0\" + date.getMinutes()).slice(-2),\r\n      SS: (\"0\" + date.getSeconds()).slice(-2)\r\n    };\r\n    if (!format) {\r\n      // 默认显示格式\r\n      format = \"yyyy-mm-dd HH:MM:SS\";\r\n    }\r\n    format = format.replace(token, function(match: string) {\r\n      if (match in flags) {\r\n        return flags[match];\r\n      }\r\n      return \"\";\r\n    });\r\n    return format;\r\n  }\r\n  return \"\";\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport { TimerDataInfo, TimerChild } from \"@/actions/history\";\r\nimport { dateFormat } from \"@/utils/date\";\r\n\r\ninterface FcProps {\r\n  info: TimerDataInfo;\r\n  collectTimer: (info: TimerDataInfo) => void;\r\n  deleteTimer: (timerInfo: TimerDataInfo) => void;\r\n}\r\n\r\nconst MyCard: React.FC<FcProps> = ({ info, deleteTimer, collectTimer }) => {\r\n  const [visible, setVisible] = useState<number>(1);\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  const showMenu = Boolean(anchorEl);\r\n  const resultClassName = info.status === 2 ? \"result-error\" : \"result-success\";\r\n\r\n  function openSettingMenu(event: React.MouseEvent<HTMLElement>) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function deleteCurrInfo() {\r\n    setVisible(0);\r\n    handleClose();\r\n    setTimeout(() => deleteTimer(info), 300);\r\n  }\r\n\r\n  function saveCurrentInfo() {\r\n    handleClose();\r\n    collectTimer(info);\r\n  }\r\n  return (\r\n    <aside className=\"result-card\">\r\n      <Grow in={Boolean(visible)}>\r\n        <Card>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" className={resultClassName}>\r\n                {info.status === 1 ? <Check /> : <Clear />}\r\n              </Avatar>\r\n            }\r\n            action={\r\n              <IconButton aria-label=\"settings\" onClick={openSettingMenu}>\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            }\r\n            title={info.name}\r\n            subheader={dateFormat(info.date, \"mm-dd HH:MM:SS\")}\r\n            className=\"result-card-header\"\r\n          />\r\n          <CardContent>\r\n            {info.children.map((childInfo: TimerChild, i: number) => (\r\n              <div className=\"result-card-item\" key={i}>\r\n                <span\r\n                  className={\r\n                    childInfo.async ? \"card-item-root async\" : \"card-item-root\"\r\n                  }\r\n                >\r\n                  {childInfo.name}\r\n                </span>\r\n                <span className=\"card-item-time\">{childInfo.time}ms</span>\r\n              </div>\r\n            ))}\r\n          </CardContent>\r\n          <Divider />\r\n          <CardContent>\r\n            {info.status === 1 ? (\r\n              <div className=\"result-active-success\">use: {info.useTime}ms</div>\r\n            ) : (\r\n              <div className=\"result-active-error\">{info.error}</div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grow>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={showMenu}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 120\r\n          }\r\n        }}\r\n      >\r\n        <MenuItem onClick={saveCurrentInfo}>Collect</MenuItem>\r\n        <MenuItem onClick={deleteCurrInfo}>Delete</MenuItem>\r\n      </Menu>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default MyCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { DatabaseItem } from \"@/utils/types\";\r\nimport { getAllData, putData } from \"@/utils/indexDB\";\r\nimport { dateFormat } from \"@/utils/date\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport PlayCircleFilled from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport Star from \"@material-ui/icons/Star\";\r\ninterface CollectorProps {\r\n  replayCollect: (item: DatabaseItem) => void;\r\n  deleteCollect: (item: DatabaseItem) => Promise<1 | 0>;\r\n}\r\n\r\nconst CollectorList: React.FC<CollectorProps> = ({\r\n  replayCollect,\r\n  deleteCollect\r\n}) => {\r\n  const [collectorList, setCollectorList] = useState<DatabaseItem[]>([]);\r\n  useEffect(() => {\r\n    handleGetList();\r\n  }, []);\r\n  async function handleGetList() {\r\n    const { data } = await getAllData();\r\n    if (data) {\r\n      const likedList = data.filter((item: DatabaseItem) => {\r\n        return item.liked;\r\n      });\r\n      const unLikedList = data.filter((item: DatabaseItem) => {\r\n        return !item.liked;\r\n      });\r\n      setCollectorList(likedList.concat(unLikedList));\r\n    }\r\n  }\r\n  async function handleDelete(info: DatabaseItem) {\r\n    const result = await deleteCollect(info);\r\n    if (result !== 1) return;\r\n    handleGetList();\r\n  }\r\n  async function handleLiked(collector: DatabaseItem) {\r\n    collector.liked = !collector.liked;\r\n    await putData(collector);\r\n    await handleGetList();\r\n  }\r\n  return (\r\n    <aside className=\"collector-box\">\r\n      <List>\r\n        {collectorList.map((collector: DatabaseItem) => (\r\n          <ListItem key={collector.id}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  icon={<StarBorder />}\r\n                  checkedIcon={<Star />}\r\n                  checked={collector.liked}\r\n                  value=\"checkedH\"\r\n                />\r\n              }\r\n              label=\"\"\r\n              onClick={() => handleLiked(collector)}\r\n            />\r\n            <ListItemText\r\n              primary={collector.timerInfo.name}\r\n              secondary={dateFormat(collector.timerInfo.date)}\r\n            />\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"play\"\r\n              onClick={() => replayCollect(collector)}\r\n            >\r\n              <PlayCircleFilled />\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"delete\"\r\n              onClick={() => handleDelete(collector)}\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default CollectorList;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport connect from \"../container/history\";\r\nimport { TimerDataInfo } from \"../actions/history\";\r\nimport { DatabaseItem, DatabaseCodeInfo } from \"@/utils/types\";\r\nimport ResultCard from \"./ResultCard\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport CollectorList from \"./CollectorList\";\r\nimport Message from \"./Message\";\r\nimport interpreter from \"@/utils/baseStatement\";\r\nimport { addData, deleteData } from \"@/utils/indexDB\";\r\nimport { getCodeInfoCache } from \"@/utils/codeInfoCache\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\ninterface FcProps extends RouteComponentProps {\r\n  historyData: TimerDataInfo[];\r\n  deleteTimer: (timerInfo: TimerDataInfo) => void;\r\n  setCurrCodeInfo: (codeInfo: DatabaseCodeInfo) => void;\r\n}\r\n\r\ninterface MessageInfo {\r\n  type: string;\r\n  message: string;\r\n  visible: boolean;\r\n}\r\n\r\nconst HistoryView: React.FC<FcProps> = ({\r\n  historyData,\r\n  deleteTimer,\r\n  history,\r\n  setCurrCodeInfo\r\n}) => {\r\n  const [drawer, setDrawer] = useState<boolean>(false);\r\n  const [messageInfo, setMessageInfo] = useState<MessageInfo>({\r\n    type: \"success\",\r\n    visible: false,\r\n    message: \"\"\r\n  });\r\n  function handleCloseDrawer() {\r\n    setDrawer(false);\r\n  }\r\n  function handleOpenDrawer() {\r\n    setDrawer(true);\r\n  }\r\n  function showMessage({ type, message }: { type: string; message: string }) {\r\n    setMessageInfo({\r\n      type,\r\n      message,\r\n      visible: true\r\n    });\r\n  }\r\n  function closeMessage() {\r\n    setMessageInfo({\r\n      ...messageInfo,\r\n      visible: false\r\n    });\r\n  }\r\n  function collectTimer(info: TimerDataInfo) {\r\n    const codeInfo =\r\n      info.uid.indexOf(\"code\") > -1\r\n        ? getCodeInfoCache(info.uid)\r\n        : interpreter.getDatabaseInfo(info.uid);\r\n    const databaseItem = {\r\n      timerInfo: info,\r\n      codeInfo: codeInfo,\r\n      type: codeInfo.type,\r\n      liked: false\r\n    };\r\n    addData(databaseItem)\r\n      .then(() => {\r\n        showMessage({\r\n          type: \"success\",\r\n          message: \"Saved timer record\"\r\n        });\r\n      })\r\n      .catch((err: any) => {\r\n        showMessage({\r\n          type: \"warn\",\r\n          message: String(err)\r\n        });\r\n      });\r\n  }\r\n\r\n  function replayCollect(item: DatabaseItem) {\r\n    if (item.type === 1) {\r\n      history.push({\r\n        pathname: \"/custom\",\r\n        search: \"?type=1\" + Date.now()\r\n      });\r\n    } else if (item.type === 2) {\r\n      history.push({\r\n        pathname: \"/custom\",\r\n        search: \"?type=2\" + Date.now()\r\n      });\r\n      setCurrCodeInfo(item.codeInfo);\r\n    } else if (item.type === 3) {\r\n      history.push({\r\n        pathname: \"/code\"\r\n      });\r\n    }\r\n    setCurrCodeInfo(item.codeInfo);\r\n    setDrawer(false);\r\n  }\r\n\r\n  async function deleteCollect(item: DatabaseItem) {\r\n    if (!item.id) return 0;\r\n    const { error } = await deleteData(item.id);\r\n    if (error) {\r\n      showMessage({\r\n        type: \"error\",\r\n        message: (error as ErrorEvent).message\r\n      });\r\n      return 0;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <aside className=\"history-box\">\r\n        <div className=\"collector-button\">\r\n          <Fab variant=\"extended\" aria-label=\"open\" onClick={handleOpenDrawer}>\r\n            <KeyboardArrowLeft />\r\n            Open Collector\r\n          </Fab>\r\n        </div>\r\n        {historyData.map((timerInfo: TimerDataInfo) => (\r\n          <ResultCard\r\n            key={timerInfo.id}\r\n            info={timerInfo}\r\n            deleteTimer={deleteTimer}\r\n            collectTimer={collectTimer}\r\n          />\r\n        ))}\r\n      </aside>\r\n      <Drawer anchor=\"right\" open={drawer} onClose={handleCloseDrawer}>\r\n        <CollectorList\r\n          replayCollect={replayCollect}\r\n          deleteCollect={deleteCollect}\r\n        />\r\n      </Drawer>\r\n      <Message\r\n        visible={messageInfo.visible}\r\n        type={messageInfo.type}\r\n        closed={closeMessage}\r\n        message={messageInfo.message}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(withRouter(HistoryView));\r\n","import React from \"react\";\r\nimport codemirror from \"codemirror\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/dracula.css\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\nimport \"codemirror/addon/hint/show-hint.js\";\r\nimport \"codemirror/addon/edit/matchbrackets\";\r\nimport \"codemirror/addon/hint/javascript-hint\";\r\nimport \"codemirror/addon/selection/active-line.js\";\r\n\r\nexport default class Editor extends React.Component<{ value?: string }> {\r\n  editorId: string;\r\n  Editor: codemirror.EditorFromTextArea | null;\r\n  Doc: codemirror.Doc | null;\r\n  showHintTimeout: any;\r\n  constructor(props: { value?: string }) {\r\n    super(props);\r\n    this.editorId = Date.now() + \"\";\r\n    this.Editor = null;\r\n    this.Doc = null;\r\n  }\r\n  componentDidMount() {\r\n    const textarea = document.getElementById(this.editorId);\r\n    this.Editor = codemirror.fromTextArea(textarea as HTMLTextAreaElement, {\r\n      lineNumbers: true,\r\n      styleActiveLine: true,\r\n      matchBrackets: true,\r\n      mode: \"text/javascript\",\r\n      indentWithTabs: true,\r\n      lineWrapping: true,\r\n      theme: \"dracula\"\r\n    });\r\n    this.Doc = this.Editor.getDoc();\r\n    this._bindEditorEvent();\r\n    this._initEditorValue();\r\n  }\r\n  private _initEditorValue() {\r\n    if (this.props.value) {\r\n      (this.Doc as codemirror.Doc).setValue(this.props.value);\r\n    }\r\n  }\r\n  private _bindEditorEvent() {\r\n    (this.Editor as codemirror.EditorFromTextArea).on(\r\n      \"change\",\r\n      (editor: CodeMirror.Editor, change) => {\r\n        //获取用户当前的编辑器中的编写的代码\r\n        if (change.origin === \"+input\") {\r\n          clearTimeout(this.showHintTimeout);\r\n          const [text] = change.text;\r\n\r\n          if (!checkChange(text)) {\r\n            return;\r\n          }\r\n          this.showHintTimeout = setTimeout(function() {\r\n            editor.execCommand(\"autocomplete\");\r\n          }, 300);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  public getEditorValue(): string {\r\n    if (!this.Doc) return \"\";\r\n    return this.Doc.getValue();\r\n  }\r\n  public resetCode(code: string) {\r\n    if (this.Doc) {\r\n      this.Doc.setValue(code);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"editor-content\">\r\n        <textarea id={this.editorId} name=\"code\" style={{ border: \"none\" }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst noHintString = [\"\", \"=\", \";\", \",\", \")\", \"}\", \"]\"];\r\n\r\nfunction checkChange(text: string | undefined) {\r\n  if (!text) return false;\r\n  if (noHintString.includes(text.trim())) return false;\r\n  return true;\r\n}\r\n","import { NodePath } from \"@babel/traverse\";\r\nimport * as t from \"@babel/types\";\r\n\r\ninterface QueryInfo {\r\n  gid: string;\r\n  tid: string;\r\n  uid: t.Identifier;\r\n}\r\n\r\ninterface TransformInfo<T> extends QueryInfo {\r\n  path: NodePath<T>;\r\n}\r\n\r\nfunction isEmptyFunction(path: NodePath<t.Function>): boolean {\r\n  const node: any = path.get(\"body\").node;\r\n  if (node.body) {\r\n    return !node.body.length;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction getCallFunctionName(callee: any): string {\r\n  if (callee.name) return callee.name;\r\n  if (callee.property && callee.property.name) return callee.property.name;\r\n  if (callee.object) return getCallFunctionName(callee.object.callee);\r\n  return \"\";\r\n}\r\n\r\nfunction findFunctionName(path: any): string {\r\n  const parentNode = path.parentPath.node;\r\n  let functionName = \"\";\r\n  if (parentNode.type === \"AssignmentExpression\") {\r\n    functionName = parentNode.left.property.name;\r\n  } else if (parentNode.type === \"VariableDeclarator\") {\r\n    functionName = parentNode.id.name;\r\n  } else if (parentNode.type === \"CallExpression\") {\r\n    functionName = \"<CallBack>\" + getCallFunctionName(parentNode.callee);\r\n  } else if (parentNode.type === \"NewExpression\") {\r\n    functionName = getCallFunctionName(parentNode.callee);\r\n  } else {\r\n    functionName = path.node.id ? path.node.id.name : \"anonymous\";\r\n  }\r\n\r\n  return functionName;\r\n}\r\n\r\nconst startTime = (query: QueryInfo) => {\r\n  var result = t.variableDeclaration(\"var\", [\r\n    t.variableDeclarator(\r\n      query.uid,\r\n      t.callExpression(t.identifier(\"__start\"), [\r\n        t.stringLiteral(query.tid),\r\n        t.stringLiteral(query.gid)\r\n      ])\r\n    )\r\n  ]);\r\n  return result;\r\n};\r\n\r\nconst endTime = (query: QueryInfo) => {\r\n  var result = t.expressionStatement(\r\n    t.callExpression(t.identifier(\"__end\"), [\r\n      t.stringLiteral(query.tid),\r\n      t.stringLiteral(query.gid),\r\n      query.uid\r\n    ])\r\n  );\r\n\r\n  return result;\r\n};\r\n\r\nconst createNewStatement = (\r\n  start: t.Statement,\r\n  end: t.Statement,\r\n  body: t.Statement[] = []\r\n) => {\r\n  const BlockStatement = t.blockStatement([\r\n    start,\r\n    t.tryStatement(t.blockStatement(body), null, t.blockStatement([end]))\r\n  ]);\r\n  return BlockStatement;\r\n};\r\n\r\nfunction replaceFunction({ gid, tid, uid, path }: TransformInfo<t.Function>) {\r\n  const startStatement = startTime({ gid, tid, uid });\r\n  const endStatement = endTime({ gid, tid, uid });\r\n  const newStatementBody = createNewStatement(\r\n    startStatement,\r\n    endStatement,\r\n    (path.node.body as any).body\r\n  );\r\n  path.get(\"body\").replaceWith(newStatementBody);\r\n}\r\n\r\nfunction shiftProgramBody({ gid, tid, uid, path }: TransformInfo<t.Program>) {\r\n  const startStatement = startTime({ gid, tid, uid });\r\n  const endStatement = endTime({ gid, tid, uid });\r\n  (path as any).unshiftContainer(\"body\", startStatement);\r\n  (path as any).pushContainer(\"body\", endStatement);\r\n}\r\n\r\nexport { isEmptyFunction, findFunctionName, replaceFunction, shiftProgramBody };\r\n","import { transformFromAstSync } from \"@babel/core\";\r\nimport { parse } from \"@babel/parser\";\r\nimport traverse, { NodePath } from \"@babel/traverse\";\r\nimport { TransformInfo } from \"./types\";\r\nimport * as t from \"@babel/types\";\r\nimport {\r\n  isEmptyFunction,\r\n  findFunctionName,\r\n  replaceFunction,\r\n  shiftProgramBody\r\n} from \"./transformCommon\";\r\n\r\ninterface ScopeInfo<T> {\r\n  gid: string;\r\n  tid: string;\r\n  uid: t.Identifier;\r\n  path: NodePath<T>;\r\n}\r\n\r\ntype FuncNameMap = { [x: string]: string };\r\n\r\nlet _gid = 0;\r\n\r\nfunction getGid() {\r\n  return \"code\" + ++_gid;\r\n}\r\n\r\nfunction _parseToAst(\r\n  code: string\r\n): { id: string; ast: t.File; funcNameMap: FuncNameMap } {\r\n  const gid = getGid();\r\n  const funcNameMap: FuncNameMap = {};\r\n\r\n  const ast = parse(code, { sourceType: \"module\" });\r\n  traverse(ast, {\r\n    Function(path) {\r\n      if (isEmptyFunction(path)) return;\r\n      const uid = path.scope.generateUidIdentifier(\"_uid\");\r\n      const tid = path.scope.generateUid(\"_tid\");\r\n      const name = findFunctionName(path);\r\n      const scopeInfo: ScopeInfo<t.Function> = { gid, uid, tid, path };\r\n\r\n      funcNameMap[tid] = name;\r\n\r\n      replaceFunction(scopeInfo);\r\n    }\r\n  });\r\n\r\n  traverse(ast, {\r\n    enter(path) {\r\n      if (path.isProgram()) {\r\n        const uid = path.scope.generateUidIdentifier(\"_uid\");\r\n        const rootScopeInfo: ScopeInfo<t.Program> = {\r\n          gid,\r\n          uid,\r\n          tid: gid,\r\n          path\r\n        };\r\n        funcNameMap[gid] = \"root\";\r\n        shiftProgramBody(rootScopeInfo);\r\n        path.skip();\r\n      }\r\n    }\r\n  });\r\n  return {\r\n    id: gid,\r\n    ast,\r\n    funcNameMap\r\n  };\r\n}\r\n\r\nfunction getTransformCode(_code: string): TransformInfo {\r\n  const { ast, id, funcNameMap } = _parseToAst(_code);\r\n  const result = transformFromAstSync(ast);\r\n  if (result) {\r\n    return { id, code: result.code, nameMap: funcNameMap };\r\n  }\r\n  return { id, code: \"\", nameMap: funcNameMap };\r\n}\r\n\r\nexport default getTransformCode;\r\n","import { ProcessTimerInfo, CodeTimerData } from \"./types\";\r\n\r\nlet currentTimerId: string;\r\nlet stampTimerPool: { [x: string]: ProcessTimerInfo } = {};\r\nlet watchTimerEnd: boolean = false;\r\nlet watcherCallback: (x: CodeTimerData) => void; // 监听收集数据后异步函数的回调函数\r\n\r\nlet uid = 0;\r\n\r\nfunction getUid() {\r\n  return ++uid + \"\";\r\n}\r\n\r\nfunction beginTimer(_gid: string, callback: (x: CodeTimerData) => void) {\r\n  currentTimerId = _gid;\r\n\r\n  stampTimerPool = {};\r\n\r\n  watchTimerEnd = false;\r\n\r\n  watcherCallback = callback;\r\n}\r\n\r\nfunction start(_tid: string, _gid: string): string {\r\n  if (currentTimerId !== _gid) return \"-1\";\r\n\r\n  const _uid = getUid();\r\n\r\n  const now = window.performance.now();\r\n\r\n  stampTimerPool[_uid] = {\r\n    _tid: _tid,\r\n    _gid: _gid,\r\n    start: now,\r\n    end: 0,\r\n    async: watchTimerEnd\r\n  };\r\n\r\n  return _uid;\r\n}\r\n\r\nfunction end(_tid: string, _gid: string, _uid: string) {\r\n  if (currentTimerId !== _gid) return;\r\n\r\n  const now = window.performance.now();\r\n\r\n  stampTimerPool[_uid].end = now;\r\n\r\n  watchTimerEnd && watcherCallback(getData());\r\n}\r\n\r\nfunction getData(): CodeTimerData {\r\n  watchTimerEnd = true; // 监听收集数据后异步函数的回调\r\n\r\n  const codeTimerData: any = createCodeTimerData(currentTimerId);\r\n\r\n  Object.keys(stampTimerPool).forEach((_uid: string) => {\r\n    const { end, start, _tid, async } = stampTimerPool[_uid];\r\n\r\n    if (end >= start) {\r\n      const time = end - start;\r\n\r\n      async\r\n        ? codeTimerData.addAsyncTime(time, _tid)\r\n        : codeTimerData.addTime(time, _tid);\r\n    }\r\n  });\r\n\r\n  return codeTimerData.getData();\r\n}\r\n\r\nfunction createCodeTimerData(_gid: string) {\r\n  const codeTimerData: CodeTimerData = {\r\n    id: _gid,\r\n    time: 0,\r\n    child: {},\r\n    async: {}\r\n  };\r\n\r\n  function addTime(time: number, _tid: string) {\r\n    if (_tid === _gid) {\r\n      codeTimerData.time = time;\r\n    } else {\r\n      codeTimerData.child[_tid] = codeTimerData.child[_tid]\r\n        ? (codeTimerData.child[_tid] += time)\r\n        : time;\r\n    }\r\n  }\r\n\r\n  function addAsyncTime(time: number, _tid: string) {\r\n    if (_tid === _gid) {\r\n      codeTimerData.time = time;\r\n    } else {\r\n      codeTimerData.async[_tid] = codeTimerData.async[_tid]\r\n        ? (codeTimerData.async[_tid] += time)\r\n        : time;\r\n    }\r\n  }\r\n\r\n  function getData() {\r\n    return codeTimerData;\r\n  }\r\n\r\n  return {\r\n    addTime,\r\n    addAsyncTime,\r\n    getData\r\n  };\r\n}\r\n\r\nexport { beginTimer, start, end, getData };\r\n","import { connect } from \"react-redux\";\r\nimport { UpdateProgress } from \"../actions/home\";\r\nimport {\r\n  updateHistoryResultData,\r\n  changeHistoryTimer,\r\n  TimerDataInfo,\r\n  ChangeTimerInfo\r\n} from \"../actions/history\";\r\nexport default connect(\r\n  (state: any) => ({ progress: state.progress, currCode: state.currCode }),\r\n  (dispatch: any) => ({\r\n    updateProgress(state: boolean) {\r\n      dispatch(UpdateProgress(state));\r\n    },\r\n    updateHistoryTimer(info: TimerDataInfo) {\r\n      dispatch(updateHistoryResultData(info));\r\n    },\r\n    changeHistoryTimer(info: ChangeTimerInfo) {\r\n      dispatch(changeHistoryTimer(info));\r\n    }\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Replay from \"@material-ui/icons/Replay\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Editor from \"@/components/Editor\";\r\nimport { TransformInfo, CodeTimerData, DatabaseCodeInfo } from \"@/utils/types\";\r\nimport { TimerDataInfo, ChangeTimerInfo, TimerChild } from \"@/actions/history\";\r\nimport getTransformCode from \"@/utils/codeTransform\";\r\nimport * as codeTimer from \"@/utils/codeTimer\";\r\nimport { setCodeInfoCache, getCodeInfoName } from \"@/utils/codeInfoCache\";\r\nimport Message from \"@/components/Message\";\r\nimport connect from \"@/container/code\";\r\n\r\nconst initCodeRefValue = `let i = 0;\r\n\r\nfunction test() {\r\n  i++\r\n}\r\n\r\nconst testFun = (d) => {\r\n  return d + 1\r\n}\r\n\r\nconst run = function(){\r\n  testFun(3)\r\n}\r\n\r\nrun()\r\n`;\r\n\r\ntype StringObject = { [x: string]: number };\r\n\r\nfunction getChildrenData(\r\n  id: string,\r\n  child: StringObject,\r\n  async: StringObject\r\n): TimerChild[] {\r\n  const syncChild: TimerChild[] = Object.keys(child).map((key: string) => ({\r\n    name: getCodeInfoName(id, key),\r\n    time: child[key],\r\n    async: false\r\n  }));\r\n\r\n  const asyncChild: TimerChild[] = Object.keys(async).map((key: string) => ({\r\n    name: getCodeInfoName(id, key),\r\n    time: async[key],\r\n    async: true\r\n  }));\r\n\r\n  return syncChild.concat(asyncChild);\r\n}\r\n\r\ninterface CodeTestProps {\r\n  progress: boolean;\r\n  updateProgress: (x: boolean) => void;\r\n  updateHistoryTimer: (x: TimerDataInfo) => void;\r\n  changeHistoryTimer: (x: ChangeTimerInfo) => void;\r\n  currCode: DatabaseCodeInfo;\r\n}\r\n\r\nclass CodeTest extends React.Component<CodeTestProps> {\r\n  codeRef: any;\r\n  state: {\r\n    toES5: boolean;\r\n    initCodeRefValue: string;\r\n    msgType: string;\r\n    message: string;\r\n    msgVisible: boolean;\r\n  };\r\n\r\n  constructor(props: CodeTestProps) {\r\n    super(props);\r\n    this.state = {\r\n      toES5: false,\r\n      msgType: \"info\",\r\n      message: \"\",\r\n      msgVisible: false,\r\n      initCodeRefValue:\r\n        props.currCode && props.currCode.type === 3\r\n          ? props.currCode.baseCode\r\n          : initCodeRefValue\r\n    };\r\n    this.codeRef = React.createRef();\r\n  }\r\n  shouldComponentUpdate(nextProps: CodeTestProps) {\r\n    if (nextProps.currCode === this.props.currCode) return true;\r\n    if (nextProps.currCode) {\r\n      this.codeRef.current.resetCode(nextProps.currCode.baseCode as string);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  runCurrentApiTest() {\r\n    if (this.props.progress) return;\r\n    this.props.updateProgress(true);\r\n    const userCode = this.codeRef.current.getEditorValue();\r\n\r\n    try {\r\n      var transformData = getTransformCode(userCode);\r\n    } catch (e) {\r\n      this.showMessage({ type: \"error\", message: e.message });\r\n      this.props.updateProgress(false);\r\n      return;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (transformData.code) {\r\n        let error = null;\r\n        try {\r\n          // eslint-disable-next-line\r\n          const fun = new Function(\"__start\", \"__end\", transformData.code);\r\n          codeTimer.beginTimer(\r\n            transformData.id,\r\n            this.TimerDataWatcher.bind(this)\r\n          );\r\n\r\n          fun(codeTimer.start, codeTimer.end);\r\n        } catch (e) {\r\n          console.log(\"error\");\r\n          error = e.message;\r\n        }\r\n\r\n        const result = codeTimer.getData();\r\n        if (error) {\r\n          result.error = error;\r\n        }\r\n        this.setCodeInfoCache(transformData, userCode);\r\n        this.initTimerData(result);\r\n        this.props.updateProgress(false);\r\n      }\r\n    }, 300);\r\n  }\r\n  initTimerData(data: CodeTimerData) {\r\n    const timerData: TimerDataInfo = {\r\n      id: data.id,\r\n      uid: data.id,\r\n      name: \"Code Test\",\r\n      status: data.error ? 2 : 1,\r\n      error: data.error,\r\n      startTime: 0,\r\n      endTime: 0,\r\n      children: [],\r\n      useTime: data.time,\r\n      date: Date.now()\r\n    };\r\n    timerData.children = getChildrenData(data.id, data.child, data.async);\r\n    this.props.updateHistoryTimer(timerData);\r\n  }\r\n  TimerDataWatcher(data: CodeTimerData) {\r\n    const changeInfo = {\r\n      id: data.id,\r\n      children: getChildrenData(data.id, data.child, data.async)\r\n    };\r\n    this.props.changeHistoryTimer(changeInfo);\r\n  }\r\n  setCodeInfoCache(info: TransformInfo, userCode: string) {\r\n    const codeInfo = {\r\n      id: info.id,\r\n      baseCode: userCode,\r\n      type: 3,\r\n      name: \"Code Test\"\r\n    };\r\n    setCodeInfoCache(codeInfo, info.nameMap);\r\n  }\r\n  showMessage({ type, message }: { type: string; message: string }) {\r\n    this.setState({\r\n      msgType: type,\r\n      message,\r\n      msgVisible: true\r\n    });\r\n  }\r\n  closeMessage() {\r\n    this.setState({\r\n      msgVisible: false\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <article className=\"code-main\">\r\n        <section>\r\n          <div className=\"component-title\">Test Cases</div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => this.runCurrentApiTest()}\r\n          >\r\n            Run Test\r\n            <Replay />\r\n          </Button>\r\n        </section>\r\n        <section style={{ marginTop: \"40px\" }}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Coding Your Test Cases:\r\n          </Typography>\r\n          <div className=\"code-editor-box\">\r\n            <Editor ref={this.codeRef} value={this.state.initCodeRefValue} />\r\n          </div>\r\n        </section>\r\n        <Message\r\n          visible={this.state.msgVisible}\r\n          type={this.state.msgType}\r\n          closed={() => this.closeMessage()}\r\n          message={this.state.message}\r\n        />\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(CodeTest);\r\n","import React from \"react\";\r\nimport HistoryView from \"@/components/HistoryView\";\r\nimport Content from \"./Content\";\r\n\r\nconst Code: React.FC = () => {\r\n  return (\r\n    <div className=\"code-box\">\r\n      <Content />\r\n      <HistoryView />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Code;\r\n"],"sourceRoot":""}